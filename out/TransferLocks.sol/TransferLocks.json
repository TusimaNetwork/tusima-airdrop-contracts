{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "BurnEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFERRER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addTransferLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "allowances",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "deadlines",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransferWithLocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        }
      ],
      "name": "decreaseTransferLockAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAvailableBalanceAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getTransferLockTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTransferLockTotalAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        }
      ],
      "name": "increaseTransferLockAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supplyCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "transferWithLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferrable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6130dd80620000f36000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c80635c975abb1161015c578063a457c2d7116100ce578063dd62ed3e11610087578063dd62ed3e14610561578063de6baccb14610574578063e63ab1e914610587578063e672ce3a1461059c578063e851b720146105af578063f1b50c1d146105c257600080fd5b8063a457c2d7146104e6578063a9059cbb146104f9578063b187984f1461050c578063d539139314610514578063d547741f1461053b578063d90964cd1461054e57600080fd5b806379cc67901161012057806379cc67901461049c5780638456cb59146104af57806391d14854146104b757806395d89b41146104ca578063a07c7ce4146104d2578063a217fddf146104de57600080fd5b80635c975abb146104435780636239d4a31461044e57806363ac5d97146104615780636c24a76f1461047657806370a082311461048957600080fd5b80632f2ff15d116102005780633def6038116101b95780633def6038146103dc5780633f4ba83a146103ef57806340c10f19146103f757806342966c681461040a5780634d12d4b61461041d57806355b6ed5c1461043057600080fd5b80632f2ff15d1461037d578063313ce56714610390578063355274ea146103a557806336568abe146103ae57806339509351146103c15780633b37d1d6146103d457600080fd5b80631f1eb79b116102525780631f1eb79b1461030257806323b872dd146103175780632403c08e1461032a578063248a9ca314610332578063282c51f3146103555780632909ae011461036a57600080fd5b806301ffc9a71461028f578063047a7ef1146102b757806306fdde03146102c8578063095ea7b3146102dd57806318160ddd146102f0575b600080fd5b6102a261029d366004612704565b6105ca565b60405190151581526020015b60405180910390f35b61016054610100900460ff166102a2565b6102d06105f5565b6040516102ae9190612752565b6102a26102eb3660046127a1565b610604565b6035545b6040519081526020016102ae565b6103156103103660046127cb565b61061c565b005b6102a2610325366004612808565b61065c565b6103156106b8565b6102f4610340366004612844565b600090815260fb602052604090206001015490565b6102f460008051602061302883398151915281565b6102f461037836600461285d565b610760565b61031561038b366004612878565b61076c565b60125b60405160ff90911681526020016102ae565b61012d546102f4565b6103156103bc366004612878565b610796565b6102a26103cf3660046127a1565b610810565b610315610832565b6103156103ea3660046128f0565b6108a6565b610315610a17565b6103156104053660046127a1565b610a3a565b610315610418366004612844565b610a6e565b61031561042b366004612a2d565b610ab9565b61039361043e366004612aa9565b610dd6565b60975460ff166102a2565b61031561045c3660046127cb565b610e28565b6102f460008051602061306883398151915281565b6102f461048436600461285d565b610e5b565b6102f461049736600461285d565b610e67565b6103156104aa3660046127a1565b610e85565b610315610ed1565b6102a26104c5366004612878565b610ef1565b6102d0610f1c565b6101605460ff166102a2565b6102f4600081565b6102a26104f43660046127a1565b610fae565b6102a26105073660046127a1565b611034565b610315611087565b6102f47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610315610549366004612878565b611133565b6102f461055c3660046127a1565b611158565b6102f461056f366004612aa9565b611164565b610315610582366004612ad3565b61118f565b6102f460008051602061308883398151915281565b6103156105aa366004612b06565b611288565b6102f46105bd3660046127a1565b611303565b610315611326565b60006001600160e01b03198216632c892b1760e11b14806105ef57506105ef826113ad565b92915050565b60606105ff6113b8565b905090565b6000336106128185856113c7565b5060019392505050565b336001600160a01b0383160361064d5760405162461bcd60e51b815260040161064490612b28565b60405180910390fd5b6106583383836114eb565b5050565b600061067660008051602061306883398151915233610ef1565b80610689575061016054610100900460ff165b6106a55760405162461bcd60e51b815260040161064490612b85565b6106b0848484611644565b949350505050565b60006106c38161165d565b6106db60008051602061302883398151915233610ef1565b806106e957506101605460ff165b6107055760405162461bcd60e51b815260040161064490612bca565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b60006105ef8242611667565b600082815260fb60205260409020600101546107878161165d565b610791838361174e565b505050565b6001600160a01b03811633146108065760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610644565b61065882826117d4565b6000336106128185856108238383611164565b61082d9190612c17565b6113c7565b600061083d8161165d565b6101605460ff16156108915760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c6564000000006044820152606401610644565b610160805460ff191660011790556107123390565b84831461091b5760405162461bcd60e51b815260206004820152603c60248201527f5472616e736665724c6f636b3a20726563697069656e747320616e6420616d6f60448201527f756e7473206d757374206265207468652073616d65206c656e677468000000006064820152608401610644565b8481146109905760405162461bcd60e51b815260206004820152603e60248201527f5472616e736665724c6f636b3a20726563697069656e747320616e642064656160448201527f646c696e6573206d757374206265207468652073616d65206c656e67746800006064820152608401610644565b60005b85811015610a0e576109fc8787838181106109b0576109b0612c2a565b90506020020160208101906109c5919061285d565b8686848181106109d7576109d7612c2a565b905060200201358585858181106109f0576109f0612c2a565b9050602002013561118f565b80610a0681612c40565b915050610993565b50505050505050565b600080516020613088833981519152610a2f8161165d565b610a3761183b565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a648161165d565b610791838361188d565b610a8660008051602061302883398151915233610ef1565b80610a9457506101605460ff165b610ab05760405162461bcd60e51b815260040161064490612bca565b610a3781611897565b600054610100900460ff1615808015610ad95750600054600160ff909116105b80610af35750303b158015610af3575060005460ff166001145b610b565760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610644565b6000805460ff191660011790558015610b79576000805461ff0019166101001790555b6001600160a01b038516610bcf5760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f000000006044820152606401610644565b6040805160208082015260009181018290526060016040516020818303038152906040528051906020012090508085604051602001610c0e9190612752565b6040516020818303038152906040528051906020012003610c7f5760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b6064820152608401610644565b8084604051602001610c919190612752565b6040516020818303038152906040528051906020012003610d045760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b6064820152608401610644565b610d0c6118a1565b610d146118a1565b610d1d836118ca565b610d2785856118fa565b610d2f61192b565b610d3a60008761174e565b610d647f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761174e565b610d7c6000805160206130888339815191528761174e565b50610160805461ffff191690558015610dcf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0380831660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a8146539116020908152604080832093851683529290529081205460ff165b9392505050565b336001600160a01b03831603610e505760405162461bcd60e51b815260040161064490612b28565b61065833838361195a565b60006105ef8242611303565b6001600160a01b0381166000908152603360205260408120546105ef565b610e9d60008051602061302883398151915233610ef1565b80610eab57506101605460ff165b610ec75760405162461bcd60e51b815260040161064490612bca565b6106588282611a91565b600080516020613088833981519152610ee98161165d565b610a37611aa6565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060378054610f2b90612c59565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5790612c59565b8015610fa45780601f10610f7957610100808354040283529160200191610fa4565b820191906000526020600020905b815481529060010190602001808311610f8757829003601f168201915b5050505050905090565b60003381610fbc8286611164565b90508381101561101c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610644565b61102982868684036113c7565b506001949350505050565b600061104e60008051602061306883398151915233610ef1565b80611061575061016054610100900460ff165b61107d5760405162461bcd60e51b815260040161064490612b85565b610e218383611ae3565b60006110928161165d565b6110aa60008051602061306883398151915233610ef1565b806110bd575061016054610100900460ff165b6110d95760405162461bcd60e51b815260040161064490612b85565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff16604051610755911515815260200190565b600082815260fb602052604090206001015461114e8161165d565b61079183836117d4565b6000610e218383611667565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b8181600082116111b15760405162461bcd60e51b815260040161064490612c93565b4281116111d05760405162461bcd60e51b815260040161064490612ce1565b6111da3342611303565b8211156111f95760405162461bcd60e51b815260040161064490612d2d565b6001600160a01b0385161580159061121a57506001600160a01b0385163314155b6112665760405162461bcd60e51b815260206004820152601f60248201527f5472616e736665724c6f636b3a20696e76616c696420726563697069656e74006044820152606401610644565b611272853360016114eb565b61127d338686611aed565b610dcf858585611ca3565b8181600082116112aa5760405162461bcd60e51b815260040161064490612c93565b4281116112c95760405162461bcd60e51b815260040161064490612ce1565b6112d33342611303565b8211156112f25760405162461bcd60e51b815260040161064490612d2d565b6112fd338585611ca3565b50505050565b6000806113108484611667565b90508061131c85610e67565b6106b09190612d81565b60006113318161165d565b61016054610100900460ff16156113965760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b6064820152608401610644565b610160805461ff0019166101001790556110e73390565b60006105ef82611fa7565b606060368054610f2b90612c59565b6001600160a01b0383166114295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610644565b6001600160a01b03821661148a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610644565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391160209081526040808320938616835292905220546000805160206130488339815191529060ff838116911610156115a35760405162461bcd60e51b815260206004820152602560248201527f5472616e736665724c6f636b733a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b6064820152608401610644565b6001600160a01b0384166000908152600382016020526040812080548492906115d090849060ff16612d94565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038681166000908152600185016020908152604080832093891683529290529081208054869450909261162691859116612d94565b92506101000a81548160ff021916908360ff16021790555050505050565b600033611652858285611fdc565b611029858585611aed565b610a378133612050565b6001600160a01b03821660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a814653914602052604081205460008051602061304883398151915290829060ff165b6001600160a01b038616600090815260058401602052604090205460ff168111611745576001600160a01b0386166000908152602084815260408083208484529091529020600101548511611733576001600160a01b0386166000908152602084815260408083208484529091529020546117309083612c17565b91505b8061173d81612c40565b9150506116b5565b50949350505050565b6117588282610ef1565b61065857600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117903390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117de8282610ef1565b1561065857600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6118436120a9565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61065882826120f2565b610a373382612162565b600054610100900460ff166118c85760405162461bcd60e51b815260040161064490612dad565b565b600054610100900460ff166118f15760405162461bcd60e51b815260040161064490612dad565b610a37816122a2565b600054610100900460ff166119215760405162461bcd60e51b815260040161064490612dad565b6106588282612317565b600054610100900460ff166119525760405162461bcd60e51b815260040161064490612dad565b6118c8612357565b6001600160a01b03831660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391360209081526040808320547fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391290925290912054600080516020613048833981519152916119dd9160ff9182169116612df8565b60ff168260ff6119ed9190612d94565b60ff161015611a0e5760405162461bcd60e51b815260040161064490612e11565b6001600160a01b038416600090815260038201602052604081208054849290611a3b90849060ff16612df8565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038681166000908152600185016020908152604080832093891683529290529081208054869450909261162691859116612df8565b611a9c823383611fdc565b6106588282612162565b611aae61238a565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118703390565b6000336106128185855b6001600160a01b038316611b515760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610644565b6001600160a01b038216611bb35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610644565b611bbe8383836123d0565b6001600160a01b03831660009081526033602052604090205481811015611c365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610644565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c969086815260200190565b60405180910390a36112fd565b6000805160206130488339815191525b6001600160a01b038416600090815260028201602052604090205460ff1615801590611d0e57506001600160a01b0384166000908152602082815260408083206004850183528184205460ff16845290915290206001015442115b15611ddb576001600160a01b03841660008181526020838152604080832060048601808452828520805460ff908116875292855292852085815560018181018790556002820187905560039091018690559585529092528054909291611d7691859116612df8565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038616600090815260028401602052604081208054600194509092611dbe91859116612d94565b92506101000a81548160ff021916908360ff160217905550611cb3565b6001600160a01b03841660009081526003820160209081526040808320546002850190925290912054611e149160ff9081169116612df8565b60ff16600160ff611e259190612d94565b60ff161015611e465760405162461bcd60e51b815260040161064490612e11565b6001600160a01b03841660008181526002808401602090815260408084205481516080810183528981528084018981528184018781526060830188815298885289865284882060ff9094168089529390955292862090518155915160018301559151928101929092559251600390910155819003611efc576001600160a01b03851660009081526004830160209081526040808320805460ff199081169091556005860190925290912080549091169055611f5a565b6001600160a01b03851660008181526005840160208181526040808420805488845282862060ff898116808952828752858920938216600390940193909355835416875284529185206002018290559490935252815460ff19161790555b6001600160a01b03851660009081526002830160205260408120805460019290611f8890849060ff16612df8565b92506101000a81548160ff021916908360ff1602179055505050505050565b60006001600160e01b03198216637965db0b60e01b14806105ef57506301ffc9a760e01b6001600160e01b03198316146105ef565b6000611fe88484611164565b905060001981146112fd57818110156120435760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610644565b6112fd84848484036113c7565b61205a8282610ef1565b6106585761206781612481565b612072836020612493565b604051602001612083929190612e6e565b60408051601f198184030181529082905262461bcd60e51b825261064491600401612752565b60975460ff166118c85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610644565b61012d548161210060355490565b61210a9190612c17565b11156121585760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610644565b610658828261262f565b6001600160a01b0382166121c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610644565b6121ce826000836123d0565b6001600160a01b038216600090815260336020526040902054818110156122425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610644565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166122c95760405162461bcd60e51b815260040161064490612dad565b600081116123115760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610644565b61012d55565b600054610100900460ff1661233e5760405162461bcd60e51b815260040161064490612dad565b603661234a8382612f31565b5060376107918282612f31565b600054610100900460ff1661237e5760405162461bcd60e51b815260040161064490612dad565b6097805460ff19169055565b60975460ff16156118c85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610644565b60006123db84610760565b90506000811180156123f55750816123f285610e67565b10155b1561247657808261240586610e67565b61240f9190612d81565b10156124765760405162461bcd60e51b815260206004820152603060248201527f5472616e736665724c6f636b3a2074686973206578636565647320796f75722060448201526f756e6c6f636b65642062616c616e636560801b6064820152608401610644565b6112fd8484846126fc565b60606105ef6001600160a01b03831660145b606060006124a2836002612ff1565b6124ad906002612c17565b67ffffffffffffffff8111156124c5576124c561298a565b6040519080825280601f01601f1916602001820160405280156124ef576020820181803683370190505b509050600360fc1b8160008151811061250a5761250a612c2a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061253957612539612c2a565b60200101906001600160f81b031916908160001a905350600061255d846002612ff1565b612568906001612c17565b90505b60018111156125e0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061259c5761259c612c2a565b1a60f81b8282815181106125b2576125b2612c2a565b60200101906001600160f81b031916908160001a90535060049490941c936125d981613010565b905061256b565b508315610e215760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610644565b6001600160a01b0382166126855760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610644565b612691600083836123d0565b80603560008282546126a39190612c17565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61079161238a565b60006020828403121561271657600080fd5b81356001600160e01b031981168114610e2157600080fd5b60005b83811015612749578181015183820152602001612731565b50506000910152565b602081526000825180602084015261277181604085016020870161272e565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461279c57600080fd5b919050565b600080604083850312156127b457600080fd5b6127bd83612785565b946020939093013593505050565b600080604083850312156127de57600080fd5b6127e783612785565b9150602083013560ff811681146127fd57600080fd5b809150509250929050565b60008060006060848603121561281d57600080fd5b61282684612785565b925061283460208501612785565b9150604084013590509250925092565b60006020828403121561285657600080fd5b5035919050565b60006020828403121561286f57600080fd5b610e2182612785565b6000806040838503121561288b57600080fd5b8235915061289b60208401612785565b90509250929050565b60008083601f8401126128b657600080fd5b50813567ffffffffffffffff8111156128ce57600080fd5b6020830191508360208260051b85010111156128e957600080fd5b9250929050565b6000806000806000806060878903121561290957600080fd5b863567ffffffffffffffff8082111561292157600080fd5b61292d8a838b016128a4565b9098509650602089013591508082111561294657600080fd5b6129528a838b016128a4565b9096509450604089013591508082111561296b57600080fd5b5061297889828a016128a4565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126129b157600080fd5b813567ffffffffffffffff808211156129cc576129cc61298a565b604051601f8301601f19908116603f011681019082821181831017156129f4576129f461298a565b81604052838152866020858801011115612a0d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215612a4357600080fd5b612a4c85612785565b9350602085013567ffffffffffffffff80821115612a6957600080fd5b612a75888389016129a0565b94506040870135915080821115612a8b57600080fd5b50612a98878288016129a0565b949793965093946060013593505050565b60008060408385031215612abc57600080fd5b612ac583612785565b915061289b60208401612785565b600080600060608486031215612ae857600080fd5b612af184612785565b95602085013595506040909401359392505050565b60008060408385031215612b1957600080fd5b50508035926020909101359150565b60208082526038908201527f5472616e736665724c6f636b3a206163636f756e747320646f206e6f74206e6560408201527f656420746f20617070726f7665207468656d73656c7665730000000000000000606082015260800190565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105ef576105ef612c01565b634e487b7160e01b600052603260045260246000fd5b600060018201612c5257612c52612c01565b5060010190565b600181811c90821680612c6d57607f821691505b602082108103612c8d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f5472616e736665724c6f636b3a20616d6f756e74206d7573742062652067726560408201526d61746572207468616e207a65726f60901b606082015260800190565b6020808252602c908201527f5472616e736665724c6f636b3a20646561646c696e65206d757374206265206960408201526b6e207468652066757475726560a01b606082015260800190565b60208082526034908201527f5472616e736665724c6f636b3a20616d6f756e742063616e6e6f742065786365604082015273656420617661696c61626c652062616c616e636560601b606082015260800190565b818103818111156105ef576105ef612c01565b60ff82811682821603908111156105ef576105ef612c01565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60ff81811683821601908111156105ef576105ef612c01565b6020808252603d908201527f5472616e736665724c6f636b733a2063616e6e6f7420657863656564206d617860408201527f206163636f756e74206c6f636b7320616e6420616c6c6f77616e636573000000606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ea681601785016020880161272e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612ed781602884016020880161272e565b01602801949350505050565b601f82111561079157600081815260208120601f850160051c81016020861015612f0a5750805b601f850160051c820191505b81811015612f2957828155600101612f16565b505050505050565b815167ffffffffffffffff811115612f4b57612f4b61298a565b612f5f81612f598454612c59565b84612ee3565b602080601f831160018114612f945760008415612f7c5750858301515b600019600386901b1c1916600185901b178555612f29565b600085815260208120601f198616915b82811015612fc357888601518255948401946001909101908401612fa4565b5085821015612fe15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081600019048311821515161561300b5761300b612c01565b500290565b60008161301f5761301f612c01565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848de59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a8146539109c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa2646970667358221220d8a7188cd55f7469417b2443aca3c058828f7ff97c61ba059c574e6b7201855564736f6c63430008100033",
    "sourceMap": "821:4538:30:-:0;;;;;;;;;;;;-1:-1:-1;2661:22:26;:20;:22::i;:::-;821:4538:30;;5939:280:36;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:36;;216:2:73;5998:66:36;;;198:21:73;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:73;;;338:37;392:19;;5998:66:36;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:36;6140:15;6125:30;;;;;;6174:28;;564:36:73;;;6174:28:36;;552:2:73;537:18;6174:28:36;;;;;;;6074:139;5939:280::o;422:184:73:-;821:4538:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061028a5760003560e01c80635c975abb1161015c578063a457c2d7116100ce578063dd62ed3e11610087578063dd62ed3e14610561578063de6baccb14610574578063e63ab1e914610587578063e672ce3a1461059c578063e851b720146105af578063f1b50c1d146105c257600080fd5b8063a457c2d7146104e6578063a9059cbb146104f9578063b187984f1461050c578063d539139314610514578063d547741f1461053b578063d90964cd1461054e57600080fd5b806379cc67901161012057806379cc67901461049c5780638456cb59146104af57806391d14854146104b757806395d89b41146104ca578063a07c7ce4146104d2578063a217fddf146104de57600080fd5b80635c975abb146104435780636239d4a31461044e57806363ac5d97146104615780636c24a76f1461047657806370a082311461048957600080fd5b80632f2ff15d116102005780633def6038116101b95780633def6038146103dc5780633f4ba83a146103ef57806340c10f19146103f757806342966c681461040a5780634d12d4b61461041d57806355b6ed5c1461043057600080fd5b80632f2ff15d1461037d578063313ce56714610390578063355274ea146103a557806336568abe146103ae57806339509351146103c15780633b37d1d6146103d457600080fd5b80631f1eb79b116102525780631f1eb79b1461030257806323b872dd146103175780632403c08e1461032a578063248a9ca314610332578063282c51f3146103555780632909ae011461036a57600080fd5b806301ffc9a71461028f578063047a7ef1146102b757806306fdde03146102c8578063095ea7b3146102dd57806318160ddd146102f0575b600080fd5b6102a261029d366004612704565b6105ca565b60405190151581526020015b60405180910390f35b61016054610100900460ff166102a2565b6102d06105f5565b6040516102ae9190612752565b6102a26102eb3660046127a1565b610604565b6035545b6040519081526020016102ae565b6103156103103660046127cb565b61061c565b005b6102a2610325366004612808565b61065c565b6103156106b8565b6102f4610340366004612844565b600090815260fb602052604090206001015490565b6102f460008051602061302883398151915281565b6102f461037836600461285d565b610760565b61031561038b366004612878565b61076c565b60125b60405160ff90911681526020016102ae565b61012d546102f4565b6103156103bc366004612878565b610796565b6102a26103cf3660046127a1565b610810565b610315610832565b6103156103ea3660046128f0565b6108a6565b610315610a17565b6103156104053660046127a1565b610a3a565b610315610418366004612844565b610a6e565b61031561042b366004612a2d565b610ab9565b61039361043e366004612aa9565b610dd6565b60975460ff166102a2565b61031561045c3660046127cb565b610e28565b6102f460008051602061306883398151915281565b6102f461048436600461285d565b610e5b565b6102f461049736600461285d565b610e67565b6103156104aa3660046127a1565b610e85565b610315610ed1565b6102a26104c5366004612878565b610ef1565b6102d0610f1c565b6101605460ff166102a2565b6102f4600081565b6102a26104f43660046127a1565b610fae565b6102a26105073660046127a1565b611034565b610315611087565b6102f47f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610315610549366004612878565b611133565b6102f461055c3660046127a1565b611158565b6102f461056f366004612aa9565b611164565b610315610582366004612ad3565b61118f565b6102f460008051602061308883398151915281565b6103156105aa366004612b06565b611288565b6102f46105bd3660046127a1565b611303565b610315611326565b60006001600160e01b03198216632c892b1760e11b14806105ef57506105ef826113ad565b92915050565b60606105ff6113b8565b905090565b6000336106128185856113c7565b5060019392505050565b336001600160a01b0383160361064d5760405162461bcd60e51b815260040161064490612b28565b60405180910390fd5b6106583383836114eb565b5050565b600061067660008051602061306883398151915233610ef1565b80610689575061016054610100900460ff165b6106a55760405162461bcd60e51b815260040161064490612b85565b6106b0848484611644565b949350505050565b60006106c38161165d565b6106db60008051602061302883398151915233610ef1565b806106e957506101605460ff165b6107055760405162461bcd60e51b815260040161064490612bca565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b60006105ef8242611667565b600082815260fb60205260409020600101546107878161165d565b610791838361174e565b505050565b6001600160a01b03811633146108065760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610644565b61065882826117d4565b6000336106128185856108238383611164565b61082d9190612c17565b6113c7565b600061083d8161165d565b6101605460ff16156108915760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c6564000000006044820152606401610644565b610160805460ff191660011790556107123390565b84831461091b5760405162461bcd60e51b815260206004820152603c60248201527f5472616e736665724c6f636b3a20726563697069656e747320616e6420616d6f60448201527f756e7473206d757374206265207468652073616d65206c656e677468000000006064820152608401610644565b8481146109905760405162461bcd60e51b815260206004820152603e60248201527f5472616e736665724c6f636b3a20726563697069656e747320616e642064656160448201527f646c696e6573206d757374206265207468652073616d65206c656e67746800006064820152608401610644565b60005b85811015610a0e576109fc8787838181106109b0576109b0612c2a565b90506020020160208101906109c5919061285d565b8686848181106109d7576109d7612c2a565b905060200201358585858181106109f0576109f0612c2a565b9050602002013561118f565b80610a0681612c40565b915050610993565b50505050505050565b600080516020613088833981519152610a2f8161165d565b610a3761183b565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a648161165d565b610791838361188d565b610a8660008051602061302883398151915233610ef1565b80610a9457506101605460ff165b610ab05760405162461bcd60e51b815260040161064490612bca565b610a3781611897565b600054610100900460ff1615808015610ad95750600054600160ff909116105b80610af35750303b158015610af3575060005460ff166001145b610b565760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610644565b6000805460ff191660011790558015610b79576000805461ff0019166101001790555b6001600160a01b038516610bcf5760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f000000006044820152606401610644565b6040805160208082015260009181018290526060016040516020818303038152906040528051906020012090508085604051602001610c0e9190612752565b6040516020818303038152906040528051906020012003610c7f5760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b6064820152608401610644565b8084604051602001610c919190612752565b6040516020818303038152906040528051906020012003610d045760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b6064820152608401610644565b610d0c6118a1565b610d146118a1565b610d1d836118ca565b610d2785856118fa565b610d2f61192b565b610d3a60008761174e565b610d647f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761174e565b610d7c6000805160206130888339815191528761174e565b50610160805461ffff191690558015610dcf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0380831660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a8146539116020908152604080832093851683529290529081205460ff165b9392505050565b336001600160a01b03831603610e505760405162461bcd60e51b815260040161064490612b28565b61065833838361195a565b60006105ef8242611303565b6001600160a01b0381166000908152603360205260408120546105ef565b610e9d60008051602061302883398151915233610ef1565b80610eab57506101605460ff165b610ec75760405162461bcd60e51b815260040161064490612bca565b6106588282611a91565b600080516020613088833981519152610ee98161165d565b610a37611aa6565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060378054610f2b90612c59565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5790612c59565b8015610fa45780601f10610f7957610100808354040283529160200191610fa4565b820191906000526020600020905b815481529060010190602001808311610f8757829003601f168201915b5050505050905090565b60003381610fbc8286611164565b90508381101561101c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610644565b61102982868684036113c7565b506001949350505050565b600061104e60008051602061306883398151915233610ef1565b80611061575061016054610100900460ff165b61107d5760405162461bcd60e51b815260040161064490612b85565b610e218383611ae3565b60006110928161165d565b6110aa60008051602061306883398151915233610ef1565b806110bd575061016054610100900460ff165b6110d95760405162461bcd60e51b815260040161064490612b85565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff16604051610755911515815260200190565b600082815260fb602052604090206001015461114e8161165d565b61079183836117d4565b6000610e218383611667565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b8181600082116111b15760405162461bcd60e51b815260040161064490612c93565b4281116111d05760405162461bcd60e51b815260040161064490612ce1565b6111da3342611303565b8211156111f95760405162461bcd60e51b815260040161064490612d2d565b6001600160a01b0385161580159061121a57506001600160a01b0385163314155b6112665760405162461bcd60e51b815260206004820152601f60248201527f5472616e736665724c6f636b3a20696e76616c696420726563697069656e74006044820152606401610644565b611272853360016114eb565b61127d338686611aed565b610dcf858585611ca3565b8181600082116112aa5760405162461bcd60e51b815260040161064490612c93565b4281116112c95760405162461bcd60e51b815260040161064490612ce1565b6112d33342611303565b8211156112f25760405162461bcd60e51b815260040161064490612d2d565b6112fd338585611ca3565b50505050565b6000806113108484611667565b90508061131c85610e67565b6106b09190612d81565b60006113318161165d565b61016054610100900460ff16156113965760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b6064820152608401610644565b610160805461ff0019166101001790556110e73390565b60006105ef82611fa7565b606060368054610f2b90612c59565b6001600160a01b0383166114295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610644565b6001600160a01b03821661148a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610644565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391160209081526040808320938616835292905220546000805160206130488339815191529060ff838116911610156115a35760405162461bcd60e51b815260206004820152602560248201527f5472616e736665724c6f636b733a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b6064820152608401610644565b6001600160a01b0384166000908152600382016020526040812080548492906115d090849060ff16612d94565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038681166000908152600185016020908152604080832093891683529290529081208054869450909261162691859116612d94565b92506101000a81548160ff021916908360ff16021790555050505050565b600033611652858285611fdc565b611029858585611aed565b610a378133612050565b6001600160a01b03821660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a814653914602052604081205460008051602061304883398151915290829060ff165b6001600160a01b038616600090815260058401602052604090205460ff168111611745576001600160a01b0386166000908152602084815260408083208484529091529020600101548511611733576001600160a01b0386166000908152602084815260408083208484529091529020546117309083612c17565b91505b8061173d81612c40565b9150506116b5565b50949350505050565b6117588282610ef1565b61065857600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117903390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117de8282610ef1565b1561065857600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6118436120a9565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61065882826120f2565b610a373382612162565b600054610100900460ff166118c85760405162461bcd60e51b815260040161064490612dad565b565b600054610100900460ff166118f15760405162461bcd60e51b815260040161064490612dad565b610a37816122a2565b600054610100900460ff166119215760405162461bcd60e51b815260040161064490612dad565b6106588282612317565b600054610100900460ff166119525760405162461bcd60e51b815260040161064490612dad565b6118c8612357565b6001600160a01b03831660009081527fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391360209081526040808320547fde59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a81465391290925290912054600080516020613048833981519152916119dd9160ff9182169116612df8565b60ff168260ff6119ed9190612d94565b60ff161015611a0e5760405162461bcd60e51b815260040161064490612e11565b6001600160a01b038416600090815260038201602052604081208054849290611a3b90849060ff16612df8565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038681166000908152600185016020908152604080832093891683529290529081208054869450909261162691859116612df8565b611a9c823383611fdc565b6106588282612162565b611aae61238a565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118703390565b6000336106128185855b6001600160a01b038316611b515760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610644565b6001600160a01b038216611bb35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610644565b611bbe8383836123d0565b6001600160a01b03831660009081526033602052604090205481811015611c365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610644565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c969086815260200190565b60405180910390a36112fd565b6000805160206130488339815191525b6001600160a01b038416600090815260028201602052604090205460ff1615801590611d0e57506001600160a01b0384166000908152602082815260408083206004850183528184205460ff16845290915290206001015442115b15611ddb576001600160a01b03841660008181526020838152604080832060048601808452828520805460ff908116875292855292852085815560018181018790556002820187905560039091018690559585529092528054909291611d7691859116612df8565b82546101009290920a60ff8181021990931691831602179091556001600160a01b038616600090815260028401602052604081208054600194509092611dbe91859116612d94565b92506101000a81548160ff021916908360ff160217905550611cb3565b6001600160a01b03841660009081526003820160209081526040808320546002850190925290912054611e149160ff9081169116612df8565b60ff16600160ff611e259190612d94565b60ff161015611e465760405162461bcd60e51b815260040161064490612e11565b6001600160a01b03841660008181526002808401602090815260408084205481516080810183528981528084018981528184018781526060830188815298885289865284882060ff9094168089529390955292862090518155915160018301559151928101929092559251600390910155819003611efc576001600160a01b03851660009081526004830160209081526040808320805460ff199081169091556005860190925290912080549091169055611f5a565b6001600160a01b03851660008181526005840160208181526040808420805488845282862060ff898116808952828752858920938216600390940193909355835416875284529185206002018290559490935252815460ff19161790555b6001600160a01b03851660009081526002830160205260408120805460019290611f8890849060ff16612df8565b92506101000a81548160ff021916908360ff1602179055505050505050565b60006001600160e01b03198216637965db0b60e01b14806105ef57506301ffc9a760e01b6001600160e01b03198316146105ef565b6000611fe88484611164565b905060001981146112fd57818110156120435760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610644565b6112fd84848484036113c7565b61205a8282610ef1565b6106585761206781612481565b612072836020612493565b604051602001612083929190612e6e565b60408051601f198184030181529082905262461bcd60e51b825261064491600401612752565b60975460ff166118c85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610644565b61012d548161210060355490565b61210a9190612c17565b11156121585760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610644565b610658828261262f565b6001600160a01b0382166121c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610644565b6121ce826000836123d0565b6001600160a01b038216600090815260336020526040902054818110156122425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610644565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166122c95760405162461bcd60e51b815260040161064490612dad565b600081116123115760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610644565b61012d55565b600054610100900460ff1661233e5760405162461bcd60e51b815260040161064490612dad565b603661234a8382612f31565b5060376107918282612f31565b600054610100900460ff1661237e5760405162461bcd60e51b815260040161064490612dad565b6097805460ff19169055565b60975460ff16156118c85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610644565b60006123db84610760565b90506000811180156123f55750816123f285610e67565b10155b1561247657808261240586610e67565b61240f9190612d81565b10156124765760405162461bcd60e51b815260206004820152603060248201527f5472616e736665724c6f636b3a2074686973206578636565647320796f75722060448201526f756e6c6f636b65642062616c616e636560801b6064820152608401610644565b6112fd8484846126fc565b60606105ef6001600160a01b03831660145b606060006124a2836002612ff1565b6124ad906002612c17565b67ffffffffffffffff8111156124c5576124c561298a565b6040519080825280601f01601f1916602001820160405280156124ef576020820181803683370190505b509050600360fc1b8160008151811061250a5761250a612c2a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061253957612539612c2a565b60200101906001600160f81b031916908160001a905350600061255d846002612ff1565b612568906001612c17565b90505b60018111156125e0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061259c5761259c612c2a565b1a60f81b8282815181106125b2576125b2612c2a565b60200101906001600160f81b031916908160001a90535060049490941c936125d981613010565b905061256b565b508315610e215760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610644565b6001600160a01b0382166126855760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610644565b612691600083836123d0565b80603560008282546126a39190612c17565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61079161238a565b60006020828403121561271657600080fd5b81356001600160e01b031981168114610e2157600080fd5b60005b83811015612749578181015183820152602001612731565b50506000910152565b602081526000825180602084015261277181604085016020870161272e565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461279c57600080fd5b919050565b600080604083850312156127b457600080fd5b6127bd83612785565b946020939093013593505050565b600080604083850312156127de57600080fd5b6127e783612785565b9150602083013560ff811681146127fd57600080fd5b809150509250929050565b60008060006060848603121561281d57600080fd5b61282684612785565b925061283460208501612785565b9150604084013590509250925092565b60006020828403121561285657600080fd5b5035919050565b60006020828403121561286f57600080fd5b610e2182612785565b6000806040838503121561288b57600080fd5b8235915061289b60208401612785565b90509250929050565b60008083601f8401126128b657600080fd5b50813567ffffffffffffffff8111156128ce57600080fd5b6020830191508360208260051b85010111156128e957600080fd5b9250929050565b6000806000806000806060878903121561290957600080fd5b863567ffffffffffffffff8082111561292157600080fd5b61292d8a838b016128a4565b9098509650602089013591508082111561294657600080fd5b6129528a838b016128a4565b9096509450604089013591508082111561296b57600080fd5b5061297889828a016128a4565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126129b157600080fd5b813567ffffffffffffffff808211156129cc576129cc61298a565b604051601f8301601f19908116603f011681019082821181831017156129f4576129f461298a565b81604052838152866020858801011115612a0d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215612a4357600080fd5b612a4c85612785565b9350602085013567ffffffffffffffff80821115612a6957600080fd5b612a75888389016129a0565b94506040870135915080821115612a8b57600080fd5b50612a98878288016129a0565b949793965093946060013593505050565b60008060408385031215612abc57600080fd5b612ac583612785565b915061289b60208401612785565b600080600060608486031215612ae857600080fd5b612af184612785565b95602085013595506040909401359392505050565b60008060408385031215612b1957600080fd5b50508035926020909101359150565b60208082526038908201527f5472616e736665724c6f636b3a206163636f756e747320646f206e6f74206e6560408201527f656420746f20617070726f7665207468656d73656c7665730000000000000000606082015260800190565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105ef576105ef612c01565b634e487b7160e01b600052603260045260246000fd5b600060018201612c5257612c52612c01565b5060010190565b600181811c90821680612c6d57607f821691505b602082108103612c8d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f5472616e736665724c6f636b3a20616d6f756e74206d7573742062652067726560408201526d61746572207468616e207a65726f60901b606082015260800190565b6020808252602c908201527f5472616e736665724c6f636b3a20646561646c696e65206d757374206265206960408201526b6e207468652066757475726560a01b606082015260800190565b60208082526034908201527f5472616e736665724c6f636b3a20616d6f756e742063616e6e6f742065786365604082015273656420617661696c61626c652062616c616e636560601b606082015260800190565b818103818111156105ef576105ef612c01565b60ff82811682821603908111156105ef576105ef612c01565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60ff81811683821601908111156105ef576105ef612c01565b6020808252603d908201527f5472616e736665724c6f636b733a2063616e6e6f7420657863656564206d617860408201527f206163636f756e74206c6f636b7320616e6420616c6c6f77616e636573000000606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ea681601785016020880161272e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612ed781602884016020880161272e565b01602801949350505050565b601f82111561079157600081815260208120601f850160051c81016020861015612f0a5750805b601f850160051c820191505b81811015612f2957828155600101612f16565b505050505050565b815167ffffffffffffffff811115612f4b57612f4b61298a565b612f5f81612f598454612c59565b84612ee3565b602080601f831160018114612f945760008415612f7c5750858301515b600019600386901b1c1916600185901b178555612f29565b600085815260208120601f198616915b82811015612fc357888601518255948401946001909101908401612fa4565b5085821015612fe15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081600019048311821515161561300b5761300b612c01565b500290565b60008161301f5761301f612c01565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848de59cf009759767a48aa56366ad77af93d2a112ef08516a1a2a182a8146539109c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa2646970667358221220d8a7188cd55f7469417b2443aca3c058828f7ff97c61ba059c574e6b7201855564736f6c63430008100033",
    "sourceMap": "821:4538:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4542:222;;;;;;:::i;:::-;;:::i;:::-;;;470:14:73;;463:22;445:41;;433:2;418:18;4542:222:30;;;;;;;;5727:92:26;5796:16;;;;;;;5727:92;;4232:105;;;:::i;:::-;;;;;;;:::i;4781:197:38:-;;;;;;:::i;:::-;;:::i;3592:106::-;3679:12;;3592:106;;;1736:25:73;;;1724:2;1709:18;3592:106:38;1590:177:73;1648:262:30;;;;;;:::i;:::-;;:::i;:::-;;8121:225:26;;;;;;:::i;:::-;;:::i;5400:163::-;;;:::i;4834:129:34:-;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;1449:62:26;;-1:-1:-1;;;;;;;;;;;1449:62:26;;1951:171:30;;;;;;:::i;:::-;;:::i;5259:145:34:-;;;;;;:::i;:::-;;:::i;3441:91:38:-;3523:2;3441:91;;;3442:4:73;3430:17;;;3412:36;;3400:2;3385:18;3441:91:38;3270:184:73;929:81:41;999:4;;929:81;;6368:214:34;;;;;;:::i;:::-;;:::i;6191:234:38:-;;;;;;:::i;:::-;;:::i;4989:164:26:-;;;:::i;3962:546:30:-;;;;;;:::i;:::-;;:::i;7148:75:26:-;;;:::i;7828:113::-;;;;;;:::i;:::-;;:::i;8730:94::-;;;;;;:::i;:::-;;:::i;3251:938::-;;;;;;:::i;:::-;;:::i;1145:159:30:-;;;;;;:::i;:::-;;:::i;1858:84:37:-;1928:7;;;;1858:84;;1345:262:30;;;;;;:::i;:::-;;:::i;1783:72:26:-;;-1:-1:-1;;;;;;;;;;;1783:72:26;;2390:154:30;;;;;;:::i;:::-;;:::i;4380:127:26:-;;;;;;:::i;:::-;;:::i;8875:128::-;;;;;;:::i;:::-;;:::i;6931:71::-;;;:::i;3329:145:34:-;;;;;;:::i;:::-;;:::i;2706:102:38:-;;;:::i;4661:83:26:-;4725:12;;;;4661:83;;2450:49:34;;2495:4;2450:49;;6912:427:38;;;;;;:::i;:::-;;:::i;8526:153:26:-;;;;;;:::i;:::-;;:::i;6502:184::-;;;:::i;1299:62::-;;1337:24;1299:62;;5684:147:34;;;;;;:::i;:::-;;:::i;2163:186:30:-;;;;;;:::i;:::-;;:::i;4324:149:38:-;;;;;;:::i;:::-;;:::i;3472:449:30:-;;;;;;:::i;:::-;;:::i;1089:62:26:-;;-1:-1:-1;;;;;;;;;;;1089:62:26;;923:181:30;;;;;;:::i;:::-;;:::i;2585:249::-;;;;;;:::i;:::-;;:::i;6067:185:26:-;;;:::i;4542:222:30:-;4647:4;-1:-1:-1;;;;;;4670:47:30;;-1:-1:-1;;;4670:47:30;;:87;;;4721:36;4745:11;4721:23;:36::i;:::-;4663:94;4542:222;-1:-1:-1;;4542:222:30:o;4232:105:26:-;4286:13;4318:12;:10;:12::i;:::-;4311:19;;4232:105;:::o;4781:197:38:-;4864:4;929:10:44;4918:32:38;929:10:44;4934:7:38;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:38;;4781:197;-1:-1:-1;;;4781:197:38:o;1648:262:30:-;1754:10;-1:-1:-1;;;;;1743:21:30;;;1735:90;;;;-1:-1:-1;;;1735:90:30;;;;;;;:::i;:::-;;;;;;;;;1835:68;1875:10;1887:7;1896:6;1835:39;:68::i;:::-;1648:262;;:::o;8121:225:26:-;8276:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;8303:36:::1;8322:4;8328:2;8332:6;8303:18;:36::i;:::-;8296:43:::0;8121:225;-1:-1:-1;;;;8121:225:26:o;5400:163::-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;10501:34:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-:1;:48;;;-1:-1:-1::0;4725:12:26;;;;10539:10:::1;10493:90;;;;-1:-1:-1::0;;;10493:90:26::1;;;;;;;:::i;:::-;5482:12:::2;:20:::0;;-1:-1:-1;;5482:20:26::2;::::0;;929:10:44;5529:12:26::2;5543;::::0;5517:39:::2;::::0;5543:12:::2;::::0;;::::2;470:14:73::0;463:22;445:41;;-1:-1:-1;;;;;5517:39:26;;;::::2;::::0;::::2;::::0;433:2:73;418:18;5517:39:26::2;;;;;;;;5400:163:::0;:::o;1951:171:30:-;2019:14;2052:63;2090:7;2099:15;2052:37;:63::i;5259:145:34:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:34;;929:10:44;6463:23:34;6455:83;;;;-1:-1:-1;;;6455:83:34;;8892:2:73;6455:83:34;;;8874:21:73;8931:2;8911:18;;;8904:30;8970:34;8950:18;;;8943:62;-1:-1:-1;;;9021:18:73;;;9014:45;9076:19;;6455:83:34;8690:411:73;6455:83:34;6549:26;6561:4;6567:7;6549:11;:26::i;6191:234:38:-;6279:4;929:10:44;6333:64:38;929:10:44;6349:7:38;6386:10;6358:25;929:10:44;6349:7:38;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;4989:164:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;4725:12:26;;;;10238:11:::1;10230:52;;;::::0;-1:-1:-1;;;10230:52:26;;9570:2:73;10230:52:26::1;::::0;::::1;9552:21:73::0;9609:2;9589:18;;;9582:30;9648;9628:18;;;9621:58;9696:18;;10230:52:26::1;9368:352:73::0;10230:52:26::1;5073:12:::2;:19:::0;;-1:-1:-1;;5073:19:26::2;5088:4;5073:19;::::0;;5119:12:::2;929:10:44::0;;850:96;3962:546:30;4140:35;;;4132:108;;;;-1:-1:-1;;;4132:108:30;;9927:2:73;4132:108:30;;;9909:21:73;9966:2;9946:18;;;9939:30;10005:34;9985:18;;;9978:62;10076:30;10056:18;;;10049:58;10124:19;;4132:108:30;9725:424:73;4132:108:30;4258:37;;;4250:112;;;;-1:-1:-1;;;4250:112:30;;10356:2:73;4250:112:30;;;10338:21:73;10395:2;10375:18;;;10368:30;10434:34;10414:18;;;10407:62;10505:32;10485:18;;;10478:60;10555:19;;4250:112:30;10154:426:73;4250:112:30;4377:9;4372:130;4392:21;;;4372:130;;;4434:57;4451:10;;4462:1;4451:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4466:7;;4474:1;4466:10;;;;;;;:::i;:::-;;;;;;;4478:9;;4488:1;4478:12;;;;;;;:::i;:::-;;;;;;;4434:16;:57::i;:::-;4415:3;;;;:::i;:::-;;;;4372:130;;;;3962:546;;;;;;:::o;7148:75:26:-;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;7206:10:26::1;:8;:10::i;:::-;7148:75:::0;:::o;7828:113::-;1337:24;2928:16:34;2939:4;2928:10;:16::i;:::-;7917:17:26::1;7923:2;7927:6;7917:5;:17::i;8730:94::-:0;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8799:18:::1;8810:6;8799:10;:18::i;3251:938::-:0;3279:19:36;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:36;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:36;1713:19:43;:23;;;3387:66:36;;-1:-1:-1;3436:12:36;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:36;;11059:2:73;3325:201:36;;;11041:21:73;11098:2;11078:18;;;11071:30;11137:34;11117:18;;;11110:62;-1:-1:-1;;;11188:18:73;;;11181:44;11242:19;;3325:201:36;10857:410:73;3325:201:36;3536:12;:16;;-1:-1:-1;;3536:16:36;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:36;;;;;3562:65;-1:-1:-1;;;;;3414:19:26;::::1;3406:60;;;::::0;-1:-1:-1;;;3406:60:26;;11474:2:73;3406:60:26::1;::::0;::::1;11456:21:73::0;11513:2;11493:18;;;11486:30;11552;11532:18;;;11525:58;11600:18;;3406:60:26::1;11272:352:73::0;3406:60:26::1;3503:14;::::0;;::::1;::::0;;::::1;11813:21:73::0;3477:13:26::1;11850:18:73::0;;;11843:29;;;11889:18;;3503:14:26::1;;;;;;;;;;;;3493:25;;;;;;3477:41;;3572:5;3557:9;3546:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;3536:32;;;;;;:41:::0;3528:91:::1;;;::::0;-1:-1:-1;;;3528:91:26;;12120:2:73;3528:91:26::1;::::0;::::1;12102:21:73::0;12159:2;12139:18;;;12132:30;12198:34;12178:18;;;12171:62;-1:-1:-1;;;12249:18:73;;;12242:35;12294:19;;3528:91:26::1;11918:401:73::0;3528:91:26::1;3675:5;3658:11;3647:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3637:34;;;;;;:43:::0;3629:95:::1;;;::::0;-1:-1:-1;;;3629:95:26;;12526:2:73;3629:95:26::1;::::0;::::1;12508:21:73::0;12565:2;12545:18;;;12538:30;12604:34;12584:18;;;12577:62;-1:-1:-1;;;12655:18:73;;;12648:37;12702:19;;3629:95:26::1;12324:403:73::0;3629:95:26::1;3735:22;:20;:22::i;:::-;3767;:20;:22::i;:::-;3799:29;3818:9;3799:18;:29::i;:::-;3838:36;3851:9;3862:11;3838:12;:36::i;:::-;3884:17;:15;:17::i;:::-;3948:37;2495:4:34;3979:5:26::0;3948:10:::1;:37::i;:::-;3995:30;1337:24;4019:5;3995:10;:30::i;:::-;4035;-1:-1:-1::0;;;;;;;;;;;4059:5:26::1;4035:10;:30::i;:::-;-1:-1:-1::0;4128:12:26::1;:20:::0;;-1:-1:-1;;4158:24:26;;;3647:99:36;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:36;;;3721:14;;-1:-1:-1;3412:36:73;;3721:14:36;;3400:2:73;3385:18;3721:14:36;;;;;;;3647:99;3269:483;3251:938:26;;;;:::o;1145:159:30:-;-1:-1:-1;;;;;2051:23:31;;;1222:5:30;2051:23:31;;;:14;:23;;;;;;;;:34;;;;;;;;;;;;;;1246:51:30;1239:58;1145:159;-1:-1:-1;;;1145:159:30:o;1345:262::-;1451:10;-1:-1:-1;;;;;1440:21:30;;;1432:90;;;;-1:-1:-1;;;1432:90:30;;;;;;;:::i;:::-;1532:68;1572:10;1584:7;1593:6;1532:39;:68::i;2390:154::-;2457:14;2490:47;2512:7;2521:15;2490:21;:47::i;4380:127:26:-;-1:-1:-1;;;;;3856:18:38;;4452:7:26;3856:18:38;;;:9;:18;;;;;;4478:22:26;3756:125:38;8875:128:26;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8965:31:::1;8980:7;8989:6;8965:14;:31::i;6931:71::-:0;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;6987:8:26::1;:6;:8::i;3329:145:34:-:0;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:34;;;;;;;;;;;;;;;3329:145::o;2706:102:38:-;2762:13;2794:7;2787:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:102;:::o;6912:427::-;7005:4;929:10:44;7005:4:38;7086:25;929:10:44;7103:7:38;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:38;;13518:2:73;7121:85:38;;;13500:21:73;13557:2;13537:18;;;13530:30;13596:34;13576:18;;;13569:62;-1:-1:-1;;;13647:18:73;;;13640:35;13692:19;;7121:85:38;13316:401:73;7121:85:38;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:38;;6912:427;-1:-1:-1;;;;6912:427:38:o;8526:153:26:-;8623:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;8646:26:::1;8661:2;8665:6;8646:14;:26::i;6502:184::-:0;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;11049:39:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-:1;:58;;;-1:-1:-1::0;5796:16:26;;;;;;;11092:15:::1;11041:108;;;;-1:-1:-1::0;;;11041:108:26::1;;;;;;;:::i;:::-;6593:16:::2;:24:::0;;-1:-1:-1;;6593:24:26::2;::::0;;929:10:44;6648:12:26::2;-1:-1:-1::0;;;;;6632:47:26::2;;6662:16;;;;;;;;;;;6632:47;;;;470:14:73::0;463:22;445:41;;433:2;418:18;;305:187;5684:147:34;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;2163:186:30:-:0;2252:14;2285:57;2323:7;2332:9;2285:37;:57::i;4324:149:38:-;-1:-1:-1;;;;;4439:18:38;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;3472:449:30:-;3588:6;3596:8;5025:1;5016:6;:10;5008:69;;;;-1:-1:-1;;;5008:69:30;;;;;;;:::i;:::-;5106:15;5095:8;:26;5087:83;;;;-1:-1:-1;;;5087:83:30;;;;;;;:::i;:::-;5211:50;5233:10;5245:15;5211:21;:50::i;:::-;5201:6;:60;;5180:159;;;;-1:-1:-1;;;5180:159:30;;;;;;;:::i;:::-;-1:-1:-1;;;;;3628:23:30;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;;;;;;3655:23:30;::::1;3668:10;3655:23;;3628:50;3620:94;;;::::0;-1:-1:-1;;;3620:94:30;;15173:2:73;3620:94:30::1;::::0;::::1;15155:21:73::0;15212:2;15192:18;;;15185:30;15251:33;15231:18;;;15224:61;15302:18;;3620:94:30::1;14971:355:73::0;3620:94:30::1;3724:65;3764:9;3775:10;3787:1;3724:39;:65::i;:::-;3799:40;3809:10;3821:9;3832:6;3799:9;:40::i;:::-;3849:65;3886:9;3897:6;3905:8;3849:36;:65::i;923:181::-:0;1003:6;1011:8;5025:1;5016:6;:10;5008:69;;;;-1:-1:-1;;;5008:69:30;;;;;;;:::i;:::-;5106:15;5095:8;:26;5087:83;;;;-1:-1:-1;;;5087:83:30;;;;;;;:::i;:::-;5211:50;5233:10;5245:15;5211:21;:50::i;:::-;5201:6;:60;;5180:159;;;;-1:-1:-1;;;5180:159:30;;;;;;;:::i;:::-;1031:66:::1;1068:10;1080:6;1088:8;1031:36;:66::i;:::-;923:181:::0;;;;:::o;2585:249::-;2673:14;2699:19;2721:57;2759:7;2768:9;2721:37;:57::i;:::-;2699:79;;2816:11;2795:18;2805:7;2795:9;:18::i;:::-;:32;;;;:::i;6067:185:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;5796::26;;;;;;;10760::::1;10752:65;;;::::0;-1:-1:-1;;;10752:65:26;;15666:2:73;10752:65:26::1;::::0;::::1;15648:21:73::0;15705:2;15685:18;;;15678:30;15744:34;15724:18;;;15717:62;-1:-1:-1;;;15795:18:73;;;15788:34;15839:19;;10752:65:26::1;15464:400:73::0;10752:65:26::1;6160:16:::2;:23:::0;;-1:-1:-1;;6160:23:26::2;;;::::0;;6214:12:::2;929:10:44::0;;850:96;9270:151:26;9355:4;9378:36;9402:11;9378:23;:36::i;2495:98:38:-;2549:13;2581:5;2574:12;;;;;:::i;10794:340::-;-1:-1:-1;;;;;10895:19:38;;10887:68;;;;-1:-1:-1;;;10887:68:38;;16071:2:73;10887:68:38;;;16053:21:73;16110:2;16090:18;;;16083:30;16149:34;16129:18;;;16122:62;-1:-1:-1;;;16200:18:73;;;16193:34;16244:19;;10887:68:38;15869:400:73;10887:68:38;-1:-1:-1;;;;;10973:21:38;;10965:68;;;;-1:-1:-1;;;10965:68:38;;16476:2:73;10965:68:38;;;16458:21:73;16515:2;16495:18;;;16488:30;16554:34;16534:18;;;16527:62;-1:-1:-1;;;16605:18:73;;;16598:32;16647:19;;10965:68:38;16274:398:73;10965:68:38;-1:-1:-1;;;;;11044:18:38;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;1736:25:73;;;11095:32:38;;1709:18:73;11095:32:38;;;;;;;10794:340;;;:::o;1524:358:31:-;-1:-1:-1;;;;;1689:23:31;;;1621:25;1689:23;;;:14;:23;;;;;;;;:34;;;;;;;;;;-1:-1:-1;;;;;;;;;;;370:38:31;1689:44;;;;:34;;:44;;1681:94;;;;-1:-1:-1;;;1681:94:31;;16879:2:73;1681:94:31;;;16861:21:73;16918:2;16898:18;;;16891:30;16957:34;16937:18;;;16930:62;-1:-1:-1;;;17008:18:73;;;17001:35;17053:19;;1681:94:31;16677:401:73;1681:94:31;-1:-1:-1;;;;;1785:26:31;;;;;;:17;;;:26;;;;;:36;;1815:6;;1785:26;:36;;1815:6;;1785:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1831:23:31;;;-1:-1:-1;1831:23:31;;;-1:-1:-1;1831:14:31;;:23;;;;;;;;:34;;;;;;;;;;;:44;;1869:6;;-1:-1:-1;1831:34:31;;:44;;1869:6;;1831:44;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1611:271;1524:358;;;:::o;5540:256:38:-;5637:4;929:10:44;5693:38:38;5709:4;929:10:44;5724:6:38;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;3768:103:34:-;3834:30;3845:4;929:10:44;3834::34;:30::i;4997:562:31:-;-1:-1:-1;;;;;5318:22:31;;5082:7;5318:22;;;:13;:22;;;;;;-1:-1:-1;;;;;;;;;;;370:38:31;5082:7;;5318:22;;5301:223;-1:-1:-1;;;;;5347:21:31;;;;;;:12;;;:21;;;;;;;;5342:26;;5301:223;;-1:-1:-1;;;;;5393:18:31;;:9;:18;;;;;;;;;;;:21;;;;;;;;:30;;;:43;-1:-1:-1;5389:125:31;;-1:-1:-1;;;;;5471:18:31;;:9;:18;;;;;;;;;;;:21;;;;;;;;:28;5456:43;;;;:::i;:::-;;;5389:125;5370:3;;;;:::i;:::-;;;;5301:223;;;-1:-1:-1;5541:11:31;4997:562;-1:-1:-1;;;;4997:562:31:o;7917:233:34:-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:34;;;;;;;;;:36;;-1:-1:-1;;8038:36:34;8070:4;8038:36;;;8120:12;929:10:44;;850:96;8120:12:34;-1:-1:-1;;;;;8093:40:34;8111:7;-1:-1:-1;;;;;8093:40:34;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:34;;;;;;;;;;:37;;-1:-1:-1;;8442:37:34;;;8498:40;929:10:44;;8442:12:34;;8498:40;;8474:5;8498:40;8321:234;;:::o;2676:117:37:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:37::1;::::0;;2764:22:::1;929:10:44::0;2773:12:37::1;2764:22;::::0;-1:-1:-1;;;;;17403:32:73;;;17385:51;;17373:2;17358:18;2764:22:37::1;;;;;;;2676:117::o:0;9900:151:26:-;10021:23;10033:2;10037:6;10021:11;:23::i;848:89:40:-;903:27;929:10:44;923:6:40;903:5;:27::i;2151:65:34:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2151:65:34:o;567:119:41:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;645:34:41::1;674:4;645:28;:34::i;2118:147:38:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2220:38:38::1;2243:5;2250:7;2220:22;:38::i;1063:97:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1126:27:37::1;:25;:27::i;1062:456:31:-:0;-1:-1:-1;;;;;1298:26:31;;1159:25;1298:26;;;:17;:26;;;;;;;;;1274:12;:21;;;;;;;-1:-1:-1;;;;;;;;;;;370:38:31;1274:50;;1298:26;;;;;1274:21;:50;:::i;:::-;1240:84;;1264:6;460:15;1240:30;;;;:::i;:::-;:84;;;;1219:192;;;;-1:-1:-1;;;1219:192:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;1421:26:31;;;;;;:17;;;:26;;;;;:36;;1451:6;;1421:26;:36;;1451:6;;1421:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1467:23:31;;;-1:-1:-1;1467:23:31;;;-1:-1:-1;1467:14:31;;:23;;;;;;;;:34;;;;;;;;;;;:44;;1505:6;;-1:-1:-1;1467:34:31;;:44;;1505:6;;1467:44;;:::i;1243:161:40:-;1319:46;1335:7;929:10:44;1358:6:40;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2429:115:37:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:37::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:44::0;;850:96;4077:189:38;4156:4;929:10:44;4210:28:38;929:10:44;4227:2:38;4231:6;7793:788;-1:-1:-1;;;;;7889:18:38;;7881:68;;;;-1:-1:-1;;;7881:68:38;;18644:2:73;7881:68:38;;;18626:21:73;18683:2;18663:18;;;18656:30;18722:34;18702:18;;;18695:62;-1:-1:-1;;;18773:18:73;;;18766:35;18818:19;;7881:68:38;18442:401:73;7881:68:38;-1:-1:-1;;;;;7967:16:38;;7959:64;;;;-1:-1:-1;;;7959:64:38;;19050:2:73;7959:64:38;;;19032:21:73;19089:2;19069:18;;;19062:30;19128:34;19108:18;;;19101:62;-1:-1:-1;;;19179:18:73;;;19172:33;19222:19;;7959:64:38;18848:399:73;7959:64:38;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;-1:-1:-1;;;;;8105:15:38;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:38;;19454:2:73;8130:72:38;;;19436:21:73;19493:2;19473:18;;;19466:30;19532:34;19512:18;;;19505:62;-1:-1:-1;;;19583:18:73;;;19576:36;19629:19;;8130:72:38;19252:402:73;8130:72:38;-1:-1:-1;;;;;8236:15:38;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;1736:25:73;;1724:2;1709:18;;1590:177;8500:26:38;;;;;;;;8537:37;5259:145:34;2756:1946:31;-1:-1:-1;;;;;;;;;;;2977:424:31;-1:-1:-1;;;;;2984:21:31;;3008:1;2984:21;;;:12;;;:21;;;;;;;;:25;;;;:98;;-1:-1:-1;;;;;;3013:18:31;;:9;:18;;;;;;;;;;;3032:13;;;:22;;;;;;;;3013:42;;;;;;;3032:22;3013:51;;3067:15;-1:-1:-1;2984:98:31;2977:424;;;-1:-1:-1;;;;;3157:18:31;;:9;:18;;;;;;;;;;;3176:13;;;:22;;;;;;;;;;;;3157:42;;;;;;;;3150:49;;;3176:22;3150:49;;;;;;;;;;;;;;;;;;;3278:22;;;;;;:27;;3176:22;;3157:9;3278:27;;3176:22;;3278:27;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3364:21:31;;-1:-1:-1;3364:21:31;;;:12;;;:21;;;;;:26;;-1:-1:-1;;;3364:21:31;;:26;;-1:-1:-1;;3364:26:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2977:424;;;-1:-1:-1;;;;;3554:26:31;;;;;;:17;;;:26;;;;;;;;;3530:12;;;:21;;;;;;;:50;;3554:26;;;;;3530:21;:50;:::i;:::-;3501:79;;3525:1;460:15;3501:25;;;;:::i;:::-;:79;;;;3480:187;;;;-1:-1:-1;;;3480:187:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;3733:21:31;;3719:11;3733:21;;;:12;;;;:21;;;;;;;;;3846:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:18;;;;;;;;;3733:21;;;;3818:25;;;;;;;;;;:64;;;;;;3733:21;3818:64;;;;;;;;;;;;;;;;;;;3974:10;;;3970:648;;-1:-1:-1;;;;;4000:22:31;;4025:1;4000:22;;;:13;;;:22;;;;;;;;:26;;-1:-1:-1;;4000:26:31;;;;;;4040:12;;;:21;;;;;;:25;;;;;;;3970:648;;;-1:-1:-1;;;;;4315:21:31;;;;;;:12;;;:21;;;;;;;;;;4282:18;;;;;;4315:21;4282:25;;;;;;;;;;;;4315:21;;;4282:30;;;;:54;;;;4462:21;;;4443:41;;;;;;;:46;;:54;;;4578:21;;;;;:29;;-1:-1:-1;;4578:29:31;;;;3970:648;-1:-1:-1;;;;;4669:21:31;;;;;;:12;;;:21;;;;;:26;;4694:1;;4669:21;:26;;4694:1;;4669:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2841:1861;;2756:1946;;;:::o;3029:213:34:-;3114:4;-1:-1:-1;;;;;;3137:58:34;;-1:-1:-1;;;3137:58:34;;:98;;-1:-1:-1;;;;;;;;;;1168:51:46;;;3199:36:34;1060:166:46;11415:411:38;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:38;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:38;;19861:2:73;11634:68:38;;;19843:21:73;19900:2;19880:18;;;19873:30;19939:31;19919:18;;;19912:59;19988:18;;11634:68:38;19659:353:73;11634:68:38;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;4152:501:34:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:34;;;;;;;;;;-1:-1:-1;;;4278:358:34;;;;;;;:::i;2188:106:37:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:37;;21036:2:73;2246:41:37;;;21018:21:73;21075:2;21055:18;;;21048:30;-1:-1:-1;;;21094:18:73;;;21087:50;21154:18;;2246:41:37;20834:344:73;1063:215:41;999:4;;1188:6;1155:30;3679:12:38;;;3592:106;1155:30:41;:39;;;;:::i;:::-;:48;;1147:86;;;;-1:-1:-1;;;1147:86:41;;21385:2:73;1147:86:41;;;21367:21:73;21424:2;21404:18;;;21397:30;21463:27;21443:18;;;21436:55;21508:18;;1147:86:41;21183:349:73;1147:86:41;1243:28;1255:7;1264:6;1243:11;:28::i;9712:659:38:-;-1:-1:-1;;;;;9795:21:38;;9787:67;;;;-1:-1:-1;;;9787:67:38;;21739:2:73;9787:67:38;;;21721:21:73;21778:2;21758:18;;;21751:30;21817:34;21797:18;;;21790:62;-1:-1:-1;;;21868:18:73;;;21861:31;21909:19;;9787:67:38;21537:397:73;9787:67:38;9865:49;9886:7;9903:1;9907:6;9865:20;:49::i;:::-;-1:-1:-1;;;;;9950:18:38;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:38;;22141:2:73;9978:71:38;;;22123:21:73;22180:2;22160:18;;;22153:30;22219:34;22199:18;;;22192:62;-1:-1:-1;;;22270:18:73;;;22263:32;22312:19;;9978:71:38;21939:398:73;9978:71:38;-1:-1:-1;;;;;10083:18:38;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;1736:25:73;;;10083:18:38;;;10268:37;;1709:18:73;10268:37:38;;;;;;;5259:145:34;;;:::o;692:158:41:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;795:1:41::1;788:4;:8;780:42;;;::::0;-1:-1:-1;;;780:42:41;;22544:2:73;780:42:41::1;::::0;::::1;22526:21:73::0;22583:2;22563:18;;;22556:30;-1:-1:-1;;;22602:18:73;;;22595:51;22663:18;;780:42:41::1;22342:345:73::0;780:42:41::1;832:4;:11:::0;692:158::o;2271:159:38:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2383:5:38::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:38::1;:17;2416:7:::0;2406;:17:::1;:::i;1166:95:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1239:7:37::1;:15:::0;;-1:-1:-1;;1239:15:37::1;::::0;;1166:95::o;2010:106::-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:37;;25098:2:73;2071:38:37;;;25080:21:73;25137:2;25117:18;;;25110:30;-1:-1:-1;;;25156:18:73;;;25149:46;25212:18;;2071:38:37;24896:340:73;2929:502:30;3037:20;3060:26;3081:4;3060:20;:26::i;:::-;3037:49;;3162:1;3147:12;:16;:45;;;;;3186:6;3167:15;3177:4;3167:9;:15::i;:::-;:25;;3147:45;3143:228;;;3295:12;3285:6;3267:15;3277:4;3267:9;:15::i;:::-;:24;;;;:::i;:::-;:40;;3259:101;;;;-1:-1:-1;;;3259:101:30;;25443:2:73;3259:101:30;;;25425:21:73;25482:2;25462:18;;;25455:30;25521:34;25501:18;;;25494:62;-1:-1:-1;;;25572:18:73;;;25565:46;25628:19;;3259:101:30;25241:412:73;3259:101:30;3380:44;3407:4;3413:2;3417:6;3380:26;:44::i;2473:149:45:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:45;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:45;;1984:47;;-1:-1:-1;;;2041:6:45;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:45;;;;;;;;;-1:-1:-1;;;2066:6:45;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:45;;;;;;;;-1:-1:-1;2096:9:45;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:45;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:45;;;;;;;;-1:-1:-1;2207:1:45;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:45;;2228:55;;;;-1:-1:-1;;;2228:55:45;;26174:2:73;2228:55:45;;;26156:21:73;;;26193:18;;;26186:30;26252:34;26232:18;;;26225:62;26304:18;;2228:55:45;25972:356:73;8857:535:38;-1:-1:-1;;;;;8940:21:38;;8932:65;;;;-1:-1:-1;;;8932:65:38;;26535:2:73;8932:65:38;;;26517:21:73;26574:2;26554:18;;;26547:30;26613:33;26593:18;;;26586:61;26664:18;;8932:65:38;26333:355:73;8932:65:38;9008:49;9037:1;9041:7;9050:6;9008:20;:49::i;:::-;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:38;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;1736:25:73;;;9289:37:38;;1709:18:73;9289:37:38;;;;;;;1648:262:30;;:::o;9636:227:26:-;1482:19:37;:17;:19::i;14:286:73:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:73;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:73;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:73;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:73:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:73;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:73:o;1772:343::-;1838:6;1846;1899:2;1887:9;1878:7;1874:23;1870:32;1867:52;;;1915:1;1912;1905:12;1867:52;1938:29;1957:9;1938:29;:::i;:::-;1928:39;;2017:2;2006:9;2002:18;1989:32;2061:4;2054:5;2050:16;2043:5;2040:27;2030:55;;2081:1;2078;2071:12;2030:55;2104:5;2094:15;;;1772:343;;;;;:::o;2120:328::-;2197:6;2205;2213;2266:2;2254:9;2245:7;2241:23;2237:32;2234:52;;;2282:1;2279;2272:12;2234:52;2305:29;2324:9;2305:29;:::i;:::-;2295:39;;2353:38;2387:2;2376:9;2372:18;2353:38;:::i;:::-;2343:48;;2438:2;2427:9;2423:18;2410:32;2400:42;;2120:328;;;;;:::o;2453:180::-;2512:6;2565:2;2553:9;2544:7;2540:23;2536:32;2533:52;;;2581:1;2578;2571:12;2533:52;-1:-1:-1;2604:23:73;;2453:180;-1:-1:-1;2453:180:73:o;2820:186::-;2879:6;2932:2;2920:9;2911:7;2907:23;2903:32;2900:52;;;2948:1;2945;2938:12;2900:52;2971:29;2990:9;2971:29;:::i;3011:254::-;3079:6;3087;3140:2;3128:9;3119:7;3115:23;3111:32;3108:52;;;3156:1;3153;3146:12;3108:52;3192:9;3179:23;3169:33;;3221:38;3255:2;3244:9;3240:18;3221:38;:::i;:::-;3211:48;;3011:254;;;;;:::o;3459:367::-;3522:8;3532:6;3586:3;3579:4;3571:6;3567:17;3563:27;3553:55;;3604:1;3601;3594:12;3553:55;-1:-1:-1;3627:20:73;;3670:18;3659:30;;3656:50;;;3702:1;3699;3692:12;3656:50;3739:4;3731:6;3727:17;3715:29;;3799:3;3792:4;3782:6;3779:1;3775:14;3767:6;3763:27;3759:38;3756:47;3753:67;;;3816:1;3813;3806:12;3753:67;3459:367;;;;;:::o;3831:1088::-;3989:6;3997;4005;4013;4021;4029;4082:2;4070:9;4061:7;4057:23;4053:32;4050:52;;;4098:1;4095;4088:12;4050:52;4138:9;4125:23;4167:18;4208:2;4200:6;4197:14;4194:34;;;4224:1;4221;4214:12;4194:34;4263:70;4325:7;4316:6;4305:9;4301:22;4263:70;:::i;:::-;4352:8;;-1:-1:-1;4237:96:73;-1:-1:-1;4440:2:73;4425:18;;4412:32;;-1:-1:-1;4456:16:73;;;4453:36;;;4485:1;4482;4475:12;4453:36;4524:72;4588:7;4577:8;4566:9;4562:24;4524:72;:::i;:::-;4615:8;;-1:-1:-1;4498:98:73;-1:-1:-1;4703:2:73;4688:18;;4675:32;;-1:-1:-1;4719:16:73;;;4716:36;;;4748:1;4745;4738:12;4716:36;;4787:72;4851:7;4840:8;4829:9;4825:24;4787:72;:::i;:::-;3831:1088;;;;-1:-1:-1;3831:1088:73;;-1:-1:-1;3831:1088:73;;4878:8;;3831:1088;-1:-1:-1;;;3831:1088:73:o;5109:127::-;5170:10;5165:3;5161:20;5158:1;5151:31;5201:4;5198:1;5191:15;5225:4;5222:1;5215:15;5241:719;5284:5;5337:3;5330:4;5322:6;5318:17;5314:27;5304:55;;5355:1;5352;5345:12;5304:55;5391:6;5378:20;5417:18;5454:2;5450;5447:10;5444:36;;;5460:18;;:::i;:::-;5535:2;5529:9;5503:2;5589:13;;-1:-1:-1;;5585:22:73;;;5609:2;5581:31;5577:40;5565:53;;;5633:18;;;5653:22;;;5630:46;5627:72;;;5679:18;;:::i;:::-;5719:10;5715:2;5708:22;5754:2;5746:6;5739:18;5800:3;5793:4;5788:2;5780:6;5776:15;5772:26;5769:35;5766:55;;;5817:1;5814;5807:12;5766:55;5881:2;5874:4;5866:6;5862:17;5855:4;5847:6;5843:17;5830:54;5928:1;5921:4;5916:2;5908:6;5904:15;5900:26;5893:37;5948:6;5939:15;;;;;;5241:719;;;;:::o;5965:686::-;6071:6;6079;6087;6095;6148:3;6136:9;6127:7;6123:23;6119:33;6116:53;;;6165:1;6162;6155:12;6116:53;6188:29;6207:9;6188:29;:::i;:::-;6178:39;;6268:2;6257:9;6253:18;6240:32;6291:18;6332:2;6324:6;6321:14;6318:34;;;6348:1;6345;6338:12;6318:34;6371:50;6413:7;6404:6;6393:9;6389:22;6371:50;:::i;:::-;6361:60;;6474:2;6463:9;6459:18;6446:32;6430:48;;6503:2;6493:8;6490:16;6487:36;;;6519:1;6516;6509:12;6487:36;;6542:52;6586:7;6575:8;6564:9;6560:24;6542:52;:::i;:::-;5965:686;;;;-1:-1:-1;6532:62:73;;6641:2;6626:18;6613:32;;-1:-1:-1;;;5965:686:73:o;6656:260::-;6724:6;6732;6785:2;6773:9;6764:7;6760:23;6756:32;6753:52;;;6801:1;6798;6791:12;6753:52;6824:29;6843:9;6824:29;:::i;:::-;6814:39;;6872:38;6906:2;6895:9;6891:18;6872:38;:::i;6921:322::-;6998:6;7006;7014;7067:2;7055:9;7046:7;7042:23;7038:32;7035:52;;;7083:1;7080;7073:12;7035:52;7106:29;7125:9;7106:29;:::i;:::-;7096:39;7182:2;7167:18;;7154:32;;-1:-1:-1;7233:2:73;7218:18;;;7205:32;;6921:322;-1:-1:-1;;;6921:322:73:o;7248:248::-;7316:6;7324;7377:2;7365:9;7356:7;7352:23;7348:32;7345:52;;;7393:1;7390;7383:12;7345:52;-1:-1:-1;;7416:23:73;;;7486:2;7471:18;;;7458:32;;-1:-1:-1;7248:248:73:o;7501:420::-;7703:2;7685:21;;;7742:2;7722:18;;;7715:30;7781:34;7776:2;7761:18;;7754:62;7852:26;7847:2;7832:18;;7825:54;7911:3;7896:19;;7501:420::o;7926:401::-;8128:2;8110:21;;;8167:2;8147:18;;;8140:30;8206:34;8201:2;8186:18;;8179:62;-1:-1:-1;;;8272:2:73;8257:18;;8250:35;8317:3;8302:19;;7926:401::o;8332:353::-;8534:2;8516:21;;;8573:2;8553:18;;;8546:30;8612:31;8607:2;8592:18;;8585:59;8676:2;8661:18;;8332:353::o;9106:127::-;9167:10;9162:3;9158:20;9155:1;9148:31;9198:4;9195:1;9188:15;9222:4;9219:1;9212:15;9238:125;9303:9;;;9324:10;;;9321:36;;;9337:18;;:::i;10585:127::-;10646:10;10641:3;10637:20;10634:1;10627:31;10677:4;10674:1;10667:15;10701:4;10698:1;10691:15;10717:135;10756:3;10777:17;;;10774:43;;10797:18;;:::i;:::-;-1:-1:-1;10844:1:73;10833:13;;10717:135::o;12931:380::-;13010:1;13006:12;;;;13053;;;13074:61;;13128:4;13120:6;13116:17;13106:27;;13074:61;13181:2;13173:6;13170:14;13150:18;13147:38;13144:161;;13227:10;13222:3;13218:20;13215:1;13208:31;13262:4;13259:1;13252:15;13290:4;13287:1;13280:15;13144:161;;12931:380;;;:::o;13722:410::-;13924:2;13906:21;;;13963:2;13943:18;;;13936:30;14002:34;13997:2;13982:18;;13975:62;-1:-1:-1;;;14068:2:73;14053:18;;14046:44;14122:3;14107:19;;13722:410::o;14137:408::-;14339:2;14321:21;;;14378:2;14358:18;;;14351:30;14417:34;14412:2;14397:18;;14390:62;-1:-1:-1;;;14483:2:73;14468:18;;14461:42;14535:3;14520:19;;14137:408::o;14550:416::-;14752:2;14734:21;;;14791:2;14771:18;;;14764:30;14830:34;14825:2;14810:18;;14803:62;-1:-1:-1;;;14896:2:73;14881:18;;14874:50;14956:3;14941:19;;14550:416::o;15331:128::-;15398:9;;;15419:11;;;15416:37;;;15433:18;;:::i;17083:151::-;17173:4;17166:12;;;17152;;;17148:31;;17191:14;;17188:40;;;17208:18;;:::i;17447:407::-;17649:2;17631:21;;;17688:2;17668:18;;;17661:30;17727:34;17722:2;17707:18;;17700:62;-1:-1:-1;;;17793:2:73;17778:18;;17771:41;17844:3;17829:19;;17447:407::o;17859:148::-;17947:4;17926:12;;;17940;;;17922:31;;17965:13;;17962:39;;;17981:18;;:::i;18012:425::-;18214:2;18196:21;;;18253:2;18233:18;;;18226:30;18292:34;18287:2;18272:18;;18265:62;18363:31;18358:2;18343:18;;18336:59;18427:3;18412:19;;18012:425::o;20017:812::-;20428:25;20423:3;20416:38;20398:3;20483:6;20477:13;20499:75;20567:6;20562:2;20557:3;20553:12;20546:4;20538:6;20534:17;20499:75;:::i;:::-;-1:-1:-1;;;20633:2:73;20593:16;;;20625:11;;;20618:40;20683:13;;20705:76;20683:13;20767:2;20759:11;;20752:4;20740:17;;20705:76;:::i;:::-;20801:17;20820:2;20797:26;;20017:812;-1:-1:-1;;;;20017:812:73:o;22818:545::-;22920:2;22915:3;22912:11;22909:448;;;22956:1;22981:5;22977:2;22970:17;23026:4;23022:2;23012:19;23096:2;23084:10;23080:19;23077:1;23073:27;23067:4;23063:38;23132:4;23120:10;23117:20;23114:47;;;-1:-1:-1;23155:4:73;23114:47;23210:2;23205:3;23201:12;23198:1;23194:20;23188:4;23184:31;23174:41;;23265:82;23283:2;23276:5;23273:13;23265:82;;;23328:17;;;23309:1;23298:13;23265:82;;;23269:3;;;22818:545;;;:::o;23539:1352::-;23665:3;23659:10;23692:18;23684:6;23681:30;23678:56;;;23714:18;;:::i;:::-;23743:97;23833:6;23793:38;23825:4;23819:11;23793:38;:::i;:::-;23787:4;23743:97;:::i;:::-;23895:4;;23959:2;23948:14;;23976:1;23971:663;;;;24678:1;24695:6;24692:89;;;-1:-1:-1;24747:19:73;;;24741:26;24692:89;-1:-1:-1;;23496:1:73;23492:11;;;23488:24;23484:29;23474:40;23520:1;23516:11;;;23471:57;24794:81;;23941:944;;23971:663;22765:1;22758:14;;;22802:4;22789:18;;-1:-1:-1;;24007:20:73;;;24125:236;24139:7;24136:1;24133:14;24125:236;;;24228:19;;;24222:26;24207:42;;24320:27;;;;24288:1;24276:14;;;;24155:19;;24125:236;;;24129:3;24389:6;24380:7;24377:19;24374:201;;;24450:19;;;24444:26;-1:-1:-1;;24533:1:73;24529:14;;;24545:3;24525:24;24521:37;24517:42;24502:58;24487:74;;24374:201;-1:-1:-1;;;;;24621:1:73;24605:14;;;24601:22;24588:36;;-1:-1:-1;23539:1352:73:o;25658:168::-;25698:7;25764:1;25760;25756:6;25752:14;25749:1;25746:21;25741:1;25734:9;25727:17;25723:45;25720:71;;;25771:18;;:::i;:::-;-1:-1:-1;25811:9:73;;25658:168::o;25831:136::-;25870:3;25898:5;25888:39;;25907:18;;:::i;:::-;-1:-1:-1;;;25943:18:73;;25831:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "TRANSFERRER_ROLE()": "63ac5d97",
    "addTransferLock(uint256,uint256)": "e672ce3a",
    "allowance(address,address)": "dd62ed3e",
    "allowances(address,address)": "55b6ed5c",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchTransferWithLocks(address[],uint256[],uint256[])": "3def6038",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "burnable()": "a07c7ce4",
    "cap()": "355274ea",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "decreaseTransferLockAllowance(address,uint8)": "1f1eb79b",
    "disableBurn()": "2403c08e",
    "disableTransfer()": "b187984f",
    "enableBurn()": "3b37d1d6",
    "enableTransfer()": "f1b50c1d",
    "getAvailableBalance(address)": "6c24a76f",
    "getAvailableBalanceAt(address,uint256)": "e851b720",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getTransferLockTotal(address)": "2909ae01",
    "getTransferLockTotalAt(address,uint256)": "d90964cd",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "increaseTransferLockAllowance(address,uint8)": "6239d4a3",
    "initialize(address,string,string,uint256)": "4d12d4b6",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferWithLock(address,uint256,uint256)": "de6baccb",
    "transferrable()": "047a7ef1",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"BurnEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFERRER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addTransferLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deadlines\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferWithLocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"}],\"name\":\"decreaseTransferLockAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAvailableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getAvailableBalanceAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTransferLockTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getTransferLockTotalAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"}],\"name\":\"increaseTransferLockAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"transferWithLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferrable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origami\",\"custom:security-contact\":\"contract-security@joinorigami.com\",\"details\":\"TransferLocks are resilient to timestamp manipulation by using block.timestamp, locks will typically be measured in months, not seconds.\",\"kind\":\"dev\",\"methods\":{\"addTransferLock(uint256,uint256)\":{\"details\":\"Block timestamp may be innaccurate by up to 15 minutes, but on a timescale of years this is negligible.\",\"params\":{\"amount\":\"the amount of tokens to restrict the transfer of.\",\"deadline\":\"the date (as a unix timestamp in UTC) until which amount will be untransferrable.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"allowances(address,address)\":{\"params\":{\"account\":\"the address that granted the allowance.\",\"recipient\":\"the address that is allowed to add transfer locks.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchTransferWithLocks(address[],uint256[],uint256[])\":{\"details\":\"block timestamp may be innaccurate by up to 15 minutes, but on the expected timescales, this is negligible.\",\"params\":{\"amounts\":\"the amounts of tokens to transfer.\",\"deadlines\":\"the dates (as unix timestamps in UTC) until which amounts will be untransferrable.\",\"recipients\":\"the addresses to transfer tokens to.\"}},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"burnable()\":{\"returns\":{\"_0\":\"true if tokens are burnable, false otherwise.\"}},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"decreaseTransferLockAllowance(address,uint8)\":{\"params\":{\"account\":\"the address to decrease the allowance for.\",\"amount\":\"the amount to decrease the allowance by.\"}},\"disableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to disabled and by whom.\"},\"disableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to disabled and by whom.\"},\"enableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to enabled and by whom.\"},\"enableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to enabled and by whom.\"},\"getAvailableBalance(address)\":{\"params\":{\"account\":\"the address to check.\"},\"returns\":{\"amount\":\"the amount of tokens that are not transfer-locked.\"}},\"getAvailableBalanceAt(address,uint256)\":{\"params\":{\"account\":\"the address to check.\",\"timestamp\":\"the timestamp to check.\"},\"returns\":{\"amount\":\"the amount of tokens that are not transfer-locked.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTransferLockTotal(address)\":{\"params\":{\"account\":\"the address to check.\"},\"returns\":{\"amount\":\"the amount of tokens that are transfer-locked.\"}},\"getTransferLockTotalAt(address,uint256)\":{\"params\":{\"account\":\"the address to check.\",\"timestamp\":\"the timestamp to check at.\"},\"returns\":{\"amount\":\"the amount of tokens that are transfer-locked.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"increaseTransferLockAllowance(address,uint8)\":{\"params\":{\"account\":\"the address to increase the allowance for.\",\"amount\":\"the amount to increase the allowance by.\"}},\"initialize(address,string,string,uint256)\":{\"params\":{\"admin\":\"the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.\",\"supplyCap\":\"cap on the total supply mintable by this contract.\",\"tokenName\":\"the name of the token. Typically this is the name of the DAO.\",\"tokenSymbol\":\"the symbol of the token. Typically this is a short abbreviation of the DAO's name.\"}},\"mint(address,uint256)\":{\"details\":\"this is only callable by an address that has the MINTER_ROLE. The Origami platform may call this function to mint new governance tokens in accordance with a DAO's charter. When it does so, they will always be minted to the treasury multisig.\",\"params\":{\"amount\":\"the amount of tokens to mint.\",\"to\":\"the address of the recipient's wallet.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferFrom(address,address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferWithLock(address,uint256,uint256)\":{\"details\":\"block timestamp may be innaccurate by up to 15 minutes, but on the expected timescales, this is negligible.\",\"params\":{\"amount\":\"the amount of tokens to transfer.\",\"deadline\":\"the date (as a unix timestamp in UTC) until which amount will be untransferrable.\",\"recipient\":\"the address to transfer tokens to.\"}},\"transferrable()\":{\"returns\":{\"_0\":\"true if tokens are transferrable, false otherwise.\"}},\"unpause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"}},\"title\":\"TransferLocks\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BURNER_ROLE()\":{\"notice\":\"the role hash for granting the ability to burn governance tokens.\"},\"MINTER_ROLE()\":{\"notice\":\"the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin.\"},\"PAUSER_ROLE()\":{\"notice\":\"the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin.\"},\"TRANSFERRER_ROLE()\":{\"notice\":\"the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens.\"},\"addTransferLock(uint256,uint256)\":{\"notice\":\"Used to voluntarily lock up `amount` tokens until a given time. Tokens in excess of `amount` may be transferred.\"},\"allowances(address,address)\":{\"notice\":\"Returns the number of transfer locks `account` has permitted `recipient`.\"},\"batchTransferWithLocks(address[],uint256[],uint256[])\":{\"notice\":\"Used to transfer tokens to multiple addresses and lock them up until a given time.\"},\"burnable()\":{\"notice\":\"indicates whether or not governance tokens are burnable\"},\"decreaseTransferLockAllowance(address,uint8)\":{\"notice\":\"Used to decrease the number of transfer locks that can be added by another address. This cannot be used to revoke or otherwise remove an existing transfer lock, only to reduce the number of additional locks that can be added by the specified account.\"},\"disableBurn()\":{\"notice\":\"this function disables the burning of governance tokens. Only the contract admin can call this function.\"},\"disableTransfer()\":{\"notice\":\"this function disables transfers of governance tokens. Only the contract admin can call this function.\"},\"enableBurn()\":{\"notice\":\"this function enables the burning of governance tokens. Only the contract admin can call this function.\"},\"enableTransfer()\":{\"notice\":\"this function enables transfers of governance tokens. Only the contract admin can call this function.\"},\"getAvailableBalance(address)\":{\"notice\":\"Returns the amount of tokens that are not locked up as of current block.timestamp.\"},\"getAvailableBalanceAt(address,uint256)\":{\"notice\":\"Retrieves the balance of an account that is not locked at a given timestamp.\"},\"getTransferLockTotal(address)\":{\"notice\":\"Returns the total amount locked up as of current block.timestamp. Returns 0 if there are no transfer locks.\"},\"getTransferLockTotalAt(address,uint256)\":{\"notice\":\"Returns the total amount locked up as of the given timestamp. Returns 0 if there are no transfer locks.\"},\"increaseTransferLockAllowance(address,uint8)\":{\"notice\":\"Used to increase the number of transfer locks that can be added by another address. Only allowing a limited number of locks to be added by a given address prevents a variety of potentially abusive patterns.\"},\"initialize(address,string,string,uint256)\":{\"notice\":\"Initialize the ERC20Base contract. It is called during contract deployment.\"},\"mint(address,uint256)\":{\"notice\":\"this function mints governance token to the recipient's wallet. An event is fired whenever new tokens are minted indicating who initiated the mint, where they were minted to and how many tokens were minted.\"},\"pause()\":{\"notice\":\"this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transfer(address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferWithLock(address,uint256,uint256)\":{\"notice\":\"Used to transfer tokens to an address and lock them up until a given time.\"},\"transferrable()\":{\"notice\":\"indicates whether or not governance tokens are transferrable\"},\"unpause()\":{\"notice\":\"this function unpauses the contract\"}},\"notice\":\"this library enables time-locked transfers of ERC20 tokens. Transferlocks are the inverse of a vesting schedule. They allow the holder to vote with their weight but not to transfer them before a certain date.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/TransferLocks.sol\":\"TransferLocks\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@diamond/=lib/diamond-2-hardhat/contracts/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"contracts/interfaces/ITransferLocks.sol\":{\"keccak256\":\"0x92d4f876e8930274f4b68b882719c8ec467a4ed8c62a7f0ba168899f4c7eed03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d9e03e60e5e0977fffc2fdbdc0229be781f680d6bb9db5286f9c266456617dd\",\"dweb:/ipfs/QmW2oLD51TPvHcm6iMo4PUvm1rzoh2EHeLPigXu3zUwQyj\"]},\"contracts/token/governance/ERC20Base.sol\":{\"keccak256\":\"0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35\",\"dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa\"]},\"contracts/utils/TransferLocks.sol\":{\"keccak256\":\"0xa65606c7c944e7ca8fb64f478e858d5d033fc2648b04cb123f0f84bd5713758e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d0fe9191b3396a8f32713e3c14f085bef2326566f996b31f2e7c32648e01370\",\"dweb:/ipfs/QmZxZiEUsthiut7TYbRWXoGg7PZAtTHwfz5P9DwM9r5xJt\"]},\"contracts/utils/TransferLocksStorage.sol\":{\"keccak256\":\"0x7659749e6f58b25bc2055a5856ee233fc0f29a6f2ebfded225f39b6e76cc47dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a77620538a9311a33b45c769bd4f9baba0cdda3557eff01118781c2e4ba7f36\",\"dweb:/ipfs/QmdsJtnwxXX8yVUb9cDBrzvjaAPowEnLbhGJmNCPCYiYQq\"]},\"lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BurnEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFERRER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addTransferLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowances",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "deadlines",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchTransferWithLocks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "amount",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseTransferLockAllowance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAvailableBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAvailableBalanceAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransferLockTotal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransferLockTotalAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "amount",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseTransferLockAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferWithLock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferrable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addTransferLock(uint256,uint256)": {
            "details": "Block timestamp may be innaccurate by up to 15 minutes, but on a timescale of years this is negligible.",
            "params": {
              "amount": "the amount of tokens to restrict the transfer of.",
              "deadline": "the date (as a unix timestamp in UTC) until which amount will be untransferrable."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "allowances(address,address)": {
            "params": {
              "account": "the address that granted the allowance.",
              "recipient": "the address that is allowed to add transfer locks."
            }
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "batchTransferWithLocks(address[],uint256[],uint256[])": {
            "details": "block timestamp may be innaccurate by up to 15 minutes, but on the expected timescales, this is negligible.",
            "params": {
              "amounts": "the amounts of tokens to transfer.",
              "deadlines": "the dates (as unix timestamps in UTC) until which amounts will be untransferrable.",
              "recipients": "the addresses to transfer tokens to."
            }
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "burnable()": {
            "returns": {
              "_0": "true if tokens are burnable, false otherwise."
            }
          },
          "cap()": {
            "details": "Returns the cap on the token's total supply."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "decreaseTransferLockAllowance(address,uint8)": {
            "params": {
              "account": "the address to decrease the allowance for.",
              "amount": "the amount to decrease the allowance by."
            }
          },
          "disableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to disabled and by whom."
          },
          "disableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to disabled and by whom."
          },
          "enableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to enabled and by whom."
          },
          "enableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to enabled and by whom."
          },
          "getAvailableBalance(address)": {
            "params": {
              "account": "the address to check."
            },
            "returns": {
              "amount": "the amount of tokens that are not transfer-locked."
            }
          },
          "getAvailableBalanceAt(address,uint256)": {
            "params": {
              "account": "the address to check.",
              "timestamp": "the timestamp to check."
            },
            "returns": {
              "amount": "the amount of tokens that are not transfer-locked."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getTransferLockTotal(address)": {
            "params": {
              "account": "the address to check."
            },
            "returns": {
              "amount": "the amount of tokens that are transfer-locked."
            }
          },
          "getTransferLockTotalAt(address,uint256)": {
            "params": {
              "account": "the address to check.",
              "timestamp": "the timestamp to check at."
            },
            "returns": {
              "amount": "the amount of tokens that are transfer-locked."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "increaseTransferLockAllowance(address,uint8)": {
            "params": {
              "account": "the address to increase the allowance for.",
              "amount": "the amount to increase the allowance by."
            }
          },
          "initialize(address,string,string,uint256)": {
            "params": {
              "admin": "the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.",
              "supplyCap": "cap on the total supply mintable by this contract.",
              "tokenName": "the name of the token. Typically this is the name of the DAO.",
              "tokenSymbol": "the symbol of the token. Typically this is a short abbreviation of the DAO's name."
            }
          },
          "mint(address,uint256)": {
            "details": "this is only callable by an address that has the MINTER_ROLE. The Origami platform may call this function to mint new governance tokens in accordance with a DAO's charter. When it does so, they will always be minted to the treasury multisig.",
            "params": {
              "amount": "the amount of tokens to mint.",
              "to": "the address of the recipient's wallet."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "pause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
            "params": {
              "interfaceId": "The interface identifier, as specified in ERC-165"
            },
            "returns": {
              "_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferFrom(address,address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferWithLock(address,uint256,uint256)": {
            "details": "block timestamp may be innaccurate by up to 15 minutes, but on the expected timescales, this is negligible.",
            "params": {
              "amount": "the amount of tokens to transfer.",
              "deadline": "the date (as a unix timestamp in UTC) until which amount will be untransferrable.",
              "recipient": "the address to transfer tokens to."
            }
          },
          "transferrable()": {
            "returns": {
              "_0": "true if tokens are transferrable, false otherwise."
            }
          },
          "unpause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BURNER_ROLE()": {
            "notice": "the role hash for granting the ability to burn governance tokens."
          },
          "MINTER_ROLE()": {
            "notice": "the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin."
          },
          "PAUSER_ROLE()": {
            "notice": "the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin."
          },
          "TRANSFERRER_ROLE()": {
            "notice": "the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens."
          },
          "addTransferLock(uint256,uint256)": {
            "notice": "Used to voluntarily lock up `amount` tokens until a given time. Tokens in excess of `amount` may be transferred."
          },
          "allowances(address,address)": {
            "notice": "Returns the number of transfer locks `account` has permitted `recipient`."
          },
          "batchTransferWithLocks(address[],uint256[],uint256[])": {
            "notice": "Used to transfer tokens to multiple addresses and lock them up until a given time."
          },
          "burnable()": {
            "notice": "indicates whether or not governance tokens are burnable"
          },
          "decreaseTransferLockAllowance(address,uint8)": {
            "notice": "Used to decrease the number of transfer locks that can be added by another address. This cannot be used to revoke or otherwise remove an existing transfer lock, only to reduce the number of additional locks that can be added by the specified account."
          },
          "disableBurn()": {
            "notice": "this function disables the burning of governance tokens. Only the contract admin can call this function."
          },
          "disableTransfer()": {
            "notice": "this function disables transfers of governance tokens. Only the contract admin can call this function."
          },
          "enableBurn()": {
            "notice": "this function enables the burning of governance tokens. Only the contract admin can call this function."
          },
          "enableTransfer()": {
            "notice": "this function enables transfers of governance tokens. Only the contract admin can call this function."
          },
          "getAvailableBalance(address)": {
            "notice": "Returns the amount of tokens that are not locked up as of current block.timestamp."
          },
          "getAvailableBalanceAt(address,uint256)": {
            "notice": "Retrieves the balance of an account that is not locked at a given timestamp."
          },
          "getTransferLockTotal(address)": {
            "notice": "Returns the total amount locked up as of current block.timestamp. Returns 0 if there are no transfer locks."
          },
          "getTransferLockTotalAt(address,uint256)": {
            "notice": "Returns the total amount locked up as of the given timestamp. Returns 0 if there are no transfer locks."
          },
          "increaseTransferLockAllowance(address,uint8)": {
            "notice": "Used to increase the number of transfer locks that can be added by another address. Only allowing a limited number of locks to be added by a given address prevents a variety of potentially abusive patterns."
          },
          "initialize(address,string,string,uint256)": {
            "notice": "Initialize the ERC20Base contract. It is called during contract deployment."
          },
          "mint(address,uint256)": {
            "notice": "this function mints governance token to the recipient's wallet. An event is fired whenever new tokens are minted indicating who initiated the mint, where they were minted to and how many tokens were minted."
          },
          "pause()": {
            "notice": "this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations."
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface"
          },
          "transfer(address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferWithLock(address,uint256,uint256)": {
            "notice": "Used to transfer tokens to an address and lock them up until a given time."
          },
          "transferrable()": {
            "notice": "indicates whether or not governance tokens are transferrable"
          },
          "unpause()": {
            "notice": "this function unpauses the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@diamond/=lib/diamond-2-hardhat/contracts/",
        ":@ds-test/=lib/ds-test/src/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@oz/=lib/openzeppelin-contracts/contracts/",
        ":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/utils/TransferLocks.sol": "TransferLocks"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/ITransferLocks.sol": {
        "keccak256": "0x92d4f876e8930274f4b68b882719c8ec467a4ed8c62a7f0ba168899f4c7eed03",
        "urls": [
          "bzz-raw://6d9e03e60e5e0977fffc2fdbdc0229be781f680d6bb9db5286f9c266456617dd",
          "dweb:/ipfs/QmW2oLD51TPvHcm6iMo4PUvm1rzoh2EHeLPigXu3zUwQyj"
        ],
        "license": "MIT"
      },
      "contracts/token/governance/ERC20Base.sol": {
        "keccak256": "0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428",
        "urls": [
          "bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35",
          "dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa"
        ],
        "license": "MIT"
      },
      "contracts/utils/TransferLocks.sol": {
        "keccak256": "0xa65606c7c944e7ca8fb64f478e858d5d033fc2648b04cb123f0f84bd5713758e",
        "urls": [
          "bzz-raw://9d0fe9191b3396a8f32713e3c14f085bef2326566f996b31f2e7c32648e01370",
          "dweb:/ipfs/QmZxZiEUsthiut7TYbRWXoGg7PZAtTHwfz5P9DwM9r5xJt"
        ],
        "license": "MIT"
      },
      "contracts/utils/TransferLocksStorage.sol": {
        "keccak256": "0x7659749e6f58b25bc2055a5856ee233fc0f29a6f2ebfded225f39b6e76cc47dc",
        "urls": [
          "bzz-raw://8a77620538a9311a33b45c769bd4f9baba0cdda3557eff01118781c2e4ba7f36",
          "dweb:/ipfs/QmdsJtnwxXX8yVUb9cDBrzvjaAPowEnLbhGJmNCPCYiYQq"
        ],
        "license": "MIT"
      },
      "lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
        "keccak256": "0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92",
        "urls": [
          "bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6",
          "dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/utils/TransferLocks.sol",
    "id": 5907,
    "exportedSymbols": {
      "ERC20Base": [
        4266
      ],
      "IERC165": [
        6719
      ],
      "ITransferLocks": [
        3548
      ],
      "TransferLocks": [
        5906
      ],
      "TransferLocksStorage": [
        6327
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5328:30",
    "nodes": [
      {
        "id": 5507,
        "nodeType": "PragmaDirective",
        "src": "32:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 5509,
        "nodeType": "ImportDirective",
        "src": "57:71:30",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ITransferLocks.sol",
        "file": "contracts/interfaces/ITransferLocks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5907,
        "sourceUnit": 3549,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5508,
              "name": "ITransferLocks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3548,
              "src": "65:14:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5511,
        "nodeType": "ImportDirective",
        "src": "129:67:30",
        "nodes": [],
        "absolutePath": "contracts/token/governance/ERC20Base.sol",
        "file": "contracts/token/governance/ERC20Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5907,
        "sourceUnit": 4267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5510,
              "name": "ERC20Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4266,
              "src": "137:9:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5513,
        "nodeType": "ImportDirective",
        "src": "197:78:30",
        "nodes": [],
        "absolutePath": "contracts/utils/TransferLocksStorage.sol",
        "file": "contracts/utils/TransferLocksStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5907,
        "sourceUnit": 6328,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5512,
              "name": "TransferLocksStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6327,
              "src": "205:20:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5515,
        "nodeType": "ImportDirective",
        "src": "276:56:30",
        "nodes": [],
        "absolutePath": "lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol",
        "file": "@diamond/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5907,
        "sourceUnit": 6720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5514,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6719,
              "src": "284:7:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5906,
        "nodeType": "ContractDefinition",
        "src": "821:4538:30",
        "nodes": [
          {
            "id": 5544,
            "nodeType": "FunctionDefinition",
            "src": "923:181:30",
            "nodes": [],
            "body": {
              "id": 5543,
              "nodeType": "Block",
              "src": "1021:83:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5537,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1068:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1072:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5539,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "1080:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5540,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5527,
                        "src": "1088:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5534,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "1031:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1052:15:30",
                      "memberName": "addTransferLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6264,
                      "src": "1031:36:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5542,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:66:30"
                }
              ]
            },
            "baseFunctions": [
              3462
            ],
            "documentation": {
              "id": 5523,
              "nodeType": "StructuredDocumentation",
              "src": "888:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "e672ce3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5530,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5525,
                    "src": "1003:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5531,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5527,
                    "src": "1011:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5529,
                  "name": "whenValidLock",
                  "nameLocations": [
                    "989:13:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5905,
                  "src": "989:13:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "989:31:30"
              }
            ],
            "name": "addTransferLock",
            "nameLocation": "932:15:30",
            "parameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "956:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5544,
                  "src": "948:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5527,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "972:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5544,
                  "src": "964:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "947:34:30"
            },
            "returnParameters": {
              "id": 5533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5561,
            "nodeType": "FunctionDefinition",
            "src": "1145:159:30",
            "nodes": [],
            "body": {
              "id": 5560,
              "nodeType": "Block",
              "src": "1229:75:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5556,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5547,
                        "src": "1278:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5557,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5549,
                        "src": "1287:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5554,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "1246:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1267:10:30",
                      "memberName": "allowances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6080,
                      "src": "1246:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint8_$",
                        "typeString": "function (address,address) view returns (uint8)"
                      }
                    },
                    "id": 5558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:51:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 5553,
                  "id": 5559,
                  "nodeType": "Return",
                  "src": "1239:58:30"
                }
              ]
            },
            "baseFunctions": [
              3472
            ],
            "documentation": {
              "id": 5545,
              "nodeType": "StructuredDocumentation",
              "src": "1110:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "55b6ed5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowances",
            "nameLocation": "1154:10:30",
            "parameters": {
              "id": 5550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5547,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1173:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5561,
                  "src": "1165:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5549,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1190:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5561,
                  "src": "1182:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:36:30"
            },
            "returnParameters": {
              "id": 5553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5561,
                  "src": "1222:5:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5551,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:7:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5587,
            "nodeType": "FunctionDefinition",
            "src": "1345:262:30",
            "nodes": [],
            "body": {
              "id": 5586,
              "nodeType": "Block",
              "src": "1422:185:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5570,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "1440:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 5571,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1451:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1455:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1451:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1440:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a206163636f756e747320646f206e6f74206e65656420746f20617070726f7665207468656d73656c766573",
                        "id": 5574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1463:58:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f11680c00f4bcbf724a0697be99c07a295824ecea38fe8d30c2aa4297e562b7",
                          "typeString": "literal_string \"TransferLock: accounts do not need to approve themselves\""
                        },
                        "value": "TransferLock: accounts do not need to approve themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f11680c00f4bcbf724a0697be99c07a295824ecea38fe8d30c2aa4297e562b7",
                          "typeString": "literal_string \"TransferLock: accounts do not need to approve themselves\""
                        }
                      ],
                      "id": 5569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1432:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:90:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5576,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:90:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1572:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1576:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1572:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5582,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5564,
                        "src": "1584:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5583,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5566,
                        "src": "1593:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 5577,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "1532:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1553:18:30",
                      "memberName": "increaseAllowances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6011,
                      "src": "1532:39:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 5584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:68:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5585,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:68:30"
                }
              ]
            },
            "baseFunctions": [
              3480
            ],
            "documentation": {
              "id": 5562,
              "nodeType": "StructuredDocumentation",
              "src": "1310:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "6239d4a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseTransferLockAllowance",
            "nameLocation": "1354:29:30",
            "parameters": {
              "id": 5567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5564,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1392:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5587,
                  "src": "1384:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5566,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1407:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5587,
                  "src": "1401:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5565,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1383:31:30"
            },
            "returnParameters": {
              "id": 5568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5613,
            "nodeType": "FunctionDefinition",
            "src": "1648:262:30",
            "nodes": [],
            "body": {
              "id": 5612,
              "nodeType": "Block",
              "src": "1725:185:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5596,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5590,
                          "src": "1743:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 5597,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1754:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1758:6:30",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1754:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1743:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a206163636f756e747320646f206e6f74206e65656420746f20617070726f7665207468656d73656c766573",
                        "id": 5600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1766:58:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f11680c00f4bcbf724a0697be99c07a295824ecea38fe8d30c2aa4297e562b7",
                          "typeString": "literal_string \"TransferLock: accounts do not need to approve themselves\""
                        },
                        "value": "TransferLock: accounts do not need to approve themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f11680c00f4bcbf724a0697be99c07a295824ecea38fe8d30c2aa4297e562b7",
                          "typeString": "literal_string \"TransferLock: accounts do not need to approve themselves\""
                        }
                      ],
                      "id": 5595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1735:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:90:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5602,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:90:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1875:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1879:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1875:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5608,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5590,
                        "src": "1887:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5609,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5592,
                        "src": "1896:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 5603,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "1835:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1856:18:30",
                      "memberName": "decreaseAllowances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6057,
                      "src": "1835:39:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 5610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:68:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5611,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:68:30"
                }
              ]
            },
            "baseFunctions": [
              3488
            ],
            "documentation": {
              "id": 5588,
              "nodeType": "StructuredDocumentation",
              "src": "1613:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "1f1eb79b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseTransferLockAllowance",
            "nameLocation": "1657:29:30",
            "parameters": {
              "id": 5593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5590,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1695:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5613,
                  "src": "1687:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1710:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5613,
                  "src": "1704:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5591,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1686:31:30"
            },
            "returnParameters": {
              "id": 5594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1725:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5629,
            "nodeType": "FunctionDefinition",
            "src": "1951:171:30",
            "nodes": [],
            "body": {
              "id": 5628,
              "nodeType": "Block",
              "src": "2035:87:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5623,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5616,
                        "src": "2090:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5624,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2099:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2105:9:30",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2099:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5621,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "2052:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2073:16:30",
                      "memberName": "getTotalLockedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6326,
                      "src": "2052:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2052:63:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5620,
                  "id": 5627,
                  "nodeType": "Return",
                  "src": "2045:70:30"
                }
              ]
            },
            "baseFunctions": [
              3496
            ],
            "documentation": {
              "id": 5614,
              "nodeType": "StructuredDocumentation",
              "src": "1916:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "2909ae01",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTransferLockTotal",
            "nameLocation": "1960:20:30",
            "parameters": {
              "id": 5617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5616,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1989:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5629,
                  "src": "1981:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:17:30"
            },
            "returnParameters": {
              "id": 5620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5619,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2027:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5629,
                  "src": "2019:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:16:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5646,
            "nodeType": "FunctionDefinition",
            "src": "2163:186:30",
            "nodes": [],
            "body": {
              "id": 5645,
              "nodeType": "Block",
              "src": "2268:81:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5641,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5632,
                        "src": "2323:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5642,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "2332:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5639,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "2285:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2306:16:30",
                      "memberName": "getTotalLockedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6326,
                      "src": "2285:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2285:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5638,
                  "id": 5644,
                  "nodeType": "Return",
                  "src": "2278:64:30"
                }
              ]
            },
            "baseFunctions": [
              3506
            ],
            "documentation": {
              "id": 5630,
              "nodeType": "StructuredDocumentation",
              "src": "2128:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "d90964cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTransferLockTotalAt",
            "nameLocation": "2172:22:30",
            "parameters": {
              "id": 5635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5632,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2203:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5646,
                  "src": "2195:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5634,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2220:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5646,
                  "src": "2212:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:36:30"
            },
            "returnParameters": {
              "id": 5638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5637,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2260:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5646,
                  "src": "2252:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:16:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5661,
            "nodeType": "FunctionDefinition",
            "src": "2390:154:30",
            "nodes": [],
            "body": {
              "id": 5660,
              "nodeType": "Block",
              "src": "2473:71:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5655,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5649,
                        "src": "2512:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5656,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2521:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2527:9:30",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2521:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5654,
                      "name": "getAvailableBalanceAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5686,
                      "src": "2490:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:47:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5653,
                  "id": 5659,
                  "nodeType": "Return",
                  "src": "2483:54:30"
                }
              ]
            },
            "baseFunctions": [
              3514
            ],
            "documentation": {
              "id": 5647,
              "nodeType": "StructuredDocumentation",
              "src": "2355:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "6c24a76f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nameLocation": "2399:19:30",
            "parameters": {
              "id": 5650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5649,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2427:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5661,
                  "src": "2419:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:17:30"
            },
            "returnParameters": {
              "id": 5653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5652,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2465:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5661,
                  "src": "2457:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2457:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2456:16:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5686,
            "nodeType": "FunctionDefinition",
            "src": "2585:249:30",
            "nodes": [],
            "body": {
              "id": 5685,
              "nodeType": "Block",
              "src": "2689:145:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5672,
                      "mutability": "mutable",
                      "name": "totalLocked",
                      "nameLocation": "2707:11:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 5685,
                      "src": "2699:19:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5671,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2699:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5678,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5675,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5664,
                        "src": "2759:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5676,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5666,
                        "src": "2768:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5673,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "2721:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2742:16:30",
                      "memberName": "getTotalLockedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6326,
                      "src": "2721:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2699:79:30"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 5680,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5664,
                          "src": "2805:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5679,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3935
                        ],
                        "referencedDeclaration": 3935,
                        "src": "2795:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 5681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2795:18:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5682,
                      "name": "totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5672,
                      "src": "2816:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2795:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5670,
                  "id": 5684,
                  "nodeType": "Return",
                  "src": "2788:39:30"
                }
              ]
            },
            "baseFunctions": [
              3524
            ],
            "documentation": {
              "id": 5662,
              "nodeType": "StructuredDocumentation",
              "src": "2550:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "e851b720",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalanceAt",
            "nameLocation": "2594:21:30",
            "parameters": {
              "id": 5667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5664,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2624:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "2616:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5666,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2641:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "2633:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:36:30"
            },
            "returnParameters": {
              "id": 5670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5669,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2681:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "2673:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:16:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5734,
            "nodeType": "FunctionDefinition",
            "src": "2929:502:30",
            "nodes": [],
            "body": {
              "id": 5733,
              "nodeType": "Block",
              "src": "3027:404:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5698,
                      "mutability": "mutable",
                      "name": "lockedAmount",
                      "nameLocation": "3045:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 5733,
                      "src": "3037:20:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5697,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3037:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5702,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5700,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5689,
                        "src": "3081:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5699,
                      "name": "getTransferLockTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5629,
                      "src": "3060:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 5701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3060:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:49:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5703,
                        "name": "lockedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5698,
                        "src": "3147:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 5704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3147:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 5707,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5689,
                            "src": "3177:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5706,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            3935
                          ],
                          "referencedDeclaration": 3935,
                          "src": "3167:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 5708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3167:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 5709,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5693,
                        "src": "3186:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3167:25:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3147:45:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5724,
                  "nodeType": "IfStatement",
                  "src": "3143:228:30",
                  "trueBody": {
                    "id": 5723,
                    "nodeType": "Block",
                    "src": "3194:177:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 5714,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5689,
                                      "src": "3277:4:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5713,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      3935
                                    ],
                                    "referencedDeclaration": 3935,
                                    "src": "3267:9:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 5715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3267:15:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 5716,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5693,
                                  "src": "3285:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3267:24:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 5718,
                                "name": "lockedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5698,
                                "src": "3295:12:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3267:40:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e736665724c6f636b3a2074686973206578636565647320796f757220756e6c6f636b65642062616c616e6365",
                              "id": 5720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3309:50:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e8309d0ae0f4b2bba3997f887c407b767a12acb355aaf4ffd4c19ed17690fc0",
                                "typeString": "literal_string \"TransferLock: this exceeds your unlocked balance\""
                              },
                              "value": "TransferLock: this exceeds your unlocked balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9e8309d0ae0f4b2bba3997f887c407b767a12acb355aaf4ffd4c19ed17690fc0",
                                "typeString": "literal_string \"TransferLock: this exceeds your unlocked balance\""
                              }
                            ],
                            "id": 5712,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3259:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3259:101:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5722,
                        "nodeType": "ExpressionStatement",
                        "src": "3259:101:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5728,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5689,
                        "src": "3407:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5729,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5691,
                        "src": "3413:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5730,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5693,
                        "src": "3417:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5725,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3380:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransferLocks_$5906_$",
                          "typeString": "type(contract super TransferLocks)"
                        }
                      },
                      "id": 5727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3386:20:30",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4188,
                      "src": "3380:26:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5732,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:44:30"
                }
              ]
            },
            "baseFunctions": [
              4188
            ],
            "documentation": {
              "id": 5687,
              "nodeType": "StructuredDocumentation",
              "src": "2840:84:30",
              "text": "@dev Override ERC20Upgradeable._beforeTokenTransfer to check for transfer locks."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2938:20:30",
            "overrides": {
              "id": 5695,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3018:8:30"
            },
            "parameters": {
              "id": 5694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5689,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2967:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5734,
                  "src": "2959:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5691,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2981:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5734,
                  "src": "2973:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5693,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2993:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5734,
                  "src": "2985:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2958:42:30"
            },
            "returnParameters": {
              "id": 5696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5788,
            "nodeType": "FunctionDefinition",
            "src": "3472:449:30",
            "nodes": [],
            "body": {
              "id": 5787,
              "nodeType": "Block",
              "src": "3610:311:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5749,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5737,
                            "src": "3628:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 5752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3649:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 5751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3641:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5750,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3641:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3641:10:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3628:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5755,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5737,
                            "src": "3655:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 5756,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3668:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3672:6:30",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3668:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3655:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3628:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20696e76616c696420726563697069656e74",
                        "id": 5760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07d30ff82b2d029540f45bcbd67c04f55583bc1eda1222ea5caefa2509fb4a79",
                          "typeString": "literal_string \"TransferLock: invalid recipient\""
                        },
                        "value": "TransferLock: invalid recipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07d30ff82b2d029540f45bcbd67c04f55583bc1eda1222ea5caefa2509fb4a79",
                          "typeString": "literal_string \"TransferLock: invalid recipient\""
                        }
                      ],
                      "id": 5748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3620:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:94:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5762,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:94:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5766,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5737,
                        "src": "3764:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3775:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3779:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3775:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 5769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3787:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 5763,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "3724:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3745:18:30",
                      "memberName": "decreaseAllowances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6057,
                      "src": "3724:39:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 5770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:65:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5771,
                  "nodeType": "ExpressionStatement",
                  "src": "3724:65:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5773,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3809:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3813:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3809:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5775,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5737,
                        "src": "3821:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5776,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5739,
                        "src": "3832:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5772,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7791,
                      "src": "3799:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3799:40:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5778,
                  "nodeType": "ExpressionStatement",
                  "src": "3799:40:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5782,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5737,
                        "src": "3886:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5783,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5739,
                        "src": "3897:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5784,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "3905:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5779,
                        "name": "TransferLocksStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6327,
                        "src": "3849:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLocksStorage_$6327_$",
                          "typeString": "type(library TransferLocksStorage)"
                        }
                      },
                      "id": 5781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3870:15:30",
                      "memberName": "addTransferLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6264,
                      "src": "3849:36:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:65:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5786,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:65:30"
                }
              ]
            },
            "baseFunctions": [
              3534
            ],
            "documentation": {
              "id": 5735,
              "nodeType": "StructuredDocumentation",
              "src": "3437:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "de6baccb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5744,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5739,
                    "src": "3588:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5745,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5741,
                    "src": "3596:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5743,
                  "name": "whenValidLock",
                  "nameLocations": [
                    "3574:13:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5905,
                  "src": "3574:13:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "3574:31:30"
              }
            ],
            "name": "transferWithLock",
            "nameLocation": "3481:16:30",
            "parameters": {
              "id": 5742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5737,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3506:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "3498:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5739,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3525:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "3517:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5741,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "3541:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "3533:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3533:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3497:53:30"
            },
            "returnParameters": {
              "id": 5747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3610:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5845,
            "nodeType": "FunctionDefinition",
            "src": "3962:546:30",
            "nodes": [],
            "body": {
              "id": 5844,
              "nodeType": "Block",
              "src": "4122:386:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5802,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5792,
                            "src": "4140:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 5803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4151:6:30",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4140:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5804,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5795,
                            "src": "4161:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 5805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4169:6:30",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4161:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4140:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20726563697069656e747320616e6420616d6f756e7473206d757374206265207468652073616d65206c656e677468",
                        "id": 5807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4177:62:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_508c5485161bf831386d390a52a20ef3128a29b88fb2771838f9940bce6fb54e",
                          "typeString": "literal_string \"TransferLock: recipients and amounts must be the same length\""
                        },
                        "value": "TransferLock: recipients and amounts must be the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_508c5485161bf831386d390a52a20ef3128a29b88fb2771838f9940bce6fb54e",
                          "typeString": "literal_string \"TransferLock: recipients and amounts must be the same length\""
                        }
                      ],
                      "id": 5801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4132:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:108:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5809,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:108:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5811,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5792,
                            "src": "4258:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 5812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4269:6:30",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4258:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5813,
                            "name": "deadlines",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5798,
                            "src": "4279:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 5814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4289:6:30",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4279:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4258:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20726563697069656e747320616e6420646561646c696e6573206d757374206265207468652073616d65206c656e677468",
                        "id": 5816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4297:64:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc405998a351e1de6e9dabfbd646ad659df74ed2e2871c9066cd3e51cd4a3a3e",
                          "typeString": "literal_string \"TransferLock: recipients and deadlines must be the same length\""
                        },
                        "value": "TransferLock: recipients and deadlines must be the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc405998a351e1de6e9dabfbd646ad659df74ed2e2871c9066cd3e51cd4a3a3e",
                          "typeString": "literal_string \"TransferLock: recipients and deadlines must be the same length\""
                        }
                      ],
                      "id": 5810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4250:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4250:112:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5818,
                  "nodeType": "ExpressionStatement",
                  "src": "4250:112:30"
                },
                {
                  "body": {
                    "id": 5842,
                    "nodeType": "Block",
                    "src": "4420:82:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 5831,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5792,
                                "src": "4451:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 5833,
                              "indexExpression": {
                                "id": 5832,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5820,
                                "src": "4462:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4451:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 5834,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5795,
                                "src": "4466:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 5836,
                              "indexExpression": {
                                "id": 5835,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5820,
                                "src": "4474:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4466:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 5837,
                                "name": "deadlines",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5798,
                                "src": "4478:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 5839,
                              "indexExpression": {
                                "id": 5838,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5820,
                                "src": "4488:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4478:12:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5830,
                            "name": "transferWithLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5788,
                            "src": "4434:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 5840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4434:57:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5841,
                        "nodeType": "ExpressionStatement",
                        "src": "4434:57:30"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5823,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5820,
                      "src": "4392:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 5824,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
                        "src": "4396:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 5825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4407:6:30",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4396:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4392:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5843,
                  "initializationExpression": {
                    "assignments": [
                      5820
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5820,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4385:1:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 5843,
                        "src": "4377:9:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5819,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4377:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5822,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4389:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4377:13:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4415:3:30",
                      "subExpression": {
                        "id": 5827,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5820,
                        "src": "4415:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5829,
                    "nodeType": "ExpressionStatement",
                    "src": "4415:3:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "4372:130:30"
                }
              ]
            },
            "baseFunctions": [
              3547
            ],
            "documentation": {
              "id": 5789,
              "nodeType": "StructuredDocumentation",
              "src": "3927:30:30",
              "text": "@inheritdoc ITransferLocks"
            },
            "functionSelector": "3def6038",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchTransferWithLocks",
            "nameLocation": "3971:22:30",
            "parameters": {
              "id": 5799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5792,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "4022:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "4003:29:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5790,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4003:7:30",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5791,
                    "nodeType": "ArrayTypeName",
                    "src": "4003:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5795,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4061:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "4042:26:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5793,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4042:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5794,
                    "nodeType": "ArrayTypeName",
                    "src": "4042:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5798,
                  "mutability": "mutable",
                  "name": "deadlines",
                  "nameLocation": "4097:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "4078:28:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5796,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4078:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5797,
                    "nodeType": "ArrayTypeName",
                    "src": "4078:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3993:119:30"
            },
            "returnParameters": {
              "id": 5800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4122:0:30"
            },
            "scope": 5906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5869,
            "nodeType": "FunctionDefinition",
            "src": "4542:222:30",
            "nodes": [],
            "body": {
              "id": 5868,
              "nodeType": "Block",
              "src": "4653:111:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5856,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5848,
                        "src": "4670:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5858,
                              "name": "ITransferLocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3548,
                              "src": "4690:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITransferLocks_$3548_$",
                                "typeString": "type(contract ITransferLocks)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ITransferLocks_$3548_$",
                                "typeString": "type(contract ITransferLocks)"
                              }
                            ],
                            "id": 5857,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4685:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4685:20:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ITransferLocks_$3548",
                            "typeString": "type(contract ITransferLocks)"
                          }
                        },
                        "id": 5860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4706:11:30",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4685:32:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4670:47:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5864,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5848,
                          "src": "4745:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5862,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4721:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_TransferLocks_$5906_$",
                            "typeString": "type(contract super TransferLocks)"
                          }
                        },
                        "id": 5863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4727:17:30",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4165,
                        "src": "4721:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4721:36:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4670:87:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5855,
                  "id": 5867,
                  "nodeType": "Return",
                  "src": "4663:94:30"
                }
              ]
            },
            "baseFunctions": [
              4165,
              6718
            ],
            "documentation": {
              "id": 5846,
              "nodeType": "StructuredDocumentation",
              "src": "4514:23:30",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4551:17:30",
            "overrides": {
              "id": 5852,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5850,
                  "name": "ERC20Base",
                  "nameLocations": [
                    "4618:9:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4266,
                  "src": "4618:9:30"
                },
                {
                  "id": 5851,
                  "name": "IERC165",
                  "nameLocations": [
                    "4629:7:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6719,
                  "src": "4629:7:30"
                }
              ],
              "src": "4609:28:30"
            },
            "parameters": {
              "id": 5849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5848,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4576:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5869,
                  "src": "4569:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5847,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:20:30"
            },
            "returnParameters": {
              "id": 5855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5869,
                  "src": "4647:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4647:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4646:6:30"
            },
            "scope": 5906,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5905,
            "nodeType": "ModifierDefinition",
            "src": "4894:463:30",
            "nodes": [],
            "body": {
              "id": 5904,
              "nodeType": "Block",
              "src": "4951:406:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5877,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5872,
                          "src": "5016:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5025:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5016:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 5880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5028:48:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bab12406f845afb06b7ad1e15b8ef27527fc0fece26a5331cbaef615a54242b",
                          "typeString": "literal_string \"TransferLock: amount must be greater than zero\""
                        },
                        "value": "TransferLock: amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bab12406f845afb06b7ad1e15b8ef27527fc0fece26a5331cbaef615a54242b",
                          "typeString": "literal_string \"TransferLock: amount must be greater than zero\""
                        }
                      ],
                      "id": 5876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5008:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5008:69:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5882,
                  "nodeType": "ExpressionStatement",
                  "src": "5008:69:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5884,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5874,
                          "src": "5095:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 5885,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5106:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5112:9:30",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5106:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5095:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20646561646c696e65206d75737420626520696e2074686520667574757265",
                        "id": 5888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5123:46:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b315ed809b63c1d435cddc1db7211c85b7993480051212beef0c79c5943b740d",
                          "typeString": "literal_string \"TransferLock: deadline must be in the future\""
                        },
                        "value": "TransferLock: deadline must be in the future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b315ed809b63c1d435cddc1db7211c85b7993480051212beef0c79c5943b740d",
                          "typeString": "literal_string \"TransferLock: deadline must be in the future\""
                        }
                      ],
                      "id": 5883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5087:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5087:83:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5890,
                  "nodeType": "ExpressionStatement",
                  "src": "5087:83:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5892,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5872,
                          "src": "5201:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5894,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5233:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5237:6:30",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5233:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5896,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5245:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5251:9:30",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5245:15:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5893,
                            "name": "getAvailableBalanceAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5686,
                            "src": "5211:21:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 5898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5211:50:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5201:60:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724c6f636b3a20616d6f756e742063616e6e6f742065786365656420617661696c61626c652062616c616e6365",
                        "id": 5900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5275:54:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63bd57880202fc836dbf5bffdc42fc89efefa6ba73124cb11eca50d4750dddb1",
                          "typeString": "literal_string \"TransferLock: amount cannot exceed available balance\""
                        },
                        "value": "TransferLock: amount cannot exceed available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63bd57880202fc836dbf5bffdc42fc89efefa6ba73124cb11eca50d4750dddb1",
                          "typeString": "literal_string \"TransferLock: amount cannot exceed available balance\""
                        }
                      ],
                      "id": 5891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5180:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:159:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5902,
                  "nodeType": "ExpressionStatement",
                  "src": "5180:159:30"
                },
                {
                  "id": 5903,
                  "nodeType": "PlaceholderStatement",
                  "src": "5349:1:30"
                }
              ]
            },
            "documentation": {
              "id": 5870,
              "nodeType": "StructuredDocumentation",
              "src": "4770:119:30",
              "text": "@dev Modifier to check that the deadline is in the future and the amount is not greater than the available balance."
            },
            "name": "whenValidLock",
            "nameLocation": "4903:13:30",
            "parameters": {
              "id": 5875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5872,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4925:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5905,
                  "src": "4917:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5874,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "4941:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 5905,
                  "src": "4933:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4933:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4916:34:30"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5517,
              "name": "ERC20Base",
              "nameLocations": [
                "847:9:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "847:9:30"
            },
            "id": 5518,
            "nodeType": "InheritanceSpecifier",
            "src": "847:9:30"
          },
          {
            "baseName": {
              "id": 5519,
              "name": "IERC165",
              "nameLocations": [
                "858:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6719,
              "src": "858:7:30"
            },
            "id": 5520,
            "nodeType": "InheritanceSpecifier",
            "src": "858:7:30"
          },
          {
            "baseName": {
              "id": 5521,
              "name": "ITransferLocks",
              "nameLocations": [
                "867:14:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3548,
              "src": "867:14:30"
            },
            "id": 5522,
            "nodeType": "InheritanceSpecifier",
            "src": "867:14:30"
          }
        ],
        "canonicalName": "TransferLocks",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5516,
          "nodeType": "StructuredDocumentation",
          "src": "334:486:30",
          "text": " @title TransferLocks\n @author Origami\n @notice this library enables time-locked transfers of ERC20 tokens.\n Transferlocks are the inverse of a vesting schedule. They allow the holder to\n vote with their weight but not to transfer them before a certain date.\n @dev TransferLocks are resilient to timestamp manipulation by using\n block.timestamp, locks will typically be measured in months, not seconds.\n @custom:security-contact contract-security@joinorigami.com"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5906,
          3548,
          6719,
          4266,
          8265,
          7055,
          8935,
          8947,
          7128,
          7424,
          8178,
          8036,
          8290,
          8114,
          8662,
          7297
        ],
        "name": "TransferLocks",
        "nameLocation": "830:13:30",
        "scope": 5907,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 30
}