{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "BurnEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFERRER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supplyCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferrable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6120e980620000ed6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80634d12d4b611610125578063a217fddf116100ad578063d53913931161007c578063d53913931461042e578063d547741f14610455578063dd62ed3e14610468578063e63ab1e91461047b578063f1b50c1d1461049057600080fd5b8063a217fddf146103f8578063a457c2d714610400578063a9059cbb14610413578063b187984f1461042657600080fd5b806379cc6790116100f457806379cc6790146103b65780638456cb59146103c957806391d14854146103d157806395d89b41146103e4578063a07c7ce4146103ec57600080fd5b80634d12d4b6146103705780635c975abb1461038357806363ac5d971461038e57806370a08231146103a357600080fd5b80632f2ff15d116101a8578063395093511161017757806339509351146103275780633b37d1d61461033a5780633f4ba83a1461034257806340c10f191461034a57806342966c681461035d57600080fd5b80632f2ff15d146102e9578063313ce567146102fc578063355274ea1461030b57806336568abe1461031457600080fd5b806318160ddd116101ef57806318160ddd1461028257806323b872dd146102945780632403c08e146102a7578063248a9ca3146102b1578063282c51f3146102d457600080fd5b806301ffc9a714610221578063047a7ef11461024957806306fdde031461025a578063095ea7b31461026f575b600080fd5b61023461022f366004611aae565b610498565b60405190151581526020015b60405180910390f35b61016054610100900460ff16610234565b6102626104a9565b6040516102409190611afc565b61023461027d366004611b4b565b6104b8565b6035545b604051908152602001610240565b6102346102a2366004611b75565b6104d0565b6102af610535565b005b6102866102bf366004611bb1565b600090815260fb602052604090206001015490565b61028660008051602061205483398151915281565b6102af6102f7366004611bca565b6105dd565b60405160128152602001610240565b61012d54610286565b6102af610322366004611bca565b610607565b610234610335366004611b4b565b610685565b6102af6106a7565b6102af61071b565b6102af610358366004611b4b565b61073e565b6102af61036b366004611bb1565b610772565b6102af61037e366004611c99565b6107bd565b60975460ff16610234565b61028660008051602061207483398151915281565b6102866103b1366004611d15565b610ada565b6102af6103c4366004611b4b565b610af8565b6102af610b44565b6102346103df366004611bca565b610b64565b610262610b8f565b6101605460ff16610234565b610286600081565b61023461040e366004611b4b565b610c21565b610234610421366004611b4b565b610ca7565b6102af610d01565b6102867f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102af610463366004611bca565b610dad565b610286610476366004611d30565b610dd2565b61028660008051602061209483398151915281565b6102af610dfd565b60006104a382610e84565b92915050565b60606104b3610eb9565b905090565b6000336104c6818585610ec8565b5060019392505050565b60006104ea60008051602061207483398151915233610b64565b806104fd575061016054610100900460ff165b6105225760405162461bcd60e51b815260040161051990611d5a565b60405180910390fd5b61052d848484610fec565b949350505050565b600061054081611005565b61055860008051602061205483398151915233610b64565b8061056657506101605460ff165b6105825760405162461bcd60e51b815260040161051990611d9f565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b600082815260fb60205260409020600101546105f881611005565b610602838361100f565b505050565b6001600160a01b03811633146106775760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610519565b6106818282611095565b5050565b6000336104c68185856106988383610dd2565b6106a29190611dec565b610ec8565b60006106b281611005565b6101605460ff16156107065760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c6564000000006044820152606401610519565b610160805460ff1916600117905561058f3390565b60008051602061209483398151915261073381611005565b61073b6110fc565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661076881611005565b610602838361114e565b61078a60008051602061205483398151915233610b64565b8061079857506101605460ff165b6107b45760405162461bcd60e51b815260040161051990611d9f565b61073b81611158565b600054610100900460ff16158080156107dd5750600054600160ff909116105b806107f75750303b1580156107f7575060005460ff166001145b61085a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610519565b6000805460ff19166001179055801561087d576000805461ff0019166101001790555b6001600160a01b0385166108d35760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f000000006044820152606401610519565b60408051602080820152600091810182905260600160405160208183030381529060405280519060200120905080856040516020016109129190611afc565b60405160208183030381529060405280519060200120036109835760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b6064820152608401610519565b80846040516020016109959190611afc565b6040516020818303038152906040528051906020012003610a085760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b6064820152608401610519565b610a10611162565b610a18611162565b610a218361118b565b610a2b85856111bb565b610a336111ec565b610a3e60008761100f565b610a687f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761100f565b610a806000805160206120948339815191528761100f565b50610160805461ffff191690558015610ad3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0381166000908152603360205260408120546104a3565b610b1060008051602061205483398151915233610b64565b80610b1e57506101605460ff165b610b3a5760405162461bcd60e51b815260040161051990611d9f565b610681828261121b565b600080516020612094833981519152610b5c81611005565b61073b611230565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060378054610b9e90611dff565b80601f0160208091040260200160405190810160405280929190818152602001828054610bca90611dff565b8015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b5050505050905090565b60003381610c2f8286610dd2565b905083811015610c8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610519565b610c9c8286868403610ec8565b506001949350505050565b6000610cc160008051602061207483398151915233610b64565b80610cd4575061016054610100900460ff165b610cf05760405162461bcd60e51b815260040161051990611d5a565b610cfa838361126d565b9392505050565b6000610d0c81611005565b610d2460008051602061207483398151915233610b64565b80610d37575061016054610100900460ff165b610d535760405162461bcd60e51b815260040161051990611d5a565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff166040516105d2911515815260200190565b600082815260fb6020526040902060010154610dc881611005565b6106028383611095565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6000610e0881611005565b61016054610100900460ff1615610e6d5760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b6064820152608401610519565b610160805461ff001916610100179055610d613390565b60006001600160e01b03198216637965db0b60e01b14806104a357506301ffc9a760e01b6001600160e01b03198316146104a3565b606060368054610b9e90611dff565b6001600160a01b038316610f2a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610519565b6001600160a01b038216610f8b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610519565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600033610ffa85828561127b565b610c9c8585856112f5565b61073b81336114ab565b6110198282610b64565b61068157600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110513390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61109f8282610b64565b1561068157600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611104611504565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610681828261154d565b61073b33826115bd565b600054610100900460ff166111895760405162461bcd60e51b815260040161051990611e39565b565b600054610100900460ff166111b25760405162461bcd60e51b815260040161051990611e39565b61073b816116fd565b600054610100900460ff166111e25760405162461bcd60e51b815260040161051990611e39565b6106818282611772565b600054610100900460ff166112135760405162461bcd60e51b815260040161051990611e39565b6111896117b2565b61122682338361127b565b61068182826115bd565b6112386117e5565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111313390565b6000336104c68185856112f5565b60006112878484610dd2565b905060001981146112ef57818110156112e25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610519565b6112ef8484848403610ec8565b50505050565b6001600160a01b0383166113595760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610519565b6001600160a01b0382166113bb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610519565b6113c683838361182b565b6001600160a01b0383166000908152603360205260409020548181101561143e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610519565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061149e9086815260200190565b60405180910390a36112ef565b6114b58282610b64565b610681576114c281611833565b6114cd836020611845565b6040516020016114de929190611e84565b60408051601f198184030181529082905262461bcd60e51b825261051991600401611afc565b60975460ff166111895760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610519565b61012d548161155b60355490565b6115659190611dec565b11156115b35760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610519565b61068182826119e1565b6001600160a01b03821661161d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610519565b6116298260008361182b565b6001600160a01b0382166000908152603360205260409020548181101561169d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610519565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166117245760405162461bcd60e51b815260040161051990611e39565b6000811161176c5760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610519565b61012d55565b600054610100900460ff166117995760405162461bcd60e51b815260040161051990611e39565b60366117a58382611f47565b5060376106028282611f47565b600054610100900460ff166117d95760405162461bcd60e51b815260040161051990611e39565b6097805460ff19169055565b60975460ff16156111895760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610519565b6106026117e5565b60606104a36001600160a01b03831660145b60606000611854836002612007565b61185f906002611dec565b67ffffffffffffffff81111561187757611877611bf6565b6040519080825280601f01601f1916602001820160405280156118a1576020820181803683370190505b509050600360fc1b816000815181106118bc576118bc612026565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118eb576118eb612026565b60200101906001600160f81b031916908160001a905350600061190f846002612007565b61191a906001611dec565b90505b6001811115611992576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061194e5761194e612026565b1a60f81b82828151811061196457611964612026565b60200101906001600160f81b031916908160001a90535060049490941c9361198b8161203c565b905061191d565b508315610cfa5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610519565b6001600160a01b038216611a375760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610519565b611a436000838361182b565b8060356000828254611a559190611dec565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208284031215611ac057600080fd5b81356001600160e01b031981168114610cfa57600080fd5b60005b83811015611af3578181015183820152602001611adb565b50506000910152565b6020815260008251806020840152611b1b816040850160208701611ad8565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611b4657600080fd5b919050565b60008060408385031215611b5e57600080fd5b611b6783611b2f565b946020939093013593505050565b600080600060608486031215611b8a57600080fd5b611b9384611b2f565b9250611ba160208501611b2f565b9150604084013590509250925092565b600060208284031215611bc357600080fd5b5035919050565b60008060408385031215611bdd57600080fd5b82359150611bed60208401611b2f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c1d57600080fd5b813567ffffffffffffffff80821115611c3857611c38611bf6565b604051601f8301601f19908116603f01168101908282118183101715611c6057611c60611bf6565b81604052838152866020858801011115611c7957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611caf57600080fd5b611cb885611b2f565b9350602085013567ffffffffffffffff80821115611cd557600080fd5b611ce188838901611c0c565b94506040870135915080821115611cf757600080fd5b50611d0487828801611c0c565b949793965093946060013593505050565b600060208284031215611d2757600080fd5b610cfa82611b2f565b60008060408385031215611d4357600080fd5b611d4c83611b2f565b9150611bed60208401611b2f565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156104a3576104a3611dd6565b600181811c90821680611e1357607f821691505b602082108103611e3357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611ebc816017850160208801611ad8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611eed816028840160208801611ad8565b01602801949350505050565b601f82111561060257600081815260208120601f850160051c81016020861015611f205750805b601f850160051c820191505b81811015611f3f57828155600101611f2c565b505050505050565b815167ffffffffffffffff811115611f6157611f61611bf6565b611f7581611f6f8454611dff565b84611ef9565b602080601f831160018114611faa5760008415611f925750858301515b600019600386901b1c1916600185901b178555611f3f565b600085815260208120601f198616915b82811015611fd957888601518255948401946001909101908401611fba565b5085821015611ff75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081600019048311821515161561202157612021611dd6565b500290565b634e487b7160e01b600052603260045260246000fd5b60008161204b5761204b611dd6565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa264697066735822122055dbf53e9ba8095b004d7e912e61f012eaab4df108ae5003fb68ba1a7d479bc164736f6c63430008100033",
    "sourceMap": "774:10395:26:-:0;;;2637:53;;;;;;;;;-1:-1:-1;2661:22:26;:20;:22::i;:::-;774:10395;;5939:280:36;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:36;;216:2:73;5998:66:36;;;198:21:73;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:73;;;338:37;392:19;;5998:66:36;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:36;6140:15;6125:30;;;;;;6174:28;;564:36:73;;;6174:28:36;;552:2:73;537:18;6174:28:36;;;;;;;6074:139;5939:280::o;422:184:73:-;774:10395:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c80634d12d4b611610125578063a217fddf116100ad578063d53913931161007c578063d53913931461042e578063d547741f14610455578063dd62ed3e14610468578063e63ab1e91461047b578063f1b50c1d1461049057600080fd5b8063a217fddf146103f8578063a457c2d714610400578063a9059cbb14610413578063b187984f1461042657600080fd5b806379cc6790116100f457806379cc6790146103b65780638456cb59146103c957806391d14854146103d157806395d89b41146103e4578063a07c7ce4146103ec57600080fd5b80634d12d4b6146103705780635c975abb1461038357806363ac5d971461038e57806370a08231146103a357600080fd5b80632f2ff15d116101a8578063395093511161017757806339509351146103275780633b37d1d61461033a5780633f4ba83a1461034257806340c10f191461034a57806342966c681461035d57600080fd5b80632f2ff15d146102e9578063313ce567146102fc578063355274ea1461030b57806336568abe1461031457600080fd5b806318160ddd116101ef57806318160ddd1461028257806323b872dd146102945780632403c08e146102a7578063248a9ca3146102b1578063282c51f3146102d457600080fd5b806301ffc9a714610221578063047a7ef11461024957806306fdde031461025a578063095ea7b31461026f575b600080fd5b61023461022f366004611aae565b610498565b60405190151581526020015b60405180910390f35b61016054610100900460ff16610234565b6102626104a9565b6040516102409190611afc565b61023461027d366004611b4b565b6104b8565b6035545b604051908152602001610240565b6102346102a2366004611b75565b6104d0565b6102af610535565b005b6102866102bf366004611bb1565b600090815260fb602052604090206001015490565b61028660008051602061205483398151915281565b6102af6102f7366004611bca565b6105dd565b60405160128152602001610240565b61012d54610286565b6102af610322366004611bca565b610607565b610234610335366004611b4b565b610685565b6102af6106a7565b6102af61071b565b6102af610358366004611b4b565b61073e565b6102af61036b366004611bb1565b610772565b6102af61037e366004611c99565b6107bd565b60975460ff16610234565b61028660008051602061207483398151915281565b6102866103b1366004611d15565b610ada565b6102af6103c4366004611b4b565b610af8565b6102af610b44565b6102346103df366004611bca565b610b64565b610262610b8f565b6101605460ff16610234565b610286600081565b61023461040e366004611b4b565b610c21565b610234610421366004611b4b565b610ca7565b6102af610d01565b6102867f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102af610463366004611bca565b610dad565b610286610476366004611d30565b610dd2565b61028660008051602061209483398151915281565b6102af610dfd565b60006104a382610e84565b92915050565b60606104b3610eb9565b905090565b6000336104c6818585610ec8565b5060019392505050565b60006104ea60008051602061207483398151915233610b64565b806104fd575061016054610100900460ff165b6105225760405162461bcd60e51b815260040161051990611d5a565b60405180910390fd5b61052d848484610fec565b949350505050565b600061054081611005565b61055860008051602061205483398151915233610b64565b8061056657506101605460ff165b6105825760405162461bcd60e51b815260040161051990611d9f565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b600082815260fb60205260409020600101546105f881611005565b610602838361100f565b505050565b6001600160a01b03811633146106775760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610519565b6106818282611095565b5050565b6000336104c68185856106988383610dd2565b6106a29190611dec565b610ec8565b60006106b281611005565b6101605460ff16156107065760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c6564000000006044820152606401610519565b610160805460ff1916600117905561058f3390565b60008051602061209483398151915261073381611005565b61073b6110fc565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661076881611005565b610602838361114e565b61078a60008051602061205483398151915233610b64565b8061079857506101605460ff165b6107b45760405162461bcd60e51b815260040161051990611d9f565b61073b81611158565b600054610100900460ff16158080156107dd5750600054600160ff909116105b806107f75750303b1580156107f7575060005460ff166001145b61085a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610519565b6000805460ff19166001179055801561087d576000805461ff0019166101001790555b6001600160a01b0385166108d35760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f000000006044820152606401610519565b60408051602080820152600091810182905260600160405160208183030381529060405280519060200120905080856040516020016109129190611afc565b60405160208183030381529060405280519060200120036109835760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b6064820152608401610519565b80846040516020016109959190611afc565b6040516020818303038152906040528051906020012003610a085760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b6064820152608401610519565b610a10611162565b610a18611162565b610a218361118b565b610a2b85856111bb565b610a336111ec565b610a3e60008761100f565b610a687f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761100f565b610a806000805160206120948339815191528761100f565b50610160805461ffff191690558015610ad3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0381166000908152603360205260408120546104a3565b610b1060008051602061205483398151915233610b64565b80610b1e57506101605460ff165b610b3a5760405162461bcd60e51b815260040161051990611d9f565b610681828261121b565b600080516020612094833981519152610b5c81611005565b61073b611230565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060378054610b9e90611dff565b80601f0160208091040260200160405190810160405280929190818152602001828054610bca90611dff565b8015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b5050505050905090565b60003381610c2f8286610dd2565b905083811015610c8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610519565b610c9c8286868403610ec8565b506001949350505050565b6000610cc160008051602061207483398151915233610b64565b80610cd4575061016054610100900460ff165b610cf05760405162461bcd60e51b815260040161051990611d5a565b610cfa838361126d565b9392505050565b6000610d0c81611005565b610d2460008051602061207483398151915233610b64565b80610d37575061016054610100900460ff165b610d535760405162461bcd60e51b815260040161051990611d5a565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff166040516105d2911515815260200190565b600082815260fb6020526040902060010154610dc881611005565b6106028383611095565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6000610e0881611005565b61016054610100900460ff1615610e6d5760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b6064820152608401610519565b610160805461ff001916610100179055610d613390565b60006001600160e01b03198216637965db0b60e01b14806104a357506301ffc9a760e01b6001600160e01b03198316146104a3565b606060368054610b9e90611dff565b6001600160a01b038316610f2a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610519565b6001600160a01b038216610f8b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610519565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600033610ffa85828561127b565b610c9c8585856112f5565b61073b81336114ab565b6110198282610b64565b61068157600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110513390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61109f8282610b64565b1561068157600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611104611504565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610681828261154d565b61073b33826115bd565b600054610100900460ff166111895760405162461bcd60e51b815260040161051990611e39565b565b600054610100900460ff166111b25760405162461bcd60e51b815260040161051990611e39565b61073b816116fd565b600054610100900460ff166111e25760405162461bcd60e51b815260040161051990611e39565b6106818282611772565b600054610100900460ff166112135760405162461bcd60e51b815260040161051990611e39565b6111896117b2565b61122682338361127b565b61068182826115bd565b6112386117e5565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111313390565b6000336104c68185856112f5565b60006112878484610dd2565b905060001981146112ef57818110156112e25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610519565b6112ef8484848403610ec8565b50505050565b6001600160a01b0383166113595760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610519565b6001600160a01b0382166113bb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610519565b6113c683838361182b565b6001600160a01b0383166000908152603360205260409020548181101561143e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610519565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061149e9086815260200190565b60405180910390a36112ef565b6114b58282610b64565b610681576114c281611833565b6114cd836020611845565b6040516020016114de929190611e84565b60408051601f198184030181529082905262461bcd60e51b825261051991600401611afc565b60975460ff166111895760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610519565b61012d548161155b60355490565b6115659190611dec565b11156115b35760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610519565b61068182826119e1565b6001600160a01b03821661161d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610519565b6116298260008361182b565b6001600160a01b0382166000908152603360205260409020548181101561169d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610519565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166117245760405162461bcd60e51b815260040161051990611e39565b6000811161176c5760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610519565b61012d55565b600054610100900460ff166117995760405162461bcd60e51b815260040161051990611e39565b60366117a58382611f47565b5060376106028282611f47565b600054610100900460ff166117d95760405162461bcd60e51b815260040161051990611e39565b6097805460ff19169055565b60975460ff16156111895760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610519565b6106026117e5565b60606104a36001600160a01b03831660145b60606000611854836002612007565b61185f906002611dec565b67ffffffffffffffff81111561187757611877611bf6565b6040519080825280601f01601f1916602001820160405280156118a1576020820181803683370190505b509050600360fc1b816000815181106118bc576118bc612026565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118eb576118eb612026565b60200101906001600160f81b031916908160001a905350600061190f846002612007565b61191a906001611dec565b90505b6001811115611992576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061194e5761194e612026565b1a60f81b82828151811061196457611964612026565b60200101906001600160f81b031916908160001a90535060049490941c9361198b8161203c565b905061191d565b508315610cfa5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610519565b6001600160a01b038216611a375760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610519565b611a436000838361182b565b8060356000828254611a559190611dec565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208284031215611ac057600080fd5b81356001600160e01b031981168114610cfa57600080fd5b60005b83811015611af3578181015183820152602001611adb565b50506000910152565b6020815260008251806020840152611b1b816040850160208701611ad8565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611b4657600080fd5b919050565b60008060408385031215611b5e57600080fd5b611b6783611b2f565b946020939093013593505050565b600080600060608486031215611b8a57600080fd5b611b9384611b2f565b9250611ba160208501611b2f565b9150604084013590509250925092565b600060208284031215611bc357600080fd5b5035919050565b60008060408385031215611bdd57600080fd5b82359150611bed60208401611b2f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c1d57600080fd5b813567ffffffffffffffff80821115611c3857611c38611bf6565b604051601f8301601f19908116603f01168101908282118183101715611c6057611c60611bf6565b81604052838152866020858801011115611c7957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611caf57600080fd5b611cb885611b2f565b9350602085013567ffffffffffffffff80821115611cd557600080fd5b611ce188838901611c0c565b94506040870135915080821115611cf757600080fd5b50611d0487828801611c0c565b949793965093946060013593505050565b600060208284031215611d2757600080fd5b610cfa82611b2f565b60008060408385031215611d4357600080fd5b611d4c83611b2f565b9150611bed60208401611b2f565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156104a3576104a3611dd6565b600181811c90821680611e1357607f821691505b602082108103611e3357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611ebc816017850160208801611ad8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611eed816028840160208801611ad8565b01602801949350505050565b601f82111561060257600081815260208120601f850160051c81016020861015611f205750805b601f850160051c820191505b81811015611f3f57828155600101611f2c565b505050505050565b815167ffffffffffffffff811115611f6157611f61611bf6565b611f7581611f6f8454611dff565b84611ef9565b602080601f831160018114611faa5760008415611f925750858301515b600019600386901b1c1916600185901b178555611f3f565b600085815260208120601f198616915b82811015611fd957888601518255948401946001909101908401611fba565b5085821015611ff75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081600019048311821515161561202157612021611dd6565b500290565b634e487b7160e01b600052603260045260246000fd5b60008161204b5761204b611dd6565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa264697066735822122055dbf53e9ba8095b004d7e912e61f012eaab4df108ae5003fb68ba1a7d479bc164736f6c63430008100033",
    "sourceMap": "774:10395:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9270:151;;;;;;:::i;:::-;;:::i;:::-;;;470:14:73;;463:22;445:41;;433:2;418:18;9270:151:26;;;;;;;;5727:92;5796:16;;;;;;;5727:92;;4232:105;;;:::i;:::-;;;;;;;:::i;4781:197:38:-;;;;;;:::i;:::-;;:::i;3592:106::-;3679:12;;3592:106;;;1736:25:73;;;1724:2;1709:18;3592:106:38;1590:177:73;8121:225:26;;;;;;:::i;:::-;;:::i;5400:163::-;;;:::i;:::-;;4834:129:34;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;1449:62:26;;-1:-1:-1;;;;;;;;;;;1449:62:26;;5259:145:34;;;;;;:::i;:::-;;:::i;3441:91:38:-;;;3523:2;2873:36:73;;2861:2;2846:18;3441:91:38;2731:184:73;929:81:41;999:4;;929:81;;6368:214:34;;;;;;:::i;:::-;;:::i;6191:234:38:-;;;;;;:::i;:::-;;:::i;4989:164:26:-;;;:::i;7148:75::-;;;:::i;7828:113::-;;;;;;:::i;:::-;;:::i;8730:94::-;;;;;;:::i;:::-;;:::i;3251:938::-;;;;;;:::i;:::-;;:::i;1858:84:37:-;1928:7;;;;1858:84;;1783:72:26;;-1:-1:-1;;;;;;;;;;;1783:72:26;;4380:127;;;;;;:::i;:::-;;:::i;8875:128::-;;;;;;:::i;:::-;;:::i;6931:71::-;;;:::i;3329:145:34:-;;;;;;:::i;:::-;;:::i;2706:102:38:-;;;:::i;4661:83:26:-;4725:12;;;;4661:83;;2450:49:34;;2495:4;2450:49;;6912:427:38;;;;;;:::i;:::-;;:::i;8526:153:26:-;;;;;;:::i;:::-;;:::i;6502:184::-;;;:::i;1299:62::-;;1337:24;1299:62;;5684:147:34;;;;;;:::i;:::-;;:::i;4324:149:38:-;;;;;;:::i;:::-;;:::i;1089:62:26:-;;-1:-1:-1;;;;;;;;;;;1089:62:26;;6067:185;;;:::i;9270:151::-;9355:4;9378:36;9402:11;9378:23;:36::i;:::-;9371:43;9270:151;-1:-1:-1;;9270:151:26:o;4232:105::-;4286:13;4318:12;:10;:12::i;:::-;4311:19;;4232:105;:::o;4781:197:38:-;4864:4;929:10:44;4918:32:38;929:10:44;4934:7:38;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:38;;4781:197;-1:-1:-1;;;4781:197:38:o;8121:225:26:-;8276:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;;;;;;;;;8303:36:::1;8322:4;8328:2;8332:6;8303:18;:36::i;:::-;8296:43:::0;8121:225;-1:-1:-1;;;;8121:225:26:o;5400:163::-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;10501:34:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-:1;:48;;;-1:-1:-1::0;4725:12:26;;;;10539:10:::1;10493:90;;;;-1:-1:-1::0;;;10493:90:26::1;;;;;;;:::i;:::-;5482:12:::2;:20:::0;;-1:-1:-1;;5482:20:26::2;::::0;;929:10:44;5529:12:26::2;5543;::::0;5517:39:::2;::::0;5543:12:::2;::::0;;::::2;470:14:73::0;463:22;445:41;;-1:-1:-1;;;;;5517:39:26;;;::::2;::::0;::::2;::::0;433:2:73;418:18;5517:39:26::2;;;;;;;;5400:163:::0;:::o;5259:145:34:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:34;;929:10:44;6463:23:34;6455:83;;;;-1:-1:-1;;;6455:83:34;;6074:2:73;6455:83:34;;;6056:21:73;6113:2;6093:18;;;6086:30;6152:34;6132:18;;;6125:62;-1:-1:-1;;;6203:18:73;;;6196:45;6258:19;;6455:83:34;5872:411:73;6455:83:34;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;6191:234:38:-;6279:4;929:10:44;6333:64:38;929:10:44;6349:7:38;6386:10;6358:25;929:10:44;6349:7:38;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;4989:164:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;4725:12:26;;;;10238:11:::1;10230:52;;;::::0;-1:-1:-1;;;10230:52:26;;6752:2:73;10230:52:26::1;::::0;::::1;6734:21:73::0;6791:2;6771:18;;;6764:30;6830;6810:18;;;6803:58;6878:18;;10230:52:26::1;6550:352:73::0;10230:52:26::1;5073:12:::2;:19:::0;;-1:-1:-1;;5073:19:26::2;5088:4;5073:19;::::0;;5119:12:::2;929:10:44::0;;850:96;7148:75:26;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;7206:10:26::1;:8;:10::i;:::-;7148:75:::0;:::o;7828:113::-;1337:24;2928:16:34;2939:4;2928:10;:16::i;:::-;7917:17:26::1;7923:2;7927:6;7917:5;:17::i;8730:94::-:0;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8799:18:::1;8810:6;8799:10;:18::i;3251:938::-:0;3279:19:36;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:36;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:36;1713:19:43;:23;;;3387:66:36;;-1:-1:-1;3436:12:36;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:36;;7109:2:73;3325:201:36;;;7091:21:73;7148:2;7128:18;;;7121:30;7187:34;7167:18;;;7160:62;-1:-1:-1;;;7238:18:73;;;7231:44;7292:19;;3325:201:36;6907:410:73;3325:201:36;3536:12;:16;;-1:-1:-1;;3536:16:36;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:36;;;;;3562:65;-1:-1:-1;;;;;3414:19:26;::::1;3406:60;;;::::0;-1:-1:-1;;;3406:60:26;;7524:2:73;3406:60:26::1;::::0;::::1;7506:21:73::0;7563:2;7543:18;;;7536:30;7602;7582:18;;;7575:58;7650:18;;3406:60:26::1;7322:352:73::0;3406:60:26::1;3503:14;::::0;;::::1;::::0;;::::1;7863:21:73::0;3477:13:26::1;7900:18:73::0;;;7893:29;;;7939:18;;3503:14:26::1;;;;;;;;;;;;3493:25;;;;;;3477:41;;3572:5;3557:9;3546:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;3536:32;;;;;;:41:::0;3528:91:::1;;;::::0;-1:-1:-1;;;3528:91:26;;8170:2:73;3528:91:26::1;::::0;::::1;8152:21:73::0;8209:2;8189:18;;;8182:30;8248:34;8228:18;;;8221:62;-1:-1:-1;;;8299:18:73;;;8292:35;8344:19;;3528:91:26::1;7968:401:73::0;3528:91:26::1;3675:5;3658:11;3647:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3637:34;;;;;;:43:::0;3629:95:::1;;;::::0;-1:-1:-1;;;3629:95:26;;8576:2:73;3629:95:26::1;::::0;::::1;8558:21:73::0;8615:2;8595:18;;;8588:30;8654:34;8634:18;;;8627:62;-1:-1:-1;;;8705:18:73;;;8698:37;8752:19;;3629:95:26::1;8374:403:73::0;3629:95:26::1;3735:22;:20;:22::i;:::-;3767;:20;:22::i;:::-;3799:29;3818:9;3799:18;:29::i;:::-;3838:36;3851:9;3862:11;3838:12;:36::i;:::-;3884:17;:15;:17::i;:::-;3948:37;2495:4:34;3979:5:26::0;3948:10:::1;:37::i;:::-;3995:30;1337:24;4019:5;3995:10;:30::i;:::-;4035;-1:-1:-1::0;;;;;;;;;;;4059:5:26::1;4035:10;:30::i;:::-;-1:-1:-1::0;4128:12:26::1;:20:::0;;-1:-1:-1;;4158:24:26;;;3647:99:36;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:36;;;3721:14;;-1:-1:-1;2873:36:73;;3721:14:36;;2861:2:73;2846:18;3721:14:36;;;;;;;3647:99;3269:483;3251:938:26;;;;:::o;4380:127::-;-1:-1:-1;;;;;3856:18:38;;4452:7:26;3856:18:38;;;:9;:18;;;;;;4478:22:26;3756:125:38;8875:128:26;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8965:31:::1;8980:7;8989:6;8965:14;:31::i;6931:71::-:0;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;6987:8:26::1;:6;:8::i;3329:145:34:-:0;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:34;;;;;;;;;;;;;;;3329:145::o;2706:102:38:-;2762:13;2794:7;2787:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:102;:::o;6912:427::-;7005:4;929:10:44;7005:4:38;7086:25;929:10:44;7103:7:38;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:38;;9568:2:73;7121:85:38;;;9550:21:73;9607:2;9587:18;;;9580:30;9646:34;9626:18;;;9619:62;-1:-1:-1;;;9697:18:73;;;9690:35;9742:19;;7121:85:38;9366:401:73;7121:85:38;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:38;;6912:427;-1:-1:-1;;;;6912:427:38:o;8526:153:26:-;8623:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;8646:26:::1;8661:2;8665:6;8646:14;:26::i;:::-;8639:33:::0;8526:153;-1:-1:-1;;;8526:153:26:o;6502:184::-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;11049:39:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-:1;:58;;;-1:-1:-1::0;5796:16:26;;;;;;;11092:15:::1;11041:108;;;;-1:-1:-1::0;;;11041:108:26::1;;;;;;;:::i;:::-;6593:16:::2;:24:::0;;-1:-1:-1;;6593:24:26::2;::::0;;929:10:44;6648:12:26::2;-1:-1:-1::0;;;;;6632:47:26::2;;6662:16;;;;;;;;;;;6632:47;;;;470:14:73::0;463:22;445:41;;433:2;418:18;;305:187;5684:147:34;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;4324:149:38:-:0;-1:-1:-1;;;;;4439:18:38;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;6067:185:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;5796::26;;;;;;;10760::::1;10752:65;;;::::0;-1:-1:-1;;;10752:65:26;;9974:2:73;10752:65:26::1;::::0;::::1;9956:21:73::0;10013:2;9993:18;;;9986:30;10052:34;10032:18;;;10025:62;-1:-1:-1;;;10103:18:73;;;10096:34;10147:19;;10752:65:26::1;9772:400:73::0;10752:65:26::1;6160:16:::2;:23:::0;;-1:-1:-1;;6160:23:26::2;;;::::0;;6214:12:::2;929:10:44::0;;850:96;3029:213:34;3114:4;-1:-1:-1;;;;;;3137:58:34;;-1:-1:-1;;;3137:58:34;;:98;;-1:-1:-1;;;;;;;;;;1168:51:46;;;3199:36:34;1060:166:46;2495:98:38;2549:13;2581:5;2574:12;;;;;:::i;10794:340::-;-1:-1:-1;;;;;10895:19:38;;10887:68;;;;-1:-1:-1;;;10887:68:38;;10379:2:73;10887:68:38;;;10361:21:73;10418:2;10398:18;;;10391:30;10457:34;10437:18;;;10430:62;-1:-1:-1;;;10508:18:73;;;10501:34;10552:19;;10887:68:38;10177:400:73;10887:68:38;-1:-1:-1;;;;;10973:21:38;;10965:68;;;;-1:-1:-1;;;10965:68:38;;10784:2:73;10965:68:38;;;10766:21:73;10823:2;10803:18;;;10796:30;10862:34;10842:18;;;10835:62;-1:-1:-1;;;10913:18:73;;;10906:32;10955:19;;10965:68:38;10582:398:73;10965:68:38;-1:-1:-1;;;;;11044:18:38;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;1736:25:73;;;11095:32:38;;1709:18:73;11095:32:38;;;;;;;10794:340;;;:::o;5540:256::-;5637:4;929:10:44;5693:38:38;5709:4;929:10:44;5724:6:38;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;3768:103:34:-;3834:30;3845:4;929:10:44;3834::34;:30::i;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:34;;;;;;;;;:36;;-1:-1:-1;;8038:36:34;8070:4;8038:36;;;8120:12;929:10:44;;850:96;8120:12:34;-1:-1:-1;;;;;8093:40:34;8111:7;-1:-1:-1;;;;;8093:40:34;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:34;;;;;;;;;;:37;;-1:-1:-1;;8442:37:34;;;8498:40;929:10:44;;8442:12:34;;8498:40;;8474:5;8498:40;8321:234;;:::o;2676:117:37:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:37::1;::::0;;2764:22:::1;929:10:44::0;2773:12:37::1;2764:22;::::0;-1:-1:-1;;;;;11149:32:73;;;11131:51;;11119:2;11104:18;2764:22:37::1;;;;;;;2676:117::o:0;9900:151:26:-;10021:23;10033:2;10037:6;10021:11;:23::i;848:89:40:-;903:27;929:10:44;923:6:40;903:5;:27::i;2151:65:34:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2151:65:34:o;567:119:41:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;645:34:41::1;674:4;645:28;:34::i;2118:147:38:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2220:38:38::1;2243:5;2250:7;2220:22;:38::i;1063:97:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1126:27:37::1;:25;:27::i;1243:161:40:-:0;1319:46;1335:7;929:10:44;1358:6:40;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2429:115:37:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:37::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:44::0;;850:96;4077:189:38;4156:4;929:10:44;4210:28:38;929:10:44;4227:2:38;4231:6;4210:9;:28::i;11415:411::-;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:38;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:38;;11807:2:73;11634:68:38;;;11789:21:73;11846:2;11826:18;;;11819:30;11885:31;11865:18;;;11858:59;11934:18;;11634:68:38;11605:353:73;11634:68:38;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:38;;7881:68;;;;-1:-1:-1;;;7881:68:38;;12165:2:73;7881:68:38;;;12147:21:73;12204:2;12184:18;;;12177:30;12243:34;12223:18;;;12216:62;-1:-1:-1;;;12294:18:73;;;12287:35;12339:19;;7881:68:38;11963:401:73;7881:68:38;-1:-1:-1;;;;;7967:16:38;;7959:64;;;;-1:-1:-1;;;7959:64:38;;12571:2:73;7959:64:38;;;12553:21:73;12610:2;12590:18;;;12583:30;12649:34;12629:18;;;12622:62;-1:-1:-1;;;12700:18:73;;;12693:33;12743:19;;7959:64:38;12369:399:73;7959:64:38;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;-1:-1:-1;;;;;8105:15:38;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:38;;12975:2:73;8130:72:38;;;12957:21:73;13014:2;12994:18;;;12987:30;13053:34;13033:18;;;13026:62;-1:-1:-1;;;13104:18:73;;;13097:36;13150:19;;8130:72:38;12773:402:73;8130:72:38;-1:-1:-1;;;;;8236:15:38;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;1736:25:73;;1724:2;1709:18;;1590:177;8500:26:38;;;;;;;;8537:37;5259:145:34;4152:501;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:34;;;;;;;;;;-1:-1:-1;;;4278:358:34;;;;;;;:::i;2188:106:37:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:37;;14199:2:73;2246:41:37;;;14181:21:73;14238:2;14218:18;;;14211:30;-1:-1:-1;;;14257:18:73;;;14250:50;14317:18;;2246:41:37;13997:344:73;1063:215:41;999:4;;1188:6;1155:30;3679:12:38;;;3592:106;1155:30:41;:39;;;;:::i;:::-;:48;;1147:86;;;;-1:-1:-1;;;1147:86:41;;14548:2:73;1147:86:41;;;14530:21:73;14587:2;14567:18;;;14560:30;14626:27;14606:18;;;14599:55;14671:18;;1147:86:41;14346:349:73;1147:86:41;1243:28;1255:7;1264:6;1243:11;:28::i;9712:659:38:-;-1:-1:-1;;;;;9795:21:38;;9787:67;;;;-1:-1:-1;;;9787:67:38;;14902:2:73;9787:67:38;;;14884:21:73;14941:2;14921:18;;;14914:30;14980:34;14960:18;;;14953:62;-1:-1:-1;;;15031:18:73;;;15024:31;15072:19;;9787:67:38;14700:397:73;9787:67:38;9865:49;9886:7;9903:1;9907:6;9865:20;:49::i;:::-;-1:-1:-1;;;;;9950:18:38;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:38;;15304:2:73;9978:71:38;;;15286:21:73;15343:2;15323:18;;;15316:30;15382:34;15362:18;;;15355:62;-1:-1:-1;;;15433:18:73;;;15426:32;15475:19;;9978:71:38;15102:398:73;9978:71:38;-1:-1:-1;;;;;10083:18:38;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;1736:25:73;;;10083:18:38;;;10268:37;;1709:18:73;10268:37:38;;;;;;;5259:145:34;;;:::o;692:158:41:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;795:1:41::1;788:4;:8;780:42;;;::::0;-1:-1:-1;;;780:42:41;;15707:2:73;780:42:41::1;::::0;::::1;15689:21:73::0;15746:2;15726:18;;;15719:30;-1:-1:-1;;;15765:18:73;;;15758:51;15826:18;;780:42:41::1;15505:345:73::0;780:42:41::1;832:4;:11:::0;692:158::o;2271:159:38:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2383:5:38::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:38::1;:17;2416:7:::0;2406;:17:::1;:::i;1166:95:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1239:7:37::1;:15:::0;;-1:-1:-1;;1239:15:37::1;::::0;;1166:95::o;2010:106::-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:37;;18261:2:73;2071:38:37;;;18243:21:73;18300:2;18280:18;;;18273:30;-1:-1:-1;;;18319:18:73;;;18312:46;18375:18;;2071:38:37;18059:340:73;9636:227:26;1482:19:37;:17;:19::i;2473:149:45:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:45;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:45;;1984:47;;-1:-1:-1;;;2041:6:45;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:45;;;;;;;;;-1:-1:-1;;;2066:6:45;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:45;;;;;;;;-1:-1:-1;2096:9:45;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:45;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:45;;;;;;;;-1:-1:-1;2207:1:45;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:45;;2228:55;;;;-1:-1:-1;;;2228:55:45;;19052:2:73;2228:55:45;;;19034:21:73;;;19071:18;;;19064:30;19130:34;19110:18;;;19103:62;19182:18;;2228:55:45;18850:356:73;8857:535:38;-1:-1:-1;;;;;8940:21:38;;8932:65;;;;-1:-1:-1;;;8932:65:38;;19413:2:73;8932:65:38;;;19395:21:73;19452:2;19432:18;;;19425:30;19491:33;19471:18;;;19464:61;19542:18;;8932:65:38;19211:355:73;8932:65:38;9008:49;9037:1;9041:7;9050:6;9008:20;:49::i;:::-;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:38;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;1736:25:73;;;9289:37:38;;1709:18:73;9289:37:38;;;;;;;6368:214:34;;:::o;14:286:73:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:73;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:73;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:73;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:73:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:73;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:73:o;1772:328::-;1849:6;1857;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;1772:328;;;;;:::o;2105:180::-;2164:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;-1:-1:-1;2256:23:73;;2105:180;-1:-1:-1;2105:180:73:o;2472:254::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2682:38;2716:2;2705:9;2701:18;2682:38;:::i;:::-;2672:48;;2472:254;;;;;:::o;3105:127::-;3166:10;3161:3;3157:20;3154:1;3147:31;3197:4;3194:1;3187:15;3221:4;3218:1;3211:15;3237:719;3280:5;3333:3;3326:4;3318:6;3314:17;3310:27;3300:55;;3351:1;3348;3341:12;3300:55;3387:6;3374:20;3413:18;3450:2;3446;3443:10;3440:36;;;3456:18;;:::i;:::-;3531:2;3525:9;3499:2;3585:13;;-1:-1:-1;;3581:22:73;;;3605:2;3577:31;3573:40;3561:53;;;3629:18;;;3649:22;;;3626:46;3623:72;;;3675:18;;:::i;:::-;3715:10;3711:2;3704:22;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3917:4;3912:2;3904:6;3900:15;3896:26;3889:37;3944:6;3935:15;;;;;;3237:719;;;;:::o;3961:686::-;4067:6;4075;4083;4091;4144:3;4132:9;4123:7;4119:23;4115:33;4112:53;;;4161:1;4158;4151:12;4112:53;4184:29;4203:9;4184:29;:::i;:::-;4174:39;;4264:2;4253:9;4249:18;4236:32;4287:18;4328:2;4320:6;4317:14;4314:34;;;4344:1;4341;4334:12;4314:34;4367:50;4409:7;4400:6;4389:9;4385:22;4367:50;:::i;:::-;4357:60;;4470:2;4459:9;4455:18;4442:32;4426:48;;4499:2;4489:8;4486:16;4483:36;;;4515:1;4512;4505:12;4483:36;;4538:52;4582:7;4571:8;4560:9;4556:24;4538:52;:::i;:::-;3961:686;;;;-1:-1:-1;4528:62:73;;4637:2;4622:18;4609:32;;-1:-1:-1;;;3961:686:73:o;4652:186::-;4711:6;4764:2;4752:9;4743:7;4739:23;4735:32;4732:52;;;4780:1;4777;4770:12;4732:52;4803:29;4822:9;4803:29;:::i;4843:260::-;4911:6;4919;4972:2;4960:9;4951:7;4947:23;4943:32;4940:52;;;4988:1;4985;4978:12;4940:52;5011:29;5030:9;5011:29;:::i;:::-;5001:39;;5059:38;5093:2;5082:9;5078:18;5059:38;:::i;5108:401::-;5310:2;5292:21;;;5349:2;5329:18;;;5322:30;5388:34;5383:2;5368:18;;5361:62;-1:-1:-1;;;5454:2:73;5439:18;;5432:35;5499:3;5484:19;;5108:401::o;5514:353::-;5716:2;5698:21;;;5755:2;5735:18;;;5728:30;5794:31;5789:2;5774:18;;5767:59;5858:2;5843:18;;5514:353::o;6288:127::-;6349:10;6344:3;6340:20;6337:1;6330:31;6380:4;6377:1;6370:15;6404:4;6401:1;6394:15;6420:125;6485:9;;;6506:10;;;6503:36;;;6519:18;;:::i;8981:380::-;9060:1;9056:12;;;;9103;;;9124:61;;9178:4;9170:6;9166:17;9156:27;;9124:61;9231:2;9223:6;9220:14;9200:18;9197:38;9194:161;;9277:10;9272:3;9268:20;9265:1;9258:31;9312:4;9309:1;9302:15;9340:4;9337:1;9330:15;9194:161;;8981:380;;;:::o;11193:407::-;11395:2;11377:21;;;11434:2;11414:18;;;11407:30;11473:34;11468:2;11453:18;;11446:62;-1:-1:-1;;;11539:2:73;11524:18;;11517:41;11590:3;11575:19;;11193:407::o;13180:812::-;13591:25;13586:3;13579:38;13561:3;13646:6;13640:13;13662:75;13730:6;13725:2;13720:3;13716:12;13709:4;13701:6;13697:17;13662:75;:::i;:::-;-1:-1:-1;;;13796:2:73;13756:16;;;13788:11;;;13781:40;13846:13;;13868:76;13846:13;13930:2;13922:11;;13915:4;13903:17;;13868:76;:::i;:::-;13964:17;13983:2;13960:26;;13180:812;-1:-1:-1;;;;13180:812:73:o;15981:545::-;16083:2;16078:3;16075:11;16072:448;;;16119:1;16144:5;16140:2;16133:17;16189:4;16185:2;16175:19;16259:2;16247:10;16243:19;16240:1;16236:27;16230:4;16226:38;16295:4;16283:10;16280:20;16277:47;;;-1:-1:-1;16318:4:73;16277:47;16373:2;16368:3;16364:12;16361:1;16357:20;16351:4;16347:31;16337:41;;16428:82;16446:2;16439:5;16436:13;16428:82;;;16491:17;;;16472:1;16461:13;16428:82;;;16432:3;;;15981:545;;;:::o;16702:1352::-;16828:3;16822:10;16855:18;16847:6;16844:30;16841:56;;;16877:18;;:::i;:::-;16906:97;16996:6;16956:38;16988:4;16982:11;16956:38;:::i;:::-;16950:4;16906:97;:::i;:::-;17058:4;;17122:2;17111:14;;17139:1;17134:663;;;;17841:1;17858:6;17855:89;;;-1:-1:-1;17910:19:73;;;17904:26;17855:89;-1:-1:-1;;16659:1:73;16655:11;;;16651:24;16647:29;16637:40;16683:1;16679:11;;;16634:57;17957:81;;17104:944;;17134:663;15928:1;15921:14;;;15965:4;15952:18;;-1:-1:-1;;17170:20:73;;;17288:236;17302:7;17299:1;17296:14;17288:236;;;17391:19;;;17385:26;17370:42;;17483:27;;;;17451:1;17439:14;;;;17318:19;;17288:236;;;17292:3;17552:6;17543:7;17540:19;17537:201;;;17613:19;;;17607:26;-1:-1:-1;;17696:1:73;17692:14;;;17708:3;17688:24;17684:37;17680:42;17665:58;17650:74;;17537:201;-1:-1:-1;;;;;17784:1:73;17768:14;;;17764:22;17751:36;;-1:-1:-1;16702:1352:73:o;18404:168::-;18444:7;18510:1;18506;18502:6;18498:14;18495:1;18492:21;18487:1;18480:9;18473:17;18469:45;18466:71;;;18517:18;;:::i;:::-;-1:-1:-1;18557:9:73;;18404:168::o;18577:127::-;18638:10;18633:3;18629:20;18626:1;18619:31;18669:4;18666:1;18659:15;18693:4;18690:1;18683:15;18709:136;18748:3;18776:5;18766:39;;18785:18;;:::i;:::-;-1:-1:-1;;;18821:18:73;;18709:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "TRANSFERRER_ROLE()": "63ac5d97",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "burnable()": "a07c7ce4",
    "cap()": "355274ea",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "disableBurn()": "2403c08e",
    "disableTransfer()": "b187984f",
    "enableBurn()": "3b37d1d6",
    "enableTransfer()": "f1b50c1d",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,uint256)": "4d12d4b6",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferrable()": "047a7ef1",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"BurnEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFERRER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferrable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origami Inc.\",\"custom:security-contact\":\"contract-security@joinorigami.com\",\"events\":{\"BurnEnabled(address,bool)\":{\"details\":\"monitoring: this is fired when the burnEnabled state is changed.\"},\"TransferEnabled(address,bool)\":{\"details\":\"monitoring: this is fired when the transferEnabled state is changed.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"burnable()\":{\"returns\":{\"_0\":\"true if tokens are burnable, false otherwise.\"}},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"disableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to disabled and by whom.\"},\"disableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to disabled and by whom.\"},\"enableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to enabled and by whom.\"},\"enableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to enabled and by whom.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,uint256)\":{\"params\":{\"admin\":\"the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.\",\"supplyCap\":\"cap on the total supply mintable by this contract.\",\"tokenName\":\"the name of the token. Typically this is the name of the DAO.\",\"tokenSymbol\":\"the symbol of the token. Typically this is a short abbreviation of the DAO's name.\"}},\"mint(address,uint256)\":{\"details\":\"this is only callable by an address that has the MINTER_ROLE. The Origami platform may call this function to mint new governance tokens in accordance with a DAO's charter. When it does so, they will always be minted to the treasury multisig.\",\"params\":{\"amount\":\"the amount of tokens to mint.\",\"to\":\"the address of the recipient's wallet.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"true if the contract implements interfaceID and interfaceID is not 0xffffffff, false otherwise\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferFrom(address,address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferrable()\":{\"returns\":{\"_0\":\"true if tokens are transferrable, false otherwise.\"}},\"unpause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"}},\"stateVariables\":{\"_burnEnabled\":{\"details\":\"Denotes whether or not the contract allows buring tokens. By default, this is disabled.\"}},\"title\":\"Base ERC20 token contract for Origami Governance Tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BURNER_ROLE()\":{\"notice\":\"the role hash for granting the ability to burn governance tokens.\"},\"MINTER_ROLE()\":{\"notice\":\"the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin.\"},\"PAUSER_ROLE()\":{\"notice\":\"the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin.\"},\"TRANSFERRER_ROLE()\":{\"notice\":\"the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens.\"},\"burnable()\":{\"notice\":\"indicates whether or not governance tokens are burnable\"},\"constructor\":{\"notice\":\"the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed.\"},\"disableBurn()\":{\"notice\":\"this function disables the burning of governance tokens. Only the contract admin can call this function.\"},\"disableTransfer()\":{\"notice\":\"this function disables transfers of governance tokens. Only the contract admin can call this function.\"},\"enableBurn()\":{\"notice\":\"this function enables the burning of governance tokens. Only the contract admin can call this function.\"},\"enableTransfer()\":{\"notice\":\"this function enables transfers of governance tokens. Only the contract admin can call this function.\"},\"initialize(address,string,string,uint256)\":{\"notice\":\"Initialize the ERC20Base contract. It is called during contract deployment.\"},\"mint(address,uint256)\":{\"notice\":\"this function mints governance token to the recipient's wallet. An event is fired whenever new tokens are minted indicating who initiated the mint, where they were minted to and how many tokens were minted.\"},\"pause()\":{\"notice\":\"this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transfer(address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferrable()\":{\"notice\":\"indicates whether or not governance tokens are transferrable\"},\"unpause()\":{\"notice\":\"this function unpauses the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/governance/ERC20Base.sol\":\"ERC20Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@diamond/=lib/diamond-2-hardhat/contracts/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"contracts/token/governance/ERC20Base.sol\":{\"keccak256\":\"0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35\",\"dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BurnEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFERRER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferrable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "burnable()": {
            "returns": {
              "_0": "true if tokens are burnable, false otherwise."
            }
          },
          "cap()": {
            "details": "Returns the cap on the token's total supply."
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "disableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to disabled and by whom."
          },
          "disableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to disabled and by whom."
          },
          "enableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to enabled and by whom."
          },
          "enableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to enabled and by whom."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,uint256)": {
            "params": {
              "admin": "the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.",
              "supplyCap": "cap on the total supply mintable by this contract.",
              "tokenName": "the name of the token. Typically this is the name of the DAO.",
              "tokenSymbol": "the symbol of the token. Typically this is a short abbreviation of the DAO's name."
            }
          },
          "mint(address,uint256)": {
            "details": "this is only callable by an address that has the MINTER_ROLE. The Origami platform may call this function to mint new governance tokens in accordance with a DAO's charter. When it does so, they will always be minted to the treasury multisig.",
            "params": {
              "amount": "the amount of tokens to mint.",
              "to": "the address of the recipient's wallet."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "pause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "The interface identifier, as specified in ERC-165"
            },
            "returns": {
              "_0": "true if the contract implements interfaceID and interfaceID is not 0xffffffff, false otherwise"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferFrom(address,address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferrable()": {
            "returns": {
              "_0": "true if tokens are transferrable, false otherwise."
            }
          },
          "unpause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BURNER_ROLE()": {
            "notice": "the role hash for granting the ability to burn governance tokens."
          },
          "MINTER_ROLE()": {
            "notice": "the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin."
          },
          "PAUSER_ROLE()": {
            "notice": "the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin."
          },
          "TRANSFERRER_ROLE()": {
            "notice": "the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens."
          },
          "burnable()": {
            "notice": "indicates whether or not governance tokens are burnable"
          },
          "constructor": {
            "notice": "the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed."
          },
          "disableBurn()": {
            "notice": "this function disables the burning of governance tokens. Only the contract admin can call this function."
          },
          "disableTransfer()": {
            "notice": "this function disables transfers of governance tokens. Only the contract admin can call this function."
          },
          "enableBurn()": {
            "notice": "this function enables the burning of governance tokens. Only the contract admin can call this function."
          },
          "enableTransfer()": {
            "notice": "this function enables transfers of governance tokens. Only the contract admin can call this function."
          },
          "initialize(address,string,string,uint256)": {
            "notice": "Initialize the ERC20Base contract. It is called during contract deployment."
          },
          "mint(address,uint256)": {
            "notice": "this function mints governance token to the recipient's wallet. An event is fired whenever new tokens are minted indicating who initiated the mint, where they were minted to and how many tokens were minted."
          },
          "pause()": {
            "notice": "this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations."
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface"
          },
          "transfer(address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferrable()": {
            "notice": "indicates whether or not governance tokens are transferrable"
          },
          "unpause()": {
            "notice": "this function unpauses the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@diamond/=lib/diamond-2-hardhat/contracts/",
        ":@ds-test/=lib/ds-test/src/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@oz/=lib/openzeppelin-contracts/contracts/",
        ":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/token/governance/ERC20Base.sol": "ERC20Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/token/governance/ERC20Base.sol": {
        "keccak256": "0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428",
        "urls": [
          "bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35",
          "dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
        "keccak256": "0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92",
        "urls": [
          "bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6",
          "dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/token/governance/ERC20Base.sol",
    "id": 4267,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        7055
      ],
      "ERC20Base": [
        4266
      ],
      "ERC20BurnableUpgradeable": [
        8178
      ],
      "ERC20CappedUpgradeable": [
        8265
      ],
      "ERC20Upgradeable": [
        8036
      ],
      "Initializable": [
        7297
      ],
      "PausableUpgradeable": [
        7424
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11138:26",
    "nodes": [
      {
        "id": 3732,
        "nodeType": "PragmaDirective",
        "src": "32:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 3734,
        "nodeType": "ImportDirective",
        "src": "57:93:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "file": "@oz-upgradeable/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 7056,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3733,
              "name": "AccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7055,
              "src": "65:24:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3736,
        "nodeType": "ImportDirective",
        "src": "151:76:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@oz-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 7298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3735,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7297,
              "src": "159:13:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3738,
        "nodeType": "ImportDirective",
        "src": "228:85:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "file": "@oz-upgradeable/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 7425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3737,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7424,
              "src": "236:19:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3740,
        "nodeType": "ImportDirective",
        "src": "314:82:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 8037,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3739,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8036,
              "src": "322:16:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3742,
        "nodeType": "ImportDirective",
        "src": "397:109:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 8179,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3741,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8178,
              "src": "405:24:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3744,
        "nodeType": "ImportDirective",
        "src": "507:105:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4267,
        "sourceUnit": 8266,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3743,
              "name": "ERC20CappedUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8265,
              "src": "515:22:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4266,
        "nodeType": "ContractDefinition",
        "src": "774:10395:26",
        "nodes": [
          {
            "id": 3763,
            "nodeType": "VariableDeclaration",
            "src": "1089:62:26",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 3758,
              "nodeType": "StructuredDocumentation",
              "src": "955:129:26",
              "text": "@notice the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin."
            },
            "functionSelector": "e63ab1e9",
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nameLocation": "1113:11:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3759,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 3761,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1137:13:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 3760,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1127:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3762,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1127:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3769,
            "nodeType": "VariableDeclaration",
            "src": "1299:62:26",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 3764,
              "nodeType": "StructuredDocumentation",
              "src": "1157:137:26",
              "text": "@notice the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin."
            },
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1323:11:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3765,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1299:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 3767,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1347:13:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 3766,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1337:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1337:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3775,
            "nodeType": "VariableDeclaration",
            "src": "1449:62:26",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 3770,
              "nodeType": "StructuredDocumentation",
              "src": "1367:77:26",
              "text": "@notice the role hash for granting the ability to burn governance tokens."
            },
            "functionSelector": "282c51f3",
            "mutability": "constant",
            "name": "BURNER_ROLE",
            "nameLocation": "1473:11:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3771,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1449:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4255524e45525f524f4c45",
                  "id": 3773,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1497:13:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  },
                  "value": "BURNER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  }
                ],
                "id": 3772,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1487:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1487:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3781,
            "nodeType": "VariableDeclaration",
            "src": "1783:72:26",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 3776,
              "nodeType": "StructuredDocumentation",
              "src": "1517:261:26",
              "text": "@notice the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens."
            },
            "functionSelector": "63ac5d97",
            "mutability": "constant",
            "name": "TRANSFERRER_ROLE",
            "nameLocation": "1807:16:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3777,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1783:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525245525f524f4c45",
                  "id": 3779,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1836:18:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7",
                    "typeString": "literal_string \"TRANSFERRER_ROLE\""
                  },
                  "value": "TRANSFERRER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d7",
                    "typeString": "literal_string \"TRANSFERRER_ROLE\""
                  }
                ],
                "id": 3778,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1826:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3780,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1826:29:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3784,
            "nodeType": "VariableDeclaration",
            "src": "1963:25:26",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3782,
              "nodeType": "StructuredDocumentation",
              "src": "1862:96:26",
              "text": "@dev Denotes whether or not the contract allows buring tokens. By default, this is disabled."
            },
            "mutability": "mutable",
            "name": "_burnEnabled",
            "nameLocation": "1976:12:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3783,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1963:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3787,
            "nodeType": "VariableDeclaration",
            "src": "2100:29:26",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3785,
              "nodeType": "StructuredDocumentation",
              "src": "1994:101:26",
              "text": "@notice Denotes whether or not the contract allows token transfers. By default, this is disabled."
            },
            "mutability": "mutable",
            "name": "_transferEnabled",
            "nameLocation": "2113:16:26",
            "scope": 4266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3786,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2100:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3794,
            "nodeType": "EventDefinition",
            "src": "2218:58:26",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3788,
              "nodeType": "StructuredDocumentation",
              "src": "2136:77:26",
              "text": "@dev monitoring: this is fired when the transferEnabled state is changed."
            },
            "eventSelector": "750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e244",
            "name": "TransferEnabled",
            "nameLocation": "2224:15:26",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3790,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2256:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "2240:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2269:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "2264:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:36:26"
            }
          },
          {
            "id": 3801,
            "nodeType": "EventDefinition",
            "src": "2359:54:26",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3795,
              "nodeType": "StructuredDocumentation",
              "src": "2281:73:26",
              "text": "@dev monitoring: this is fired when the burnEnabled state is changed."
            },
            "eventSelector": "373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924",
            "name": "BurnEnabled",
            "nameLocation": "2365:11:26",
            "parameters": {
              "id": 3800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3797,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2393:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3801,
                  "src": "2377:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2406:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3801,
                  "src": "2401:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3798,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:36:26"
            }
          },
          {
            "id": 3809,
            "nodeType": "FunctionDefinition",
            "src": "2637:53:26",
            "nodes": [],
            "body": {
              "id": 3808,
              "nodeType": "Block",
              "src": "2651:39:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3805,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7278,
                      "src": "2661:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3807,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:22:26"
                }
              ]
            },
            "documentation": {
              "id": 3802,
              "nodeType": "StructuredDocumentation",
              "src": "2419:213:26",
              "text": " @notice the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed.\n @custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:2:26"
            },
            "returnParameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2651:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3908,
            "nodeType": "FunctionDefinition",
            "src": "3251:938:26",
            "nodes": [],
            "body": {
              "id": 3907,
              "nodeType": "Block",
              "src": "3396:793:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3824,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3812,
                          "src": "3414:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3431:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3423:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3423:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3423:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3414:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646d696e20616464726573732063616e6e6f74206265207a65726f",
                        "id": 3830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3435:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6dcdae4a48094d0c82f976445285490f957427c6801450cbf03dec4c352f09f7",
                          "typeString": "literal_string \"Admin address cannot be zero\""
                        },
                        "value": "Admin address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6dcdae4a48094d0c82f976445285490f957427c6801450cbf03dec4c352f09f7",
                          "typeString": "literal_string \"Admin address cannot be zero\""
                        }
                      ],
                      "id": 3823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3406:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:60:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3832,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:60:26"
                },
                {
                  "assignments": [
                    3834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3834,
                      "mutability": "mutable",
                      "name": "blank",
                      "nameLocation": "3485:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 3907,
                      "src": "3477:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3833,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3477:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3841,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 3838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3514:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 3836,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3503:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3507:6:26",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3503:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3503:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3835,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3493:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3493:25:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3477:41:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3846,
                                  "name": "tokenName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3814,
                                  "src": "3557:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3844,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3546:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3550:6:26",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3546:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3546:21:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3843,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3536:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3536:32:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3849,
                          "name": "blank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3834,
                          "src": "3572:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3536:41:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520656d707479",
                        "id": 3851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3579:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05c0a738bc4e7bf229f23c88bb570e200c03907ef153be41bf48e711b392ad71",
                          "typeString": "literal_string \"ERC20Base: Token name cannot be empty\""
                        },
                        "value": "ERC20Base: Token name cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05c0a738bc4e7bf229f23c88bb570e200c03907ef153be41bf48e711b392ad71",
                          "typeString": "literal_string \"ERC20Base: Token name cannot be empty\""
                        }
                      ],
                      "id": 3842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3528:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:91:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3853,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:91:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3858,
                                  "name": "tokenSymbol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3816,
                                  "src": "3658:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3856,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3647:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3651:6:26",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3647:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3647:23:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3855,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3637:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3637:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3861,
                          "name": "blank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3834,
                          "src": "3675:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3637:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626520656d707479",
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:41:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d02e65a4f67390317dad35e2079de1a9049c987bcaf7327aa2465b094db64cd3",
                          "typeString": "literal_string \"ERC20Base: Token symbol cannot be empty\""
                        },
                        "value": "ERC20Base: Token symbol cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d02e65a4f67390317dad35e2079de1a9049c987bcaf7327aa2465b094db64cd3",
                          "typeString": "literal_string \"ERC20Base: Token symbol cannot be empty\""
                        }
                      ],
                      "id": 3854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3629:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:95:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3865,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:95:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3866,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6741,
                      "src": "3735:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3868,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:22:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3869,
                      "name": "__ERC20Burnable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8132,
                      "src": "3767:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3871,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:22:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3873,
                        "name": "supplyCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3818,
                        "src": "3818:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3872,
                      "name": "__ERC20Capped_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8202,
                      "src": "3799:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3799:29:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "3799:29:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3877,
                        "name": "tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3814,
                        "src": "3851:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3878,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3816,
                        "src": "3862:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3876,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7471,
                      "src": "3838:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3880,
                  "nodeType": "ExpressionStatement",
                  "src": "3838:36:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3881,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7328,
                      "src": "3884:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:17:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:17:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3885,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6762,
                        "src": "3959:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3886,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "3979:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3884,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7018,
                      "src": "3948:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3890,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "4006:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3891,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "4019:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3889,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7018,
                      "src": "3995:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3893,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3895,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3763,
                        "src": "4046:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3896,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "4059:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3894,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7018,
                      "src": "4035:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3898,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:30:26"
                },
                {
                  "expression": {
                    "id": 3901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3899,
                      "name": "_burnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "4128:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4143:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4128:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3902,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:20:26"
                },
                {
                  "expression": {
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3903,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3787,
                      "src": "4158:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4177:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4158:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3906,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:24:26"
                }
              ]
            },
            "documentation": {
              "id": 3810,
              "nodeType": "StructuredDocumentation",
              "src": "2696:550:26",
              "text": " @notice Initialize the ERC20Base contract. It is called during contract deployment.\n @param admin the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.\n @param tokenName the name of the token. Typically this is the name of the DAO.\n @param tokenSymbol the symbol of the token. Typically this is a short abbreviation of the DAO's name.\n @param supplyCap cap on the total supply mintable by this contract."
            },
            "functionSelector": "4d12d4b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3820,
                  "name": "initializer",
                  "nameLocations": [
                    "3380:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7199,
                  "src": "3380:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3380:11:26"
              }
            ],
            "name": "initialize",
            "nameLocation": "3260:10:26",
            "parameters": {
              "id": 3819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "3279:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "3271:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3814,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "3300:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "3286:23:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3286:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3816,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "3325:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "3311:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3818,
                  "mutability": "mutable",
                  "name": "supplyCap",
                  "nameLocation": "3346:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "3338:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3270:86:26"
            },
            "returnParameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3920,
            "nodeType": "FunctionDefinition",
            "src": "4232:105:26",
            "nodes": [],
            "body": {
              "id": 3919,
              "nodeType": "Block",
              "src": "4301:36:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3915,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4318:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 3916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4324:4:26",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7499,
                      "src": "4318:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:12:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3914,
                  "id": 3918,
                  "nodeType": "Return",
                  "src": "4311:19:26"
                }
              ]
            },
            "baseFunctions": [
              7499
            ],
            "documentation": {
              "id": 3909,
              "nodeType": "StructuredDocumentation",
              "src": "4195:32:26",
              "text": "@inheritdoc ERC20Upgradeable"
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "4241:4:26",
            "overrides": {
              "id": 3911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4268:8:26"
            },
            "parameters": {
              "id": 3910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4245:2:26"
            },
            "returnParameters": {
              "id": 3914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "4286:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3912,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4286:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4285:15:26"
            },
            "scope": 4266,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3935,
            "nodeType": "FunctionDefinition",
            "src": "4380:127:26",
            "nodes": [],
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "4461:46:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3931,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "4494:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3929,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4478:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 3930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4484:9:26",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7543,
                      "src": "4478:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3928,
                  "id": 3933,
                  "nodeType": "Return",
                  "src": "4471:29:26"
                }
              ]
            },
            "baseFunctions": [
              7543
            ],
            "documentation": {
              "id": 3921,
              "nodeType": "StructuredDocumentation",
              "src": "4343:32:26",
              "text": "@inheritdoc ERC20Upgradeable"
            },
            "functionSelector": "70a08231",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4389:9:26",
            "overrides": {
              "id": 3925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4434:8:26"
            },
            "parameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3923,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4407:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4399:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4398:15:26"
            },
            "returnParameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4452:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4451:9:26"
            },
            "scope": 4266,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3944,
            "nodeType": "FunctionDefinition",
            "src": "4661:83:26",
            "nodes": [],
            "body": {
              "id": 3943,
              "nodeType": "Block",
              "src": "4708:36:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3941,
                    "name": "_burnEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3784,
                    "src": "4725:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3940,
                  "id": 3942,
                  "nodeType": "Return",
                  "src": "4718:19:26"
                }
              ]
            },
            "documentation": {
              "id": 3936,
              "nodeType": "StructuredDocumentation",
              "src": "4513:143:26",
              "text": " @notice indicates whether or not governance tokens are burnable\n @return true if tokens are burnable, false otherwise."
            },
            "functionSelector": "a07c7ce4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnable",
            "nameLocation": "4670:8:26",
            "parameters": {
              "id": 3937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4678:2:26"
            },
            "returnParameters": {
              "id": 3940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3944,
                  "src": "4702:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4701:6:26"
            },
            "scope": 4266,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3964,
            "nodeType": "FunctionDefinition",
            "src": "4989:164:26",
            "nodes": [],
            "body": {
              "id": 3963,
              "nodeType": "Block",
              "src": "5063:90:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3953,
                      "name": "_burnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "5073:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5088:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5073:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3956,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:19:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3958,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8647,
                          "src": "5119:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5119:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3960,
                        "name": "_burnEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3784,
                        "src": "5133:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3957,
                      "name": "BurnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3801,
                      "src": "5107:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5107:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3962,
                  "nodeType": "EmitStatement",
                  "src": "5102:44:26"
                }
              ]
            },
            "documentation": {
              "id": 3945,
              "nodeType": "StructuredDocumentation",
              "src": "4750:234:26",
              "text": " @notice this function enables the burning of governance tokens. Only the contract admin can call this function.\n @dev this emits an event indicating that the burnable state has been set to enabled and by whom."
            },
            "functionSelector": "3b37d1d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3948,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "5027:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3947,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5018:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "5018:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5018:28:26"
              },
              {
                "id": 3951,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3950,
                  "name": "whenNotBurnable",
                  "nameLocations": [
                    "5047:15:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4219,
                  "src": "5047:15:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5047:15:26"
              }
            ],
            "name": "enableBurn",
            "nameLocation": "4998:10:26",
            "parameters": {
              "id": 3946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5008:2:26"
            },
            "returnParameters": {
              "id": 3952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5063:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3984,
            "nodeType": "FunctionDefinition",
            "src": "5400:163:26",
            "nodes": [],
            "body": {
              "id": 3983,
              "nodeType": "Block",
              "src": "5472:91:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3973,
                      "name": "_burnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "5482:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5497:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5482:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3976,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:20:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3978,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8647,
                          "src": "5529:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5529:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3980,
                        "name": "_burnEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3784,
                        "src": "5543:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3977,
                      "name": "BurnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3801,
                      "src": "5517:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5517:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3982,
                  "nodeType": "EmitStatement",
                  "src": "5512:44:26"
                }
              ]
            },
            "documentation": {
              "id": 3965,
              "nodeType": "StructuredDocumentation",
              "src": "5159:236:26",
              "text": " @notice this function disables the burning of governance tokens. Only the contract admin can call this function.\n @dev this emits an event indicating that the burnable state has been set to disabled and by whom."
            },
            "functionSelector": "2403c08e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3968,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "5439:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3969,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3967,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5430:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "5430:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5430:28:26"
              },
              {
                "id": 3971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3970,
                  "name": "whenBurnable",
                  "nameLocations": [
                    "5459:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4236,
                  "src": "5459:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5459:12:26"
              }
            ],
            "name": "disableBurn",
            "nameLocation": "5409:11:26",
            "parameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5420:2:26"
            },
            "returnParameters": {
              "id": 3972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3993,
            "nodeType": "FunctionDefinition",
            "src": "5727:92:26",
            "nodes": [],
            "body": {
              "id": 3992,
              "nodeType": "Block",
              "src": "5779:40:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3990,
                    "name": "_transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3787,
                    "src": "5796:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3989,
                  "id": 3991,
                  "nodeType": "Return",
                  "src": "5789:23:26"
                }
              ]
            },
            "documentation": {
              "id": 3985,
              "nodeType": "StructuredDocumentation",
              "src": "5569:153:26",
              "text": " @notice indicates whether or not governance tokens are transferrable\n @return true if tokens are transferrable, false otherwise."
            },
            "functionSelector": "047a7ef1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferrable",
            "nameLocation": "5736:13:26",
            "parameters": {
              "id": 3986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5749:2:26"
            },
            "returnParameters": {
              "id": 3989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3993,
                  "src": "5773:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5772:6:26"
            },
            "scope": 4266,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4013,
            "nodeType": "FunctionDefinition",
            "src": "6067:185:26",
            "nodes": [],
            "body": {
              "id": 4012,
              "nodeType": "Block",
              "src": "6150:102:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4002,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3787,
                      "src": "6160:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6179:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6160:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4005,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:23:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4007,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8647,
                          "src": "6214:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6214:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4009,
                        "name": "_transferEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3787,
                        "src": "6228:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4006,
                      "name": "TransferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3794,
                      "src": "6198:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6198:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4011,
                  "nodeType": "EmitStatement",
                  "src": "6193:52:26"
                }
              ]
            },
            "documentation": {
              "id": 3994,
              "nodeType": "StructuredDocumentation",
              "src": "5825:237:26",
              "text": " @notice this function enables transfers of governance tokens. Only the contract admin can call this function.\n @dev this emits an event indicating that the transferrable state has been set to enabled and by whom."
            },
            "functionSelector": "f1b50c1d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3997,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "6109:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3998,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3996,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6100:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "6100:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6100:28:26"
              },
              {
                "id": 4000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3999,
                  "name": "whenNontransferrable",
                  "nameLocations": [
                    "6129:20:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4248,
                  "src": "6129:20:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6129:20:26"
              }
            ],
            "name": "enableTransfer",
            "nameLocation": "6076:14:26",
            "parameters": {
              "id": 3995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6090:2:26"
            },
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6150:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4033,
            "nodeType": "FunctionDefinition",
            "src": "6502:184:26",
            "nodes": [],
            "body": {
              "id": 4032,
              "nodeType": "Block",
              "src": "6583:103:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4022,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3787,
                      "src": "6593:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6612:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6593:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4025,
                  "nodeType": "ExpressionStatement",
                  "src": "6593:24:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4027,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8647,
                          "src": "6648:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6648:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4029,
                        "name": "_transferEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3787,
                        "src": "6662:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4026,
                      "name": "TransferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3794,
                      "src": "6632:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6632:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4031,
                  "nodeType": "EmitStatement",
                  "src": "6627:52:26"
                }
              ]
            },
            "documentation": {
              "id": 4014,
              "nodeType": "StructuredDocumentation",
              "src": "6258:239:26",
              "text": " @notice this function disables transfers of governance tokens. Only the contract admin can call this function.\n @dev this emits an event indicating that the transferrable state has been set to disabled and by whom."
            },
            "functionSelector": "b187984f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4017,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "6545:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4016,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6536:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "6536:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6536:28:26"
              },
              {
                "id": 4020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4019,
                  "name": "whenTransferrable",
                  "nameLocations": [
                    "6565:17:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4265,
                  "src": "6565:17:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6565:17:26"
              }
            ],
            "name": "disableTransfer",
            "nameLocation": "6511:15:26",
            "parameters": {
              "id": 4015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6526:2:26"
            },
            "returnParameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6583:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4044,
            "nodeType": "FunctionDefinition",
            "src": "6931:71:26",
            "nodes": [],
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "6977:25:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4040,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7402,
                      "src": "6987:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:8:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:8:26"
                }
              ]
            },
            "documentation": {
              "id": 4034,
              "nodeType": "StructuredDocumentation",
              "src": "6692:234:26",
              "text": " @notice this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations.\n @dev this is only callable by an address that has the PAUSER_ROLE"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4037,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3763,
                    "src": "6964:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4038,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4036,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6955:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "6955:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6955:21:26"
              }
            ],
            "name": "pause",
            "nameLocation": "6940:5:26",
            "parameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6945:2:26"
            },
            "returnParameters": {
              "id": 4039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6977:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4055,
            "nodeType": "FunctionDefinition",
            "src": "7148:75:26",
            "nodes": [],
            "body": {
              "id": 4054,
              "nodeType": "Block",
              "src": "7196:27:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4051,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7418,
                      "src": "7206:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:10:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4053,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:10:26"
                }
              ]
            },
            "documentation": {
              "id": 4045,
              "nodeType": "StructuredDocumentation",
              "src": "7008:135:26",
              "text": " @notice this function unpauses the contract\n @dev this is only callable by an address that has the PAUSER_ROLE"
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4048,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3763,
                    "src": "7183:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4049,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4047,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7174:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "7174:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7174:21:26"
              }
            ],
            "name": "unpause",
            "nameLocation": "7157:7:26",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7164:2:26"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7196:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4072,
            "nodeType": "FunctionDefinition",
            "src": "7828:113:26",
            "nodes": [],
            "body": {
              "id": 4071,
              "nodeType": "Block",
              "src": "7907:34:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4067,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4058,
                        "src": "7923:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4068,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4060,
                        "src": "7927:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4066,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4207
                      ],
                      "referencedDeclaration": 4207,
                      "src": "7917:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7917:17:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4070,
                  "nodeType": "ExpressionStatement",
                  "src": "7917:17:26"
                }
              ]
            },
            "documentation": {
              "id": 4056,
              "nodeType": "StructuredDocumentation",
              "src": "7229:594:26",
              "text": " @notice this function mints governance token to the recipient's wallet. An event is fired whenever new tokens are minted indicating who initiated the mint, where they were minted to and how many tokens were minted.\n @dev this is only callable by an address that has the MINTER_ROLE. The Origami platform may call this function to mint new governance tokens in accordance with a DAO's charter. When it does so, they will always be minted to the treasury multisig.\n @param to the address of the recipient's wallet.\n @param amount the amount of tokens to mint."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4063,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3769,
                    "src": "7894:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4062,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7885:8:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "7885:8:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7885:21:26"
              }
            ],
            "name": "mint",
            "nameLocation": "7837:4:26",
            "parameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7850:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "7842:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7842:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7862:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "7854:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7854:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7841:28:26"
            },
            "returnParameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7907:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4095,
            "nodeType": "FunctionDefinition",
            "src": "8121:225:26",
            "nodes": [],
            "body": {
              "id": 4094,
              "nodeType": "Block",
              "src": "8286:60:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4089,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4075,
                        "src": "8322:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4090,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "8328:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4091,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4079,
                        "src": "8332:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4087,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8303:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8309:12:26",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7644,
                      "src": "8303:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8303:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4086,
                  "id": 4093,
                  "nodeType": "Return",
                  "src": "8296:43:26"
                }
              ]
            },
            "baseFunctions": [
              7644
            ],
            "documentation": {
              "id": 4073,
              "nodeType": "StructuredDocumentation",
              "src": "7947:169:26",
              "text": " @notice this allows transfers when the transferrable state is enabled.\n @dev this is overridden so we can apply the `whenTransferrable` modifier"
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4082,
                  "name": "whenTransferrable",
                  "nameLocations": [
                    "8241:17:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4265,
                  "src": "8241:17:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "8241:17:26"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "8130:12:26",
            "overrides": {
              "id": 4081,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8224:8:26"
            },
            "parameters": {
              "id": 4080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4075,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8151:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "8143:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8143:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4077,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8165:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "8157:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8157:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4079,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8177:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "8169:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8169:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8142:42:26"
            },
            "returnParameters": {
              "id": 4086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "8276:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4084,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8276:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8275:6:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4115,
            "nodeType": "FunctionDefinition",
            "src": "8526:153:26",
            "nodes": [],
            "body": {
              "id": 4114,
              "nodeType": "Block",
              "src": "8629:50:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4110,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "8661:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4111,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4100,
                        "src": "8665:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4108,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8646:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8652:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7568,
                      "src": "8646:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 4112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8646:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4107,
                  "id": 4113,
                  "nodeType": "Return",
                  "src": "8639:33:26"
                }
              ]
            },
            "baseFunctions": [
              7568
            ],
            "documentation": {
              "id": 4096,
              "nodeType": "StructuredDocumentation",
              "src": "8352:169:26",
              "text": " @notice this allows transfers when the transferrable state is enabled.\n @dev this is overridden so we can apply the `whenTransferrable` modifier"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4103,
                  "name": "whenTransferrable",
                  "nameLocations": [
                    "8596:17:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4265,
                  "src": "8596:17:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "8596:17:26"
              }
            ],
            "name": "transfer",
            "nameLocation": "8535:8:26",
            "overrides": {
              "id": 4102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8587:8:26"
            },
            "parameters": {
              "id": 4101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4098,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8552:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4115,
                  "src": "8544:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8544:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4100,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8564:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4115,
                  "src": "8556:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8556:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8543:28:26"
            },
            "returnParameters": {
              "id": 4107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4115,
                  "src": "8623:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8623:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8622:6:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4131,
            "nodeType": "FunctionDefinition",
            "src": "8730:94:26",
            "nodes": [],
            "body": {
              "id": 4130,
              "nodeType": "Block",
              "src": "8789:35:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4118,
                        "src": "8810:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4124,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8799:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8805:4:26",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8151,
                      "src": "8799:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:18:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4129,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:18:26"
                }
              ]
            },
            "baseFunctions": [
              8151
            ],
            "documentation": {
              "id": 4116,
              "nodeType": "StructuredDocumentation",
              "src": "8685:40:26",
              "text": "@inheritdoc ERC20BurnableUpgradeable"
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4121,
                  "name": "whenBurnable",
                  "nameLocations": [
                    "8776:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4236,
                  "src": "8776:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "8776:12:26"
              }
            ],
            "name": "burn",
            "nameLocation": "8739:4:26",
            "overrides": {
              "id": 4120,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8767:8:26"
            },
            "parameters": {
              "id": 4119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4118,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8752:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "8744:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8744:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8743:16:26"
            },
            "returnParameters": {
              "id": 4123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8789:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4150,
            "nodeType": "FunctionDefinition",
            "src": "8875:128:26",
            "nodes": [],
            "body": {
              "id": 4149,
              "nodeType": "Block",
              "src": "8955:48:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4145,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "8980:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4146,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4136,
                        "src": "8989:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4142,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8965:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8971:8:26",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8172,
                      "src": "8965:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8965:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4148,
                  "nodeType": "ExpressionStatement",
                  "src": "8965:31:26"
                }
              ]
            },
            "baseFunctions": [
              8172
            ],
            "documentation": {
              "id": 4132,
              "nodeType": "StructuredDocumentation",
              "src": "8830:40:26",
              "text": "@inheritdoc ERC20BurnableUpgradeable"
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4139,
                  "name": "whenBurnable",
                  "nameLocations": [
                    "8942:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4236,
                  "src": "8942:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "8942:12:26"
              }
            ],
            "name": "burnFrom",
            "nameLocation": "8884:8:26",
            "overrides": {
              "id": 4138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8933:8:26"
            },
            "parameters": {
              "id": 4137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8901:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "8893:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8893:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4136,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8918:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "8910:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8892:33:26"
            },
            "returnParameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8955:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4165,
            "nodeType": "FunctionDefinition",
            "src": "9270:151:26",
            "nodes": [],
            "body": {
              "id": 4164,
              "nodeType": "Block",
              "src": "9361:60:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4161,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4153,
                        "src": "9402:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 4159,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9378:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9384:17:26",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6795,
                      "src": "9378:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9378:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4158,
                  "id": 4163,
                  "nodeType": "Return",
                  "src": "9371:43:26"
                }
              ]
            },
            "baseFunctions": [
              6795
            ],
            "documentation": {
              "id": 4151,
              "nodeType": "StructuredDocumentation",
              "src": "9009:256:26",
              "text": " @notice Query if a contract implements an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract implements interfaceID and interfaceID is not 0xffffffff, false otherwise"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9279:17:26",
            "overrides": {
              "id": 4155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9337:8:26"
            },
            "parameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9304:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "9297:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9297:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9296:20:26"
            },
            "returnParameters": {
              "id": 4158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "9355:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9355:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9354:6:26"
            },
            "scope": 4266,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4188,
            "nodeType": "FunctionDefinition",
            "src": "9636:227:26",
            "nodes": [],
            "body": {
              "id": 4187,
              "nodeType": "Block",
              "src": "9802:61:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4182,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4168,
                        "src": "9839:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4183,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4170,
                        "src": "9845:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4172,
                        "src": "9849:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4179,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9812:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9818:20:26",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8019,
                      "src": "9812:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9812:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4186,
                  "nodeType": "ExpressionStatement",
                  "src": "9812:44:26"
                }
              ]
            },
            "baseFunctions": [
              8019
            ],
            "documentation": {
              "id": 4166,
              "nodeType": "StructuredDocumentation",
              "src": "9465:123:26",
              "text": " @inheritdoc ERC20Upgradeable\n @dev this is overridden so we can apply the `whenNotPaused` modifier"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4176,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "9784:13:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7346,
                  "src": "9784:13:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "9784:13:26"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9645:20:26",
            "overrides": {
              "id": 4175,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4174,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "9758:16:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8036,
                  "src": "9758:16:26"
                }
              ],
              "src": "9749:26:26"
            },
            "parameters": {
              "id": 4173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4168,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9674:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4188,
                  "src": "9666:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9666:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4170,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9688:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4188,
                  "src": "9680:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9680:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4172,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9700:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4188,
                  "src": "9692:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9665:42:26"
            },
            "returnParameters": {
              "id": 4178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9802:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 4207,
            "nodeType": "FunctionDefinition",
            "src": "9900:151:26",
            "nodes": [],
            "body": {
              "id": 4206,
              "nodeType": "Block",
              "src": "10011:40:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4202,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4191,
                        "src": "10033:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4203,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4193,
                        "src": "10037:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4199,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10021:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Base_$4266_$",
                          "typeString": "type(contract super ERC20Base)"
                        }
                      },
                      "id": 4201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10027:5:26",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8259,
                      "src": "10021:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10021:23:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4205,
                  "nodeType": "ExpressionStatement",
                  "src": "10021:23:26"
                }
              ]
            },
            "baseFunctions": [
              7848,
              8259
            ],
            "documentation": {
              "id": 4189,
              "nodeType": "StructuredDocumentation",
              "src": "9869:26:26",
              "text": "@dev specify overrides"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9909:5:26",
            "overrides": {
              "id": 4197,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4195,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "9969:16:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8036,
                  "src": "9969:16:26"
                },
                {
                  "id": 4196,
                  "name": "ERC20CappedUpgradeable",
                  "nameLocations": [
                    "9987:22:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8265,
                  "src": "9987:22:26"
                }
              ],
              "src": "9960:50:26"
            },
            "parameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4191,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9923:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "9915:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9915:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4193,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9935:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "9927:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9927:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9914:28:26"
            },
            "returnParameters": {
              "id": 4198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10011:0:26"
            },
            "scope": 4266,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 4219,
            "nodeType": "ModifierDefinition",
            "src": "10193:107:26",
            "nodes": [],
            "body": {
              "id": 4218,
              "nodeType": "Block",
              "src": "10220:80:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10238:11:26",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4211,
                            "name": "burnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3944,
                            "src": "10239:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 4212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10239:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e61626c653a206275726e696e6720697320656e61626c6564",
                        "id": 4214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10251:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb2c938976991af2b530a3bcfdacf496ed5e7fa564a4eb3450367ac12de32ba1",
                          "typeString": "literal_string \"Burnable: burning is enabled\""
                        },
                        "value": "Burnable: burning is enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb2c938976991af2b530a3bcfdacf496ed5e7fa564a4eb3450367ac12de32ba1",
                          "typeString": "literal_string \"Burnable: burning is enabled\""
                        }
                      ],
                      "id": 4210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10230:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10230:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4216,
                  "nodeType": "ExpressionStatement",
                  "src": "10230:52:26"
                },
                {
                  "id": 4217,
                  "nodeType": "PlaceholderStatement",
                  "src": "10292:1:26"
                }
              ]
            },
            "documentation": {
              "id": 4208,
              "nodeType": "StructuredDocumentation",
              "src": "10093:95:26",
              "text": "@dev this modifier prevents calls to functions it is applied to unless burning is disabled."
            },
            "name": "whenNotBurnable",
            "nameLocation": "10202:15:26",
            "parameters": {
              "id": 4209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10217:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4236,
            "nodeType": "ModifierDefinition",
            "src": "10459:142:26",
            "nodes": [],
            "body": {
              "id": 4235,
              "nodeType": "Block",
              "src": "10483:118:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4224,
                              "name": "BURNER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3775,
                              "src": "10509:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4225,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8647,
                                "src": "10522:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10522:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4223,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6814,
                            "src": "10501:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 4227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10501:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4228,
                            "name": "burnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3944,
                            "src": "10539:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 4229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10539:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10501:48:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e61626c653a206275726e696e672069732064697361626c6564",
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10551:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_251ec45a1c1888ea77e12622aa272dff594b0dae14eb40ef9f7da90a3b94abe8",
                          "typeString": "literal_string \"Burnable: burning is disabled\""
                        },
                        "value": "Burnable: burning is disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_251ec45a1c1888ea77e12622aa272dff594b0dae14eb40ef9f7da90a3b94abe8",
                          "typeString": "literal_string \"Burnable: burning is disabled\""
                        }
                      ],
                      "id": 4222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10493:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10493:90:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "10493:90:26"
                },
                {
                  "id": 4234,
                  "nodeType": "PlaceholderStatement",
                  "src": "10593:1:26"
                }
              ]
            },
            "documentation": {
              "id": 4220,
              "nodeType": "StructuredDocumentation",
              "src": "10306:148:26",
              "text": "@dev this modifier prevents calls to functions it is applied to unless\n burning is enabled or when the caller has the `BURNER_ROLE` role."
            },
            "name": "whenBurnable",
            "nameLocation": "10468:12:26",
            "parameters": {
              "id": 4221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10480:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4248,
            "nodeType": "ModifierDefinition",
            "src": "10710:125:26",
            "nodes": [],
            "body": {
              "id": 4247,
              "nodeType": "Block",
              "src": "10742:93:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10760:16:26",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4240,
                            "name": "transferrable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3993,
                            "src": "10761:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 4241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10761:15:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665727261626c653a207472616e73666572732061726520656e61626c6564",
                        "id": 4243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10778:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed30497a1295578308688461df6abc9ff2de4ec840c686bc02356894cf471925",
                          "typeString": "literal_string \"Transferrable: transfers are enabled\""
                        },
                        "value": "Transferrable: transfers are enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed30497a1295578308688461df6abc9ff2de4ec840c686bc02356894cf471925",
                          "typeString": "literal_string \"Transferrable: transfers are enabled\""
                        }
                      ],
                      "id": 4239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10752:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10752:65:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4245,
                  "nodeType": "ExpressionStatement",
                  "src": "10752:65:26"
                },
                {
                  "id": 4246,
                  "nodeType": "PlaceholderStatement",
                  "src": "10827:1:26"
                }
              ]
            },
            "documentation": {
              "id": 4237,
              "nodeType": "StructuredDocumentation",
              "src": "10607:98:26",
              "text": "@dev this modifier prevents calls to functions it is applied to unless transfers are disabled."
            },
            "name": "whenNontransferrable",
            "nameLocation": "10719:20:26",
            "parameters": {
              "id": 4238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10739:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4265,
            "nodeType": "ModifierDefinition",
            "src": "11002:165:26",
            "nodes": [],
            "body": {
              "id": 4264,
              "nodeType": "Block",
              "src": "11031:136:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4253,
                              "name": "TRANSFERRER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "11057:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4254,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8647,
                                "src": "11075:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11075:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4252,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6814,
                            "src": "11049:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 4256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11049:39:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4257,
                            "name": "transferrable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3993,
                            "src": "11092:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 4258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11092:15:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11049:58:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665727261626c653a207472616e7366657273206172652064697361626c6564",
                        "id": 4260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11109:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ff931db6947436301510d6ff59bafa5721c160d19dad2b0032c831862c69374",
                          "typeString": "literal_string \"Transferrable: transfers are disabled\""
                        },
                        "value": "Transferrable: transfers are disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ff931db6947436301510d6ff59bafa5721c160d19dad2b0032c831862c69374",
                          "typeString": "literal_string \"Transferrable: transfers are disabled\""
                        }
                      ],
                      "id": 4251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11041:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11041:108:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4262,
                  "nodeType": "ExpressionStatement",
                  "src": "11041:108:26"
                },
                {
                  "id": 4263,
                  "nodeType": "PlaceholderStatement",
                  "src": "11159:1:26"
                }
              ]
            },
            "documentation": {
              "id": 4249,
              "nodeType": "StructuredDocumentation",
              "src": "10841:156:26",
              "text": "@dev this modifier prevents calls to functions it is applied to unless\n transfers are enabled or when the caller has the `TRANSFERRER_ROLE` role."
            },
            "name": "whenTransferrable",
            "nameLocation": "11011:17:26",
            "parameters": {
              "id": 4250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11028:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3746,
              "name": "Initializable",
              "nameLocations": [
                "800:13:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7297,
              "src": "800:13:26"
            },
            "id": 3747,
            "nodeType": "InheritanceSpecifier",
            "src": "800:13:26"
          },
          {
            "baseName": {
              "id": 3748,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "819:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8036,
              "src": "819:16:26"
            },
            "id": 3749,
            "nodeType": "InheritanceSpecifier",
            "src": "819:16:26"
          },
          {
            "baseName": {
              "id": 3750,
              "name": "ERC20BurnableUpgradeable",
              "nameLocations": [
                "841:24:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8178,
              "src": "841:24:26"
            },
            "id": 3751,
            "nodeType": "InheritanceSpecifier",
            "src": "841:24:26"
          },
          {
            "baseName": {
              "id": 3752,
              "name": "PausableUpgradeable",
              "nameLocations": [
                "871:19:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7424,
              "src": "871:19:26"
            },
            "id": 3753,
            "nodeType": "InheritanceSpecifier",
            "src": "871:19:26"
          },
          {
            "baseName": {
              "id": 3754,
              "name": "AccessControlUpgradeable",
              "nameLocations": [
                "896:24:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7055,
              "src": "896:24:26"
            },
            "id": 3755,
            "nodeType": "InheritanceSpecifier",
            "src": "896:24:26"
          },
          {
            "baseName": {
              "id": 3756,
              "name": "ERC20CappedUpgradeable",
              "nameLocations": [
                "926:22:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8265,
              "src": "926:22:26"
            },
            "id": 3757,
            "nodeType": "InheritanceSpecifier",
            "src": "926:22:26"
          }
        ],
        "canonicalName": "ERC20Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3745,
          "nodeType": "StructuredDocumentation",
          "src": "614:159:26",
          "text": " @title Base ERC20 token contract for Origami Governance Tokens\n @author Origami Inc.\n @custom:security-contact contract-security@joinorigami.com"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4266,
          8265,
          7055,
          8935,
          8947,
          7128,
          7424,
          8178,
          8036,
          8290,
          8114,
          8662,
          7297
        ],
        "name": "ERC20Base",
        "nameLocation": "783:9:26",
        "scope": 4267,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 26
}