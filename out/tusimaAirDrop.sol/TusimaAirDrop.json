{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "round",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currRound",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_star",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "newRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "roundMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "tokenClaimBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "updateMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "updateRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161186c6101186000396000818161045b0152818161049b0152818161074b0152818161078b015261081e015261186c6000f3fe6080604052600436106101095760003560e01c80635468184711610095578063715018a611610064578063715018a6146102f35780638129fc1c146103085780638da5cb5b1461031d578063f2fde38b1461033b578063fbb905e31461035b57600080fd5b8063546818471461022d5780635f7e47551461024d5780635fbe4d1d146102965780636a5fcfdf146102d357600080fd5b80633b439351116100dc5780633b439351146101995780633f5d8056146101b95780634783f0ef146101e55780634f1ef2861461020557806352d1902d1461021857600080fd5b806310b202741461010e5780632eb4a7ab146101305780632ebd1e28146101595780633659cfe614610179575b600080fd5b34801561011a57600080fd5b5061012e6101293660046113bc565b6103a6565b005b34801561013c57600080fd5b5061014660ca5481565b6040519081526020015b60405180910390f35b34801561016557600080fd5b5061012e6101743660046113f8565b610421565b34801561018557600080fd5b5061012e6101943660046113f8565b610451565b3480156101a557600080fd5b5061012e6101b4366004611413565b610530565b3480156101c557600080fd5b5060c9546101d39060ff1681565b60405160ff9091168152602001610150565b3480156101f157600080fd5b5061012e61020036600461148e565b610734565b61012e6102133660046114bd565b610741565b34801561022457600080fd5b50610146610811565b34801561023957600080fd5b5061012e61024836600461157f565b6108c4565b34801561025957600080fd5b506102816102683660046115b2565b60cb602052600090815260409020805460019091015482565b60408051928352602083019190915201610150565b3480156102a257600080fd5b5060c9546102bb9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610150565b3480156102df57600080fd5b5061012e6102ee36600461157f565b61099a565b3480156102ff57600080fd5b5061012e610a0e565b34801561031457600080fd5b5061012e610a22565b34801561032957600080fd5b506033546001600160a01b03166102bb565b34801561034757600080fd5b5061012e6103563660046113f8565b610b3a565b34801561036757600080fd5b506103966103763660046115cd565b60cc60209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610150565b6103ae610bb0565b60c95460ff16600090815260cb602052604090206001015442116104085760405162461bcd60e51b815260206004820152600c60248201526b63616e6e6f7420636c61696d60a01b60448201526064015b60405180910390fd5b61041c6001600160a01b0384168383610c0a565b505050565b610429610bb0565b60c980546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104995760405162461bcd60e51b81526004016103ff90611600565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104e26000805160206117f0833981519152546001600160a01b031690565b6001600160a01b0316146105085760405162461bcd60e51b81526004016103ff9061164c565b61051181610c5c565b6040805160008082526020820190925261052d91839190610c64565b50565b60c95460ff16600090815260cb6020526040902054421080159061056b575060c95460ff16600090815260cb60205260409020600101544211155b6105a45760405162461bcd60e51b815260206004820152600a60248201526977726f6e672074696d6560b01b60448201526064016103ff565b33600090815260cc6020908152604080832060c95460ff908116855292529091205416156106145760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d656400000000000000000060448201526064016103ff565b60006106203383610dcf565b905061065f81858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610e1792505050565b6106a25760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b60448201526064016103ff565b33600081815260cc6020908152604080832060c9805460ff1685529252909120805460ff19166001179055546106e8916101009091046001600160a01b03169084610c0a565b60c9546040805160ff909216825233602083015281018390527f5e608c4a23ae45337ff2643849d5c5476d2cfebef71a51e83dae8bb5123add319060600160405180910390a150505050565b61073c610bb0565b60ca55565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107895760405162461bcd60e51b81526004016103ff90611600565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107d26000805160206117f0833981519152546001600160a01b031690565b6001600160a01b0316146107f85760405162461bcd60e51b81526004016103ff9061164c565b61080182610c5c565b61080d82826001610c64565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108b15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103ff565b506000805160206117f083398151915290565b6108cc610bb0565b60c95460ff16600090815260cb602052604090206001015442116109325760405162461bcd60e51b815260206004820152601760248201527f63616e6e6f7420637265617465206e657720726f756e6400000000000000000060448201526064016103ff565b60c980546001919060009061094b90849060ff166116ae565b82546101009290920a60ff818102199093169183160217909155604080518082018252948552602080860194855260c954909216600090815260cb909252902092518355505160019190910155565b6109a2610bb0565b60c95460ff1682158015906109b657508183105b6109f25760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081c9bdd5b99609a1b60448201526064016103ff565b60ff16600090815260cb60205260409020918255600190910155565b610a16610bb0565b610a206000610e2d565b565b600054610100900460ff1615808015610a425750600054600160ff909116105b80610a5c5750303b158015610a5c575060005460ff166001145b610abf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103ff565b6000805460ff191660011790558015610ae2576000805461ff0019166101001790555b610aea610e7f565b610af2610eae565b801561052d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610b42610bb0565b6001600160a01b038116610ba75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ff565b61052d81610e2d565b6033546001600160a01b03163314610a205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ff565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261041c908490610ed5565b61052d610bb0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c975761041c83610faa565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cf1575060408051601f3d908101601f19168201909252610cee918101906116c7565b60015b610d545760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103ff565b6000805160206117f08339815191528114610dc35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103ff565b5061041c838383611046565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012090505b92915050565b6000610e268260ca5485611071565b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ea65760405162461bcd60e51b81526004016103ff906116e0565b610a20611087565b600054610100900460ff16610a205760405162461bcd60e51b81526004016103ff906116e0565b6000610f2a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110b79092919063ffffffff16565b9050805160001480610f4b575080806020019051810190610f4b919061172b565b61041c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103ff565b6001600160a01b0381163b6110175760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103ff565b6000805160206117f083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61104f836110ce565b60008251118061105c5750805b1561041c5761106b838361110e565b50505050565b60008261107e8584611133565b14949350505050565b600054610100900460ff166110ae5760405162461bcd60e51b81526004016103ff906116e0565b610a2033610e2d565b60606110c68484600085611180565b949350505050565b6110d781610faa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610e2683836040518060600160405280602781526020016118106027913961125b565b600081815b845181101561117857611164828683815181106111575761115761174d565b60200260200101516112d3565b91508061117081611763565b915050611138565b509392505050565b6060824710156111e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103ff565b600080866001600160a01b031685876040516111fd91906117a0565b60006040518083038185875af1925050503d806000811461123a576040519150601f19603f3d011682016040523d82523d6000602084013e61123f565b606091505b509150915061125087838387611302565b979650505050505050565b6060600080856001600160a01b03168560405161127891906117a0565b600060405180830381855af49150503d80600081146112b3576040519150601f19603f3d011682016040523d82523d6000602084013e6112b8565b606091505b50915091506112c986838387611302565b9695505050505050565b60008183106112ef576000828152602084905260409020610e26565b6000838152602083905260409020610e26565b6060831561137157825160000361136a576001600160a01b0385163b61136a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ff565b50816110c6565b6110c683838151156113865781518083602001fd5b8060405162461bcd60e51b81526004016103ff91906117bc565b80356001600160a01b03811681146113b757600080fd5b919050565b6000806000606084860312156113d157600080fd5b6113da846113a0565b92506113e8602085016113a0565b9150604084013590509250925092565b60006020828403121561140a57600080fd5b610e26826113a0565b60008060006040848603121561142857600080fd5b833567ffffffffffffffff8082111561144057600080fd5b818601915086601f83011261145457600080fd5b81358181111561146357600080fd5b8760208260051b850101111561147857600080fd5b6020928301989097509590910135949350505050565b6000602082840312156114a057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114d057600080fd5b6114d9836113a0565b9150602083013567ffffffffffffffff808211156114f657600080fd5b818501915085601f83011261150a57600080fd5b81358181111561151c5761151c6114a7565b604051601f8201601f19908116603f01168101908382118183101715611544576115446114a7565b8160405282815288602084870101111561155d57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561159257600080fd5b50508035926020909101359150565b803560ff811681146113b757600080fd5b6000602082840312156115c457600080fd5b610e26826115a1565b600080604083850312156115e057600080fd5b6115e9836113a0565b91506115f7602084016115a1565b90509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60ff8181168382160190811115610e1157610e11611698565b6000602082840312156116d957600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561173d57600080fd5b81518015158114610e2657600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161177557611775611698565b5060010190565b60005b8381101561179757818101518382015260200161177f565b50506000910152565b600082516117b281846020870161177c565b9190910192915050565b60208152600082518060208401526117db81604085016020870161177c565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122057358849175b9f8687c9c803473d7c535cb7b195149d13e6b2b0e4ade335803564736f6c63430008100033",
    "sourceMap": "550:2704:8:-:0;;;1332:4:41;1289:48;;1001:53:8;;;;;;;;;-1:-1:-1;1025:22:8;:20;:22::i;:::-;550:2704;;5939:280:40;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:40;;216:2:54;5998:66:40;;;198:21:54;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:54;;;338:37;392:19;;5998:66:40;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:40;6140:15;6125:30;;;;;;6174:28;;564:36:54;;;6174:28:40;;552:2:54;537:18;6174:28:40;;;;;;;6074:139;5939:280::o;422:184:54:-;550:2704:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "550:2704:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:255;;;;;;;;;;-1:-1:-1;2675:255:8;;;;;:::i;:::-;;:::i;:::-;;743:25;;;;;;;;;;;;;;;;;;;671::54;;;659:2;644:18;743:25:8;;;;;;;;2562:107;;;;;;;;;;-1:-1:-1;2562:107:8;;;;;:::i;:::-;;:::i;3387:195:41:-;;;;;;;;;;-1:-1:-1;3387:195:41;;;;;:::i;:::-;;:::i;1925:631:8:-;;;;;;;;;;-1:-1:-1;1925:631:8;;;;;:::i;:::-;;:::i;685:22::-;;;;;;;;;;-1:-1:-1;685:22:8;;;;;;;;;;;1764:4:54;1752:17;;;1734:36;;1722:2;1707:18;685:22:8;1592:184:54;1811:108:8;;;;;;;;;;-1:-1:-1;1811:108:8;;;;;:::i;:::-;;:::i;3901:220:41:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1314:235:8:-;;;;;;;;;;-1:-1:-1;1314:235:8;;;;;:::i;:::-;;:::i;844:37::-;;;;;;;;;;-1:-1:-1;844:37:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3873:25:54;;;3929:2;3914:18;;3907:34;;;;3846:18;844:37:8;3699:248:54;713:24:8;;;;;;;;;;-1:-1:-1;713:24:8;;;;;;;-1:-1:-1;;;;;713:24:8;;;;;;-1:-1:-1;;;;;4116:32:54;;;4098:51;;4086:2;4071:18;713:24:8;3952:203:54;1555:250:8;;;;;;;;;;-1:-1:-1;1555:250:8;;;;;:::i;:::-;;:::i;2064:101:35:-;;;;;;;;;;;;;:::i;1128:108:8:-;;;;;;;;;;;;;:::i;1441:85:35:-;;;;;;;;;;-1:-1:-1;1513:6:35;;-1:-1:-1;;;;;1513:6:35;1441:85;;2314:198;;;;;;;;;;-1:-1:-1;2314:198:35;;;;;:::i;:::-;;:::i;887:54:8:-;;;;;;;;;;-1:-1:-1;887:54:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4586:14:54;;4579:22;4561:41;;4549:2;4534:18;887:54:8;4421:187:54;2675:255:8;1334:13:35;:11;:13::i;:::-;2802:9:8::1;::::0;::::1;;2793:19;::::0;;;:8:::1;:19;::::0;;;;2802:9;2793:23:::1;::::0;2819:15:::1;-1:-1:-1::0;2785:66:8::1;;;::::0;-1:-1:-1;;;2785:66:8;;4815:2:54;2785:66:8::1;::::0;::::1;4797:21:54::0;4854:2;4834:18;;;4827:30;-1:-1:-1;;;4873:18:54;;;4866:42;4925:18;;2785:66:8::1;;;;;;;;;2861:62;-1:-1:-1::0;;;;;2861:42:8;::::1;2904:9:::0;2915:7;2861:42:::1;:62::i;:::-;2675:255:::0;;;:::o;2562:107::-;1334:13:35;:11;:13::i;:::-;2637:9:8::1;:25:::0;;-1:-1:-1;;;;;2637:25:8;;::::1;;;-1:-1:-1::0;;;;;;2637:25:8;;::::1;::::0;;;::::1;::::0;;2562:107::o;3387:195:41:-;-1:-1:-1;;;;;1898:6:41;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:41;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:41;:20;-1:-1:-1;;;;;;;;;;;1536:65:38;-1:-1:-1;;;;;1536:65:38;;1457:151;1971:20:41;-1:-1:-1;;;;;1971:30:41;;1963:87;;;;-1:-1:-1;;;1963:87:41;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;1925:631:8:-;2038:9;;;;2029:19;;;;:8;:19;;;;;:25;2058:15;-1:-1:-1;2029:44:8;;;:103;;-1:-1:-1;2118:9:8;;;;2109:19;;;;:8;:19;;;;;2118:9;2109:23;;2090:15;:42;;2029:103;2008:161;;;;-1:-1:-1;;;2008:161:8;;5982:2:54;2008:161:8;;;5964:21:54;6021:2;6001:18;;;5994:30;-1:-1:-1;;;6040:18:54;;;6033:40;6090:18;;2008:161:8;5780:334:54;2008:161:8;2196:10;2188:19;;;;:7;:19;;;;;;;;2208:9;;;;;;2188:30;;;;;;;;;2187:31;2179:67;;;;-1:-1:-1;;;2179:67:8;;6321:2:54;2179:67:8;;;6303:21:54;6360:2;6340:18;;;6333:30;6399:25;6379:18;;;6372:53;6442:18;;2179:67:8;6119:347:54;2179:67:8;2257:12;2272:26;2278:10;2290:7;2272:5;:26::i;:::-;2257:41;;2316:27;2324:4;2330:12;;2316:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2316:7:8;;-1:-1:-1;;;2316:27:8:i;:::-;2308:60;;;;-1:-1:-1;;;2308:60:8;;6673:2:54;2308:60:8;;;6655:21:54;6712:2;6692:18;;;6685:30;-1:-1:-1;;;6731:18:54;;;6724:50;6791:18;;2308:60:8;6471:344:54;2308:60:8;2395:10;2387:19;;;;:7;:19;;;;;;;;2407:9;;;;;2387:30;;;;;;;:37;;-1:-1:-1;;2387:37:8;2420:4;2387:37;;;2452:9;2434:62;;2407:9;2452;;;-1:-1:-1;;;;;2452:9:8;;2488:7;2434:41;:62::i;:::-;2518:9;;2512:37;;;2518:9;;;;7018:36:54;;2529:10:8;7085:2:54;7070:18;;7063:60;7139:18;;7132:34;;;2512:37:8;;7006:2:54;6991:18;2512:37:8;;;;;;;1998:558;1925:631;;;:::o;1811:108::-;1334:13:35;:11;:13::i;:::-;1888:10:8::1;:24:::0;1811:108::o;3901:220:41:-;-1:-1:-1;;;;;1898:6:41;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:41;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:41;:20;-1:-1:-1;;;;;;;;;;;1536:65:38;-1:-1:-1;;;;;1536:65:38;;1457:151;1971:20:41;-1:-1:-1;;;;;1971:30:41;;1963:87;;;;-1:-1:-1;;;1963:87:41;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:41;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:41;;7379:2:54;2308:92:41;;;7361:21:54;7418:2;7398:18;;;7391:30;7457:34;7437:18;;;7430:62;7528:26;7508:18;;;7501:54;7572:19;;2308:92:41;7177:420:54;2308:92:41;-1:-1:-1;;;;;;;;;;;;3006:131:41;:::o;1314:235:8:-;1334:13:35;:11;:13::i;:::-;1426:9:8::1;::::0;::::1;;1417:19;::::0;;;:8:::1;:19;::::0;;;;1426:9;1417:23:::1;::::0;1399:15:::1;:41;1391:77;;;::::0;-1:-1:-1;;;1391:77:8;;7804:2:54;1391:77:8::1;::::0;::::1;7786:21:54::0;7843:2;7823:18;;;7816:30;7882:25;7862:18;;;7855:53;7925:18;;1391:77:8::1;7602:347:54::0;1391:77:8::1;1478:9;:14:::0;;1491:1:::1;::::0;1478:9;::::1;::::0;:14:::1;::::0;1491:1;;1478:14:::1;;;:::i;:::-;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;1524:18:::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;1511:9:::1;::::0;;;::::1;-1:-1:-1::0;1502:19:8;;;:8:::1;:19:::0;;;;;:40;;;;-1:-1:-1;1502:40:8;-1:-1:-1;1502:40:8;;;::::1;::::0;1314:235::o;1555:250::-;1334:13:35;:11;:13::i;:::-;1650:9:8::1;::::0;::::1;;1677:10:::0;;;;;:27:::1;;;1700:4;1691:6;:13;1677:27;1669:53;;;::::0;-1:-1:-1;;;1669:53:8;;8441:2:54;1669:53:8::1;::::0;::::1;8423:21:54::0;8480:2;8460:18;;;8453:30;-1:-1:-1;;;8499:18:54;;;8492:43;8552:18;;1669:53:8::1;8239:337:54::0;1669:53:8::1;1732:15;;;::::0;;;:8:::1;:15;::::0;;;;:30;;;1772:19:::1;::::0;;::::1;:26:::0;1555:250::o;2064:101:35:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;1128:108:8:-;3279:19:40;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:40;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:40;1713:19:45;:23;;;3387:66:40;;-1:-1:-1;3436:12:40;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:40;;8783:2:54;3325:201:40;;;8765:21:54;8822:2;8802:18;;;8795:30;8861:34;8841:18;;;8834:62;-1:-1:-1;;;8912:18:54;;;8905:44;8966:19;;3325:201:40;8581:410:54;3325:201:40;3536:12;:16;;-1:-1:-1;;3536:16:40;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:40;;;;;3562:65;1179:16:8::1;:14;:16::i;:::-;1205:24;:22;:24::i;:::-;3651:14:40::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:40;;;3721:14;;-1:-1:-1;1734:36:54;;3721:14:40;;1722:2:54;1707:18;3721:14:40;;;;;;;3269:483;1128:108:8:o;2314:198:35:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:35;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:35;;9397:2:54;2394:73:35::1;::::0;::::1;9379:21:54::0;9436:2;9416:18;;;9409:30;9475:34;9455:18;;;9448:62;-1:-1:-1;;;9526:18:54;;;9519:36;9572:19;;2394:73:35::1;9195:402:54::0;2394:73:35::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:35;929:10:46;1662:23:35;1654:68;;;;-1:-1:-1;;;1654:68:35;;9804:2:54;1654:68:35;;;9786:21:54;;;9823:18;;;9816:30;9882:34;9862:18;;;9855:62;9934:18;;1654:68:35;9602:356:54;996:186:44;1116:58;;;-1:-1:-1;;;;;10155:32:54;;1116:58:44;;;10137:51:54;10204:18;;;;10197:34;;;1116:58:44;;;;;;;;;;10110:18:54;;;;1116:58:44;;;;;;;;-1:-1:-1;;;;;1116:58:44;-1:-1:-1;;;1116:58:44;;;1089:86;;1109:5;;1089:19;:86::i;1242:66:8:-;1334:13:35;:11;:13::i;2820:944:38:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:38;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:38;;;;;;;;-1:-1:-1;;3383:63:38;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:38;;10633:2:54;3610:56:38;;;10615:21:54;10672:2;10652:18;;;10645:30;10711:34;10691:18;;;10684:62;-1:-1:-1;;;10762:18:54;;;10755:44;10816:19;;3610:56:38;10431:410:54;3379:302:38;-1:-1:-1;;;;;;;;;;;3496:28:38;;3488:82;;;;-1:-1:-1;;;3488:82:38;;11048:2:54;3488:82:38;;;11030:21:54;11087:2;11067:18;;;11060:30;11126:34;11106:18;;;11099:62;-1:-1:-1;;;11177:18:54;;;11170:39;11226:19;;3488:82:38;10846:405:54;3488:82:38;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2940:145:8:-;3045:32;;-1:-1:-1;;11433:2:54;11429:15;;;11425:53;3045:32:8;;;11413:66:54;11495:12;;;11488:28;;;3010:7:8;;11532:12:54;;3045:32:8;;;;;;;;;;;;3035:43;;;;;;3028:50;;2940:145;;;;;:::o;3091:161::-;3169:4;3191:54;3221:5;3228:10;;3240:4;3191:29;:54::i;:::-;3184:61;3091:161;-1:-1:-1;;;3091:161:8:o;2666:187:35:-;2758:6;;;-1:-1:-1;;;;;2774:17:35;;;-1:-1:-1;;;;;;2774:17:35;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:40;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:40;;;;;;;:::i;:::-;1065:26:35::1;:24;:26::i;1042:67:41:-:0;5374:13:40;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:40;;;;;;;:::i;5305:653:44:-;5735:23;5761:69;5789:4;5761:69;;;;;;;;;;;;;;;;;5769:5;-1:-1:-1;;;;;5761:27:44;;;:69;;;;;:::i;:::-;5735:95;;5848:10;:17;5869:1;5848:22;:56;;;;5885:10;5874:30;;;;;;;;;;;;:::i;:::-;5840:111;;;;-1:-1:-1;;;5840:111:44;;12451:2:54;5840:111:44;;;12433:21:54;12490:2;12470:18;;;12463:30;12529:34;12509:18;;;12502:62;-1:-1:-1;;;12580:18:54;;;12573:40;12630:19;;5840:111:44;12249:406:54;1699:281:38;-1:-1:-1;;;;;1713:19:45;;;1772:106:38;;;;-1:-1:-1;;;1772:106:38;;12862:2:54;1772:106:38;;;12844:21:54;12901:2;12881:18;;;12874:30;12940:34;12920:18;;;12913:62;-1:-1:-1;;;12991:18:54;;;12984:43;13044:19;;1772:106:38;12660:409:54;1772:106:38;-1:-1:-1;;;;;;;;;;;1888:85:38;;-1:-1:-1;;;;;;1888:85:38;-1:-1:-1;;;;;1888:85:38;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;1167:154:48:-;1258:4;1310;1281:25;1294:5;1301:4;1281:12;:25::i;:::-;:33;;1167:154;-1:-1:-1;;;;1167:154:48:o;1104:111:35:-;5374:13:40;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:40;;;;;;;:::i;:::-;1176:32:35::1;929:10:46::0;1176:18:35::1;:32::i;4119:223:45:-:0;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;:::-;4276:59;4119:223;-1:-1:-1;;;;4119:223:45:o;2086:152:38:-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:38;;;;;;;;2086:152;:::o;6685:198:45:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;1945:290:48:-;2028:7;2070:4;2028:7;2084:116;2108:5;:12;2104:1;:16;2084:116;;;2156:33;2166:12;2180:5;2186:1;2180:8;;;;;;;;:::i;:::-;;;;;;;2156:9;:33::i;:::-;2141:48;-1:-1:-1;2122:3:48;;;;:::i;:::-;;;;2084:116;;;-1:-1:-1;2216:12:48;1945:290;-1:-1:-1;;;1945:290:48:o;5176:446:45:-;5341:12;5398:5;5373:21;:30;;5365:81;;;;-1:-1:-1;;;5365:81:45;;13548:2:54;5365:81:45;;;13530:21:54;13587:2;13567:18;;;13560:30;13626:34;13606:18;;;13599:62;-1:-1:-1;;;13677:18:54;;;13670:36;13723:19;;5365:81:45;13346:402:54;5365:81:45;5457:12;5471:23;5498:6;-1:-1:-1;;;;;5498:11:45;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:45:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:45;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:45:o;9216:147:48:-;9279:7;9309:1;9305;:5;:51;;9437:13;9528:15;;;9563:4;9556:15;;;9609:4;9593:21;;9305:51;;;9437:13;9528:15;;;9563:4;9556:15;;;9609:4;9593:21;;9313:20;9369:261;7682:628:45;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:45;;;8124:60;;;;-1:-1:-1;;;8124:60:45;;14502:2:54;8124:60:45;;;14484:21:54;14541:2;14521:18;;;14514:30;14580:31;14560:18;;;14553:59;14629:18;;8124:60:45;14300:353:54;8124:60:45;-1:-1:-1;8219:10:45;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:45;;;;;;;;:::i;14:173:54:-;82:20;;-1:-1:-1;;;;;131:31:54;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;707:186::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;858:29;877:9;858:29;:::i;898:689::-;993:6;1001;1009;1062:2;1050:9;1041:7;1037:23;1033:32;1030:52;;;1078:1;1075;1068:12;1030:52;1118:9;1105:23;1147:18;1188:2;1180:6;1177:14;1174:34;;;1204:1;1201;1194:12;1174:34;1242:6;1231:9;1227:22;1217:32;;1287:7;1280:4;1276:2;1272:13;1268:27;1258:55;;1309:1;1306;1299:12;1258:55;1349:2;1336:16;1375:2;1367:6;1364:14;1361:34;;;1391:1;1388;1381:12;1361:34;1446:7;1439:4;1429:6;1426:1;1422:14;1418:2;1414:23;1410:34;1407:47;1404:67;;;1467:1;1464;1457:12;1404:67;1498:4;1490:13;;;;1522:6;;-1:-1:-1;1560:20:54;;;;1547:34;;898:689;-1:-1:-1;;;;898:689:54:o;1781:180::-;1840:6;1893:2;1881:9;1872:7;1868:23;1864:32;1861:52;;;1909:1;1906;1899:12;1861:52;-1:-1:-1;1932:23:54;;1781:180;-1:-1:-1;1781:180:54:o;1966:127::-;2027:10;2022:3;2018:20;2015:1;2008:31;2058:4;2055:1;2048:15;2082:4;2079:1;2072:15;2098:995;2175:6;2183;2236:2;2224:9;2215:7;2211:23;2207:32;2204:52;;;2252:1;2249;2242:12;2204:52;2275:29;2294:9;2275:29;:::i;:::-;2265:39;;2355:2;2344:9;2340:18;2327:32;2378:18;2419:2;2411:6;2408:14;2405:34;;;2435:1;2432;2425:12;2405:34;2473:6;2462:9;2458:22;2448:32;;2518:7;2511:4;2507:2;2503:13;2499:27;2489:55;;2540:1;2537;2530:12;2489:55;2576:2;2563:16;2598:2;2594;2591:10;2588:36;;;2604:18;;:::i;:::-;2679:2;2673:9;2647:2;2733:13;;-1:-1:-1;;2729:22:54;;;2753:2;2725:31;2721:40;2709:53;;;2777:18;;;2797:22;;;2774:46;2771:72;;;2823:18;;:::i;:::-;2863:10;2859:2;2852:22;2898:2;2890:6;2883:18;2938:7;2933:2;2928;2924;2920:11;2916:20;2913:33;2910:53;;;2959:1;2956;2949:12;2910:53;3015:2;3010;3006;3002:11;2997:2;2989:6;2985:15;2972:46;3060:1;3055:2;3050;3042:6;3038:15;3034:24;3027:35;3081:6;3071:16;;;;;;;2098:995;;;;;:::o;3098:248::-;3166:6;3174;3227:2;3215:9;3206:7;3202:23;3198:32;3195:52;;;3243:1;3240;3233:12;3195:52;-1:-1:-1;;3266:23:54;;;3336:2;3321:18;;;3308:32;;-1:-1:-1;3098:248:54:o;3351:156::-;3417:20;;3477:4;3466:16;;3456:27;;3446:55;;3497:1;3494;3487:12;3512:182;3569:6;3622:2;3610:9;3601:7;3597:23;3593:32;3590:52;;;3638:1;3635;3628:12;3590:52;3661:27;3678:9;3661:27;:::i;4160:256::-;4226:6;4234;4287:2;4275:9;4266:7;4262:23;4258:32;4255:52;;;4303:1;4300;4293:12;4255:52;4326:29;4345:9;4326:29;:::i;:::-;4316:39;;4374:36;4406:2;4395:9;4391:18;4374:36;:::i;:::-;4364:46;;4160:256;;;;;:::o;4954:408::-;5156:2;5138:21;;;5195:2;5175:18;;;5168:30;5234:34;5229:2;5214:18;;5207:62;-1:-1:-1;;;5300:2:54;5285:18;;5278:42;5352:3;5337:19;;4954:408::o;5367:::-;5569:2;5551:21;;;5608:2;5588:18;;;5581:30;5647:34;5642:2;5627:18;;5620:62;-1:-1:-1;;;5713:2:54;5698:18;;5691:42;5765:3;5750:19;;5367:408::o;7954:127::-;8015:10;8010:3;8006:20;8003:1;7996:31;8046:4;8043:1;8036:15;8070:4;8067:1;8060:15;8086:148;8174:4;8153:12;;;8167;;;8149:31;;8192:13;;8189:39;;;8208:18;;:::i;10242:184::-;10312:6;10365:2;10353:9;10344:7;10340:23;10336:32;10333:52;;;10381:1;10378;10371:12;10333:52;-1:-1:-1;10404:16:54;;10242:184;-1:-1:-1;10242:184:54:o;11555:407::-;11757:2;11739:21;;;11796:2;11776:18;;;11769:30;11835:34;11830:2;11815:18;;11808:62;-1:-1:-1;;;11901:2:54;11886:18;;11879:41;11952:3;11937:19;;11555:407::o;11967:277::-;12034:6;12087:2;12075:9;12066:7;12062:23;12058:32;12055:52;;;12103:1;12100;12093:12;12055:52;12135:9;12129:16;12188:5;12181:13;12174:21;12167:5;12164:32;12154:60;;12210:1;12207;12200:12;13074:127;13135:10;13130:3;13126:20;13123:1;13116:31;13166:4;13163:1;13156:15;13190:4;13187:1;13180:15;13206:135;13245:3;13266:17;;;13263:43;;13286:18;;:::i;:::-;-1:-1:-1;13333:1:54;13322:13;;13206:135::o;13753:250::-;13838:1;13848:113;13862:6;13859:1;13856:13;13848:113;;;13938:11;;;13932:18;13919:11;;;13912:39;13884:2;13877:10;13848:113;;;-1:-1:-1;;13995:1:54;13977:16;;13970:27;13753:250::o;14008:287::-;14137:3;14175:6;14169:13;14191:66;14250:6;14245:3;14238:4;14230:6;14226:17;14191:66;:::i;:::-;14273:16;;;;;14008:287;-1:-1:-1;;14008:287:54:o;14658:396::-;14807:2;14796:9;14789:21;14770:4;14839:6;14833:13;14882:6;14877:2;14866:9;14862:18;14855:34;14898:79;14970:6;14965:2;14954:9;14950:18;14945:2;14937:6;14933:15;14898:79;:::i;:::-;15038:2;15017:15;-1:-1:-1;;15013:29:54;14998:45;;;;15045:2;14994:54;;14658:396;-1:-1:-1;;14658:396:54:o",
    "linkReferences": {},
    "immutableReferences": {
      "9054": [
        {
          "start": 1115,
          "length": 32
        },
        {
          "start": 1179,
          "length": 32
        },
        {
          "start": 1867,
          "length": 32
        },
        {
          "start": 1931,
          "length": 32
        },
        {
          "start": 2078,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claim(bytes32[],uint256)": "3b439351",
    "claimed(address,uint8)": "fbb905e3",
    "currRound()": "3f5d8056",
    "initialize()": "8129fc1c",
    "merkleRoot()": "2eb4a7ab",
    "newRound(uint256,uint256)": "54681847",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "roundMap(uint8)": "5f7e4755",
    "setTokenAddr(address)": "2ebd1e28",
    "tokenAddr()": "5fbe4d1d",
    "tokenClaimBack(address,address,uint256)": "10b20274",
    "transferOwnership(address)": "f2fde38b",
    "updateMerkleRoot(bytes32)": "4783f0ef",
    "updateRound(uint256,uint256)": "6a5fcfdf",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"round\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currRound\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_star\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"newRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"roundMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenClaimBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"updateMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"updateRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tusimaAirDrop.sol\":\"TusimaAirDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@diamond/=lib/diamond-2-hardhat/contracts/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"contracts/tusimaAirDrop.sol\":{\"keccak256\":\"0x50ba8ad9509eee8c3bc0f79520d1bcf70dfb911dad767a332fd2379936f26ba7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f67f9eff6fa244873fcb030334549ee57a3da803e8123efacba26c71ad6a6060\",\"dweb:/ipfs/QmURcpq4ERaZX2DPesMoBUpGnj1HhsuXahfbnR4Mg5wYEg\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8\",\"dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol\":{\"keccak256\":\"0xb89d1b9c2f50f58a812202138ddb7dd147a2f8bb09846f4420cb4909dec62220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125d6353568da46a9c09ad2854a5ac08dffe0befaf991068d40775a2fe490682\",\"dweb:/ipfs/QmZuCkiiAnWm1LB3KxH71w7kJeDPWvDZM6xjyHoc5ihPwB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "round",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "_merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currRound",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_star",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_end",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "newRound"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "roundMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenAddr"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAddr",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tokenClaimBack"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMerkleRoot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_end",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRound"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@diamond/=lib/diamond-2-hardhat/contracts/",
        ":@ds-test/=lib/ds-test/src/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@oz/=lib/openzeppelin-contracts/contracts/",
        ":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/tusimaAirDrop.sol": "TusimaAirDrop"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/tusimaAirDrop.sol": {
        "keccak256": "0x50ba8ad9509eee8c3bc0f79520d1bcf70dfb911dad767a332fd2379936f26ba7",
        "urls": [
          "bzz-raw://f67f9eff6fa244873fcb030334549ee57a3da803e8123efacba26c71ad6a6060",
          "dweb:/ipfs/QmURcpq4ERaZX2DPesMoBUpGnj1HhsuXahfbnR4Mg5wYEg"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c",
        "urls": [
          "bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8",
          "dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol": {
        "keccak256": "0xb89d1b9c2f50f58a812202138ddb7dd147a2f8bb09846f4420cb4909dec62220",
        "urls": [
          "bzz-raw://125d6353568da46a9c09ad2854a5ac08dffe0befaf991068d40775a2fe490682",
          "dweb:/ipfs/QmZuCkiiAnWm1LB3KxH71w7kJeDPWvDZM6xjyHoc5ihPwB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/tusimaAirDrop.sol",
    "id": 1462,
    "exportedSymbols": {
      "AddressUpgradeable": [
        9979
      ],
      "ContextUpgradeable": [
        10021
      ],
      "ERC1967UpgradeUpgradeable": [
        8844
      ],
      "IBeaconUpgradeable": [
        8854
      ],
      "IERC1822ProxiableUpgradeable": [
        8520
      ],
      "IERC1967Upgradeable": [
        8510
      ],
      "IERC20PermitUpgradeable": [
        9273
      ],
      "IERC20Upgradeable": [
        9237
      ],
      "Initializable": [
        9023
      ],
      "MerkleProofUpgradeable": [
        10659
      ],
      "OwnableUpgradeable": [
        8489
      ],
      "SafeERC20Upgradeable": [
        9649
      ],
      "StorageSlotUpgradeable": [
        10131
      ],
      "TusimaAirDrop": [
        1461
      ],
      "UUPSUpgradeable": [
        9159
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3224:8",
    "nodes": [
      {
        "id": 1141,
        "nodeType": "PragmaDirective",
        "src": "32:24:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 1142,
        "nodeType": "ImportDirective",
        "src": "58:75:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 9024,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1143,
        "nodeType": "ImportDirective",
        "src": "134:75:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 8490,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1144,
        "nodeType": "ImportDirective",
        "src": "210:77:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 9160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1145,
        "nodeType": "ImportDirective",
        "src": "288:79:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 9238,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1146,
        "nodeType": "ImportDirective",
        "src": "368:88:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 9650,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1147,
        "nodeType": "ImportDirective",
        "src": "457:91:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1462,
        "sourceUnit": 10660,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1461,
        "nodeType": "ContractDefinition",
        "src": "550:2704:8",
        "nodes": [
          {
            "id": 1157,
            "nodeType": "UsingForDirective",
            "src": "630:49:8",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1154,
              "name": "SafeERC20Upgradeable",
              "nameLocations": [
                "636:20:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9649,
              "src": "636:20:8"
            },
            "typeName": {
              "id": 1156,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1155,
                "name": "IERC20Upgradeable",
                "nameLocations": [
                  "661:17:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9237,
                "src": "661:17:8"
              },
              "referencedDeclaration": 9237,
              "src": "661:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$9237",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 1159,
            "nodeType": "VariableDeclaration",
            "src": "685:22:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "3f5d8056",
            "mutability": "mutable",
            "name": "currRound",
            "nameLocation": "698:9:8",
            "scope": 1461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1158,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "685:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1161,
            "nodeType": "VariableDeclaration",
            "src": "713:24:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "5fbe4d1d",
            "mutability": "mutable",
            "name": "tokenAddr",
            "nameLocation": "728:9:8",
            "scope": 1461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1160,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1163,
            "nodeType": "VariableDeclaration",
            "src": "743:25:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "758:10:8",
            "scope": 1461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1162,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "743:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1168,
            "nodeType": "StructDefinition",
            "src": "775:63:8",
            "nodes": [],
            "canonicalName": "TusimaAirDrop.Round",
            "members": [
              {
                "constant": false,
                "id": 1165,
                "mutability": "mutable",
                "name": "start",
                "nameLocation": "805:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 1168,
                "src": "797:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1164,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "797:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1167,
                "mutability": "mutable",
                "name": "end",
                "nameLocation": "828:3:8",
                "nodeType": "VariableDeclaration",
                "scope": 1168,
                "src": "820:11:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1166,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "820:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Round",
            "nameLocation": "782:5:8",
            "scope": 1461,
            "visibility": "public"
          },
          {
            "id": 1173,
            "nodeType": "VariableDeclaration",
            "src": "844:37:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f7e4755",
            "mutability": "mutable",
            "name": "roundMap",
            "nameLocation": "873:8:8",
            "scope": 1461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
              "typeString": "mapping(uint8 => struct TusimaAirDrop.Round)"
            },
            "typeName": {
              "id": 1172,
              "keyType": {
                "id": 1169,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "852:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "844:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                "typeString": "mapping(uint8 => struct TusimaAirDrop.Round)"
              },
              "valueType": {
                "id": 1171,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1170,
                  "name": "Round",
                  "nameLocations": [
                    "859:5:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1168,
                  "src": "859:5:8"
                },
                "referencedDeclaration": 1168,
                "src": "859:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Round_$1168_storage_ptr",
                  "typeString": "struct TusimaAirDrop.Round"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1179,
            "nodeType": "VariableDeclaration",
            "src": "887:54:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "fbb905e3",
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "934:7:8",
            "scope": 1461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint8 => bool))"
            },
            "typeName": {
              "id": 1178,
              "keyType": {
                "id": 1174,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "895:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "887:39:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint8 => bool))"
              },
              "valueType": {
                "id": 1177,
                "keyType": {
                  "id": 1175,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "913:5:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "905:20:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
                  "typeString": "mapping(uint8 => bool)"
                },
                "valueType": {
                  "id": 1176,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1187,
            "nodeType": "FunctionDefinition",
            "src": "1001:53:8",
            "nodes": [],
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "1015:39:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1183,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9004,
                      "src": "1025:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:22:8"
                }
              ]
            },
            "documentation": {
              "id": 1180,
              "nodeType": "StructuredDocumentation",
              "src": "948:48:8",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:8"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1195,
            "nodeType": "EventDefinition",
            "src": "1064:58:8",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5e608c4a23ae45337ff2643849d5c5476d2cfebef71a51e83dae8bb5123add31",
            "name": "Claim",
            "nameLocation": "1070:5:8",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "1082:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "1076:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1097:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "1089:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1114:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "1106:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:46:8"
            }
          },
          {
            "id": 1207,
            "nodeType": "FunctionDefinition",
            "src": "1128:108:8",
            "nodes": [],
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "1169:67:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1200,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8384,
                      "src": "1179:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:16:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1203,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9041,
                      "src": "1205:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:24:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:24:8"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1197,
                  "name": "initializer",
                  "nameLocations": [
                    "1157:11:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8925,
                  "src": "1157:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1157:11:8"
              }
            ],
            "name": "initialize",
            "nameLocation": "1137:10:8",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:2:8"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1216,
            "nodeType": "FunctionDefinition",
            "src": "1242:66:8",
            "nodes": [],
            "body": {
              "id": 1215,
              "nodeType": "Block",
              "src": "1306:2:8",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9153
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1212,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1296:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "1296:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1296:9:8"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "1251:17:8",
            "overrides": {
              "id": 1211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1287:8:8"
            },
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1269:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1268:9:8"
            },
            "returnParameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1250,
            "nodeType": "FunctionDefinition",
            "src": "1314:235:8",
            "nodes": [],
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "1381:168:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1226,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1399:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1405:9:8",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1399:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1228,
                              "name": "roundMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "1417:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                                "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                              }
                            },
                            "id": 1230,
                            "indexExpression": {
                              "id": 1229,
                              "name": "currRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "1426:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1417:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1168_storage",
                              "typeString": "struct TusimaAirDrop.Round storage ref"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1437:3:8",
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1417:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1399:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f7420637265617465206e657720726f756e64",
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1442:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34f1cfdaead323b02e270e550675a66c8510568d9a3675b08af939f84dcc8305",
                          "typeString": "literal_string \"cannot create new round\""
                        },
                        "value": "cannot create new round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34f1cfdaead323b02e270e550675a66c8510568d9a3675b08af939f84dcc8305",
                          "typeString": "literal_string \"cannot create new round\""
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1391:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1391:77:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:77:8"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1236,
                      "name": "currRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "1478:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1491:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1478:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:14:8"
                },
                {
                  "expression": {
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1240,
                        "name": "roundMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "1502:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                          "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                        }
                      },
                      "id": 1242,
                      "indexExpression": {
                        "id": 1241,
                        "name": "currRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "1511:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1502:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Round_$1168_storage",
                        "typeString": "struct TusimaAirDrop.Round storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1244,
                          "name": "_star",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1218,
                          "src": "1530:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1245,
                          "name": "_end",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "1537:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1243,
                        "name": "Round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "1524:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Round_$1168_storage_ptr_$",
                          "typeString": "type(struct TusimaAirDrop.Round storage pointer)"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Round_$1168_memory_ptr",
                        "typeString": "struct TusimaAirDrop.Round memory"
                      }
                    },
                    "src": "1502:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Round_$1168_storage",
                      "typeString": "struct TusimaAirDrop.Round storage ref"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:40:8"
                }
              ]
            },
            "functionSelector": "54681847",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1222,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1370:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "1370:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:11:8"
              }
            ],
            "name": "newRound",
            "nameLocation": "1323:8:8",
            "parameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_star",
                  "nameLocation": "1340:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "1332:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "_end",
                  "nameLocation": "1355:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "1347:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:29:8"
            },
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1289,
            "nodeType": "FunctionDefinition",
            "src": "1555:250:8",
            "nodes": [],
            "body": {
              "id": 1288,
              "nodeType": "Block",
              "src": "1626:179:8",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "round",
                      "nameLocation": "1642:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1288,
                      "src": "1636:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1636:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1262,
                  "initialValue": {
                    "id": 1261,
                    "name": "currRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1159,
                    "src": "1650:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1636:23:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1264,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "1677:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1686:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1677:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1267,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "1691:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1268,
                            "name": "_end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "1700:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1691:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1677:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420726f756e64",
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1706:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2753af8d04efa82a00d6f5a649f72d30f7161e7056cacf7059a64d7ee092e835",
                          "typeString": "literal_string \"invalid round\""
                        },
                        "value": "invalid round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2753af8d04efa82a00d6f5a649f72d30f7161e7056cacf7059a64d7ee092e835",
                          "typeString": "literal_string \"invalid round\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1669:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:53:8"
                },
                {
                  "expression": {
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1274,
                          "name": "roundMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "1732:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                            "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                          }
                        },
                        "id": 1276,
                        "indexExpression": {
                          "id": 1275,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "1741:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1732:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$1168_storage",
                          "typeString": "struct TusimaAirDrop.Round storage ref"
                        }
                      },
                      "id": 1277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1748:5:8",
                      "memberName": "start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1165,
                      "src": "1732:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1278,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "1756:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1732:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:30:8"
                },
                {
                  "expression": {
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1281,
                          "name": "roundMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "1772:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                            "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                          }
                        },
                        "id": 1283,
                        "indexExpression": {
                          "id": 1282,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "1781:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1772:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$1168_storage",
                          "typeString": "struct TusimaAirDrop.Round storage ref"
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1788:3:8",
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1167,
                      "src": "1772:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1285,
                      "name": "_end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "1794:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1772:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:26:8"
                }
              ]
            },
            "functionSelector": "6a5fcfdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1256,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1615:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "1615:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1615:11:8"
              }
            ],
            "name": "updateRound",
            "nameLocation": "1564:11:8",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "_start",
                  "nameLocation": "1584:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1289,
                  "src": "1576:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_end",
                  "nameLocation": "1600:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1289,
                  "src": "1592:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:30:8"
            },
            "returnParameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1626:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1301,
            "nodeType": "FunctionDefinition",
            "src": "1811:108:8",
            "nodes": [],
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "1878:41:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1296,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "1888:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1297,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "1901:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1888:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:24:8"
                }
              ]
            },
            "functionSelector": "4783f0ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1293,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1867:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "1867:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1867:11:8"
              }
            ],
            "name": "updateMerkleRoot",
            "nameLocation": "1820:16:8",
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "1845:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "1837:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1836:21:8"
            },
            "returnParameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1878:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1381,
            "nodeType": "FunctionDefinition",
            "src": "1925:631:8",
            "nodes": [],
            "body": {
              "id": 1380,
              "nodeType": "Block",
              "src": "1998:558:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1310,
                                "name": "roundMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1173,
                                "src": "2029:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                                  "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                                }
                              },
                              "id": 1312,
                              "indexExpression": {
                                "id": 1311,
                                "name": "currRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1159,
                                "src": "2038:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2029:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1168_storage",
                                "typeString": "struct TusimaAirDrop.Round storage ref"
                              }
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2049:5:8",
                            "memberName": "start",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1165,
                            "src": "2029:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1314,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2058:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2064:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2058:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2029:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1317,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2090:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2096:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2090:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1319,
                                "name": "roundMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1173,
                                "src": "2109:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                                  "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                                }
                              },
                              "id": 1321,
                              "indexExpression": {
                                "id": 1320,
                                "name": "currRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1159,
                                "src": "2118:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2109:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$1168_storage",
                                "typeString": "struct TusimaAirDrop.Round storage ref"
                              }
                            },
                            "id": 1322,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2129:3:8",
                            "memberName": "end",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1167,
                            "src": "2109:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2090:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2029:103:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e672074696d65",
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2147:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54b4e36de650f47bc69d98c313761d66bef1c1a90d86e9c0683ba8e8cea8dda7",
                          "typeString": "literal_string \"wrong time\""
                        },
                        "value": "wrong time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54b4e36de650f47bc69d98c313761d66bef1c1a90d86e9c0683ba8e8cea8dda7",
                          "typeString": "literal_string \"wrong time\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2008:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2008:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1327,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:161:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2187:31:8",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1329,
                              "name": "claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "2188:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint8 => bool))"
                              }
                            },
                            "id": 1332,
                            "indexExpression": {
                              "expression": {
                                "id": 1330,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2196:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2200:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2196:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2188:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
                              "typeString": "mapping(uint8 => bool)"
                            }
                          },
                          "id": 1334,
                          "indexExpression": {
                            "id": 1333,
                            "name": "currRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "2208:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2188:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320616c726561647920636c61696d6564",
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2220:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
                          "typeString": "literal_string \"Address already claimed\""
                        },
                        "value": "Address already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
                          "typeString": "literal_string \"Address already claimed\""
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2179:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:67:8"
                },
                {
                  "assignments": [
                    1340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "2265:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1380,
                      "src": "2257:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1339,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2257:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1346,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2278:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2282:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2278:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1344,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "2290:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1341,
                      "name": "_leaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1442,
                      "src": "2272:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2257:41:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1349,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2324:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1350,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "2330:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          ],
                          "id": 1348,
                          "name": "_verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1460,
                          "src": "2316:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes32[] memory) view returns (bool)"
                          }
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:27:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c652070726f6f66",
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2345:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410",
                          "typeString": "literal_string \"Invalid merkle proof\""
                        },
                        "value": "Invalid merkle proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410",
                          "typeString": "literal_string \"Invalid merkle proof\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2308:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:60:8"
                },
                {
                  "expression": {
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1355,
                          "name": "claimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "2387:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint8 => bool))"
                          }
                        },
                        "id": 1359,
                        "indexExpression": {
                          "expression": {
                            "id": 1356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2395:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2399:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2395:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2387:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
                          "typeString": "mapping(uint8 => bool)"
                        }
                      },
                      "id": 1360,
                      "indexExpression": {
                        "id": 1358,
                        "name": "currRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "2407:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2387:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2420:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2387:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1368,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2476:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2480:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2476:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1370,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "2488:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1365,
                            "name": "tokenAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "2452:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1364,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "2434:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$9237_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:28:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$9237",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2463:12:8",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9306,
                      "src": "2434:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$9237_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$9237_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:62:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1374,
                        "name": "currRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "2518:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2529:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2533:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2529:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "2541:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1373,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "2512:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,uint256)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2512:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "EmitStatement",
                  "src": "2507:42:8"
                }
              ]
            },
            "functionSelector": "3b439351",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1934:5:8",
            "parameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "1959:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "1940:31:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1302,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1940:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1303,
                    "nodeType": "ArrayTypeName",
                    "src": "1940:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1980:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "1972:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1939:49:8"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1393,
            "nodeType": "FunctionDefinition",
            "src": "2562:107:8",
            "nodes": [],
            "body": {
              "id": 1392,
              "nodeType": "Block",
              "src": "2627:42:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1388,
                      "name": "tokenAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "2637:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1389,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "2649:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2637:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1391,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:25:8"
                }
              ]
            },
            "functionSelector": "2ebd1e28",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1385,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2616:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "2616:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2616:11:8"
              }
            ],
            "name": "setTokenAddr",
            "nameLocation": "2571:12:8",
            "parameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2592:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "2584:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2583:23:8"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2627:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1424,
            "nodeType": "FunctionDefinition",
            "src": "2675:255:8",
            "nodes": [],
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2775:155:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1405,
                              "name": "roundMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "2793:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Round_$1168_storage_$",
                                "typeString": "mapping(uint8 => struct TusimaAirDrop.Round storage ref)"
                              }
                            },
                            "id": 1407,
                            "indexExpression": {
                              "id": 1406,
                              "name": "currRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "2802:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2793:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$1168_storage",
                              "typeString": "struct TusimaAirDrop.Round storage ref"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2813:3:8",
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "2793:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1409,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2819:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2825:9:8",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2819:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2793:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f7420636c61696d",
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2836:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0a8142b8d6b7753bddfa6cbd219b6701ac9a6e7bb2753d7038e774385056c61",
                          "typeString": "literal_string \"cannot claim\""
                        },
                        "value": "cannot claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0a8142b8d6b7753bddfa6cbd219b6701ac9a6e7bb2753d7038e774385056c61",
                          "typeString": "literal_string \"cannot claim\""
                        }
                      ],
                      "id": 1404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2785:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1419,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1397,
                        "src": "2904:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1420,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "2915:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1416,
                            "name": "_tokenAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "2879:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1415,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "2861:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$9237_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2861:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$9237",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2891:12:8",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9306,
                      "src": "2861:42:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$9237_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$9237_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:62:8"
                }
              ]
            },
            "functionSelector": "10b20274",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1402,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1401,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2764:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8403,
                  "src": "2764:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2764:11:8"
              }
            ],
            "name": "tokenClaimBack",
            "nameLocation": "2684:14:8",
            "parameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "_tokenAddr",
                  "nameLocation": "2707:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2699:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1397,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "2727:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2719:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2746:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2738:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2698:56:8"
            },
            "returnParameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2775:0:8"
            },
            "scope": 1461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1442,
            "nodeType": "FunctionDefinition",
            "src": "2940:145:8",
            "nodes": [],
            "body": {
              "id": 1441,
              "nodeType": "Block",
              "src": "3018:67:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1436,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "3062:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1437,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "3070:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1434,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3045:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3049:12:8",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3045:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3045:32:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1433,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3035:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1432,
                  "id": 1440,
                  "nodeType": "Return",
                  "src": "3028:50:8"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_leaf",
            "nameLocation": "2949:5:8",
            "parameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1426,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2963:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "2955:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2955:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1428,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2979:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "2971:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2954:32:8"
            },
            "returnParameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "3010:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:9:8"
            },
            "scope": 1461,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1460,
            "nodeType": "FunctionDefinition",
            "src": "3091:161:8",
            "nodes": [],
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "3174:78:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1454,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "3221:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 1455,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "3228:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "3240:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1452,
                        "name": "MerkleProofUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10659,
                        "src": "3191:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProofUpgradeable_$10659_$",
                          "typeString": "type(library MerkleProofUpgradeable)"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3214:6:8",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10155,
                      "src": "3191:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1451,
                  "id": 1458,
                  "nodeType": "Return",
                  "src": "3184:61:8"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verify",
            "nameLocation": "3100:7:8",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "3116:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "3108:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3139:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "3122:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1445,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3122:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1446,
                    "nodeType": "ArrayTypeName",
                    "src": "3122:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:38:8"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "3169:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3168:6:8"
            },
            "scope": 1461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1148,
              "name": "Initializable",
              "nameLocations": [
                "576:13:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9023,
              "src": "576:13:8"
            },
            "id": 1149,
            "nodeType": "InheritanceSpecifier",
            "src": "576:13:8"
          },
          {
            "baseName": {
              "id": 1150,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "590:18:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8489,
              "src": "590:18:8"
            },
            "id": 1151,
            "nodeType": "InheritanceSpecifier",
            "src": "590:18:8"
          },
          {
            "baseName": {
              "id": 1152,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "609:15:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9159,
              "src": "609:15:8"
            },
            "id": 1153,
            "nodeType": "InheritanceSpecifier",
            "src": "609:15:8"
          }
        ],
        "canonicalName": "TusimaAirDrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1461,
          9159,
          8844,
          8510,
          8520,
          8489,
          10021,
          9023
        ],
        "name": "TusimaAirDrop",
        "nameLocation": "559:13:8",
        "scope": 1462,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 8
}