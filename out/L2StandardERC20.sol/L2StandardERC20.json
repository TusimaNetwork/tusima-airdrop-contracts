{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "BurnEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldL1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newL1Token",
          "type": "address"
        }
      ],
      "name": "L1TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldL2Bridge",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newL2Bridge",
          "type": "address"
        }
      ],
      "name": "L2BridgeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "L2BRIDGE_INFO_STORAGE_POSITION",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFERRER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supplyCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newL1Token",
          "type": "address"
        }
      ],
      "name": "setL1Token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newL2Bridge",
          "type": "address"
        }
      ],
      "name": "setL2Bridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferrable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6125d580620000f36000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c806363ac5d9711610146578063a457c2d7116100c3578063d539139311610087578063d53913931461050b578063d547741f14610532578063dd62ed3e14610545578063e055704514610558578063e63ab1e91461056d578063f1b50c1d1461058257600080fd5b8063a457c2d71461047b578063a9059cbb1461048e578063ae1f6aaf146104a1578063b187984f146104e5578063c01e1bd6146104ed57600080fd5b806394c36f991161010a57806394c36f991461043957806395d89b411461044c5780639dc29fac14610454578063a07c7ce414610467578063a217fddf1461047357600080fd5b806363ac5d97146103e357806370a08231146103f857806379cc67901461040b5780638456cb591461041e57806391d148541461042657600080fd5b8063313ce567116101df5780633d36d971116101a35780633d36d971146103845780633f4ba83a1461039757806340c10f191461039f57806342966c68146103b25780634d12d4b6146103c55780635c975abb146103d857600080fd5b8063313ce5671461033e578063355274ea1461034d57806336568abe1461035657806339509351146103695780633b37d1d61461037c57600080fd5b806323b872dd1161022657806323b872dd146102d65780632403c08e146102e9578063248a9ca3146102f3578063282c51f3146103165780632f2ff15d1461032b57600080fd5b806301ffc9a714610263578063047a7ef11461028b57806306fdde031461029c578063095ea7b3146102b157806318160ddd146102c4575b600080fd5b610276610271366004611f7a565b61058a565b60405190151581526020015b60405180910390f35b61016054610100900460ff16610276565b6102a46105eb565b6040516102829190611fc8565b6102766102bf366004612017565b6105fa565b6035545b604051908152602001610282565b6102766102e4366004612041565b610612565b6102f1610677565b005b6102c861030136600461207d565b600090815260fb602052604090206001015490565b6102c860008051602061252083398151915281565b6102f1610339366004612096565b61071f565b60405160128152602001610282565b61012d546102c8565b6102f1610364366004612096565b610749565b610276610377366004612017565b6107c7565b6102f16107e9565b6102f16103923660046120c2565b61085d565b6102f16109dd565b6102f16103ad366004612017565b610a00565b6102f16103c036600461207d565b610a7c565b6102f16103d3366004612180565b610ac7565b60975460ff16610276565b6102c860008051602061254083398151915281565b6102c86104063660046120c2565b610de4565b6102f1610419366004612017565b610e02565b6102f1610e4e565b610276610434366004612096565b610e6e565b6102f16104473660046120c2565b610e99565b6102a4610ff3565b6102f1610462366004612017565b611085565b6101605460ff16610276565b6102c8600081565b610276610489366004612017565b6110e2565b61027661049c366004612017565b611168565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e3546001600160a01b03165b6040516001600160a01b039091168152602001610282565b6102f16111c2565b600080516020612580833981519152546001600160a01b03166104cd565b6102c87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102f1610540366004612096565b61126e565b6102c86105533660046121fc565b611293565b6102c860008051602061258083398151915281565b6102c860008051602061256083398151915281565b6102f16112be565b60006001600160e01b03198216631d1d8b6360e01b14806105bb57506001600160e01b031982166301ffc9a760e01b145b806105d657506001600160e01b0319821663ae1f6aaf60e01b145b806105e557506105e582611345565b92915050565b60606105f5611350565b905090565b60003361060881858561135f565b5060019392505050565b600061062c60008051602061254083398151915233610e6e565b8061063f575061016054610100900460ff165b6106645760405162461bcd60e51b815260040161065b90612226565b60405180910390fd5b61066f848484611483565b949350505050565b60006106828161149c565b61069a60008051602061252083398151915233610e6e565b806106a857506101605460ff165b6106c45760405162461bcd60e51b815260040161065b9061226b565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b600082815260fb602052604090206001015461073a8161149c565b61074483836114a6565b505050565b6001600160a01b03811633146107b95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161065b565b6107c3828261152c565b5050565b6000336106088185856107da8383611293565b6107e491906122b8565b61135f565b60006107f48161149c565b6101605460ff16156108485760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c656400000000604482015260640161065b565b610160805460ff191660011790556106d13390565b60006108688161149c565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e3546001600160a01b039081169083168190036108fc5760405162461bcd60e51b815260206004820152602c60248201527f4c325374616e6461726445524332303a204c32206272696467652076616c756560448201526b206d757374206368616e676560a01b606482015260840161065b565b6001600160a01b03831661096c5760405162461bcd60e51b815260206004820152603160248201527f4c325374616e6461726445524332303a204c32206272696467652063616e6e6f60448201527074206265207a65726f206164647265737360781b606482015260840161065b565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e380546001600160a01b0319166001600160a01b0385811691821790925560405190918316907ffbeaf70015f6ad12833bc6726f03af9bb91a7ee52827c6413c6c250c77854c9590600090a3505050565b6000805160206125608339815191526109f58161149c565b6109fd611593565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a2a8161149c565b610a3483836115e5565b826001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583604051610a6f91815260200190565b60405180910390a2505050565b610a9460008051602061252083398151915233610e6e565b80610aa257506101605460ff165b610abe5760405162461bcd60e51b815260040161065b9061226b565b6109fd816115ef565b600054610100900460ff1615808015610ae75750600054600160ff909116105b80610b015750303b158015610b01575060005460ff166001145b610b645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161065b565b6000805460ff191660011790558015610b87576000805461ff0019166101001790555b6001600160a01b038516610bdd5760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f00000000604482015260640161065b565b6040805160208082015260009181018290526060016040516020818303038152906040528051906020012090508085604051602001610c1c9190611fc8565b6040516020818303038152906040528051906020012003610c8d5760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b606482015260840161065b565b8084604051602001610c9f9190611fc8565b6040516020818303038152906040528051906020012003610d125760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b606482015260840161065b565b610d1a6115f9565b610d226115f9565b610d2b83611622565b610d358585611652565b610d3d611683565b610d486000876114a6565b610d727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876114a6565b610d8a600080516020612560833981519152876114a6565b50610160805461ffff191690558015610ddd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0381166000908152603360205260408120546105e5565b610e1a60008051602061252083398151915233610e6e565b80610e2857506101605460ff165b610e445760405162461bcd60e51b815260040161065b9061226b565b6107c382826116b2565b600080516020612560833981519152610e668161149c565b6109fd6116c7565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610ea48161149c565b600080516020612580833981519152546001600160a01b03908116908316819003610f255760405162461bcd60e51b815260206004820152602b60248201527f4c325374616e6461726445524332303a204c3120746f6b656e2076616c75652060448201526a6d757374206368616e676560a81b606482015260840161065b565b6001600160a01b038316610f945760405162461bcd60e51b815260206004820152603060248201527f4c325374616e6461726445524332303a204c3120746f6b656e2063616e6e6f7460448201526f206265207a65726f206164647265737360801b606482015260840161065b565b8260008051602061258083398151915280546001600160a01b0319166001600160a01b03928316179055604051848216918316907f2c718543b67feaa6cc2f7d2e8a80d03b83ac2441e0d84ee2defc766f137e234590600090a3505050565b606060378054611002906122cb565b80601f016020809104026020016040519081016040528092919081815260200182805461102e906122cb565b801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b5050505050905090565b60008051602061252083398151915261109d8161149c565b6110a78383611704565b826001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca583604051610a6f91815260200190565b600033816110f08286611293565b9050838110156111505760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161065b565b61115d828686840361135f565b506001949350505050565b600061118260008051602061254083398151915233610e6e565b80611195575061016054610100900460ff165b6111b15760405162461bcd60e51b815260040161065b90612226565b6111bb8383611844565b9392505050565b60006111cd8161149c565b6111e560008051602061254083398151915233610e6e565b806111f8575061016054610100900460ff165b6112145760405162461bcd60e51b815260040161065b90612226565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff16604051610714911515815260200190565b600082815260fb60205260409020600101546112898161149c565b610744838361152c565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006112c98161149c565b61016054610100900460ff161561132e5760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b606482015260840161065b565b610160805461ff0019166101001790556112223390565b60006105e582611852565b606060368054611002906122cb565b6001600160a01b0383166113c15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161065b565b6001600160a01b0382166114225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161065b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600033611491858285611887565b61115d858585611901565b6109fd8133611ab7565b6114b08282610e6e565b6107c357600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556114e83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6115368282610e6e565b156107c357600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61159b611b10565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6107c38282611b59565b6109fd3382611704565b600054610100900460ff166116205760405162461bcd60e51b815260040161065b90612305565b565b600054610100900460ff166116495760405162461bcd60e51b815260040161065b90612305565b6109fd81611bc9565b600054610100900460ff166116795760405162461bcd60e51b815260040161065b90612305565b6107c38282611c3e565b600054610100900460ff166116aa5760405162461bcd60e51b815260040161065b90612305565b611620611c7e565b6116bd823383611887565b6107c38282611704565b6116cf611cb1565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115c83390565b6001600160a01b0382166117645760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161065b565b61177082600083611cf7565b6001600160a01b038216600090815260336020526040902054818110156117e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161065b565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600033610608818585611901565b60006001600160e01b03198216637965db0b60e01b14806105e557506301ffc9a760e01b6001600160e01b03198316146105e5565b60006118938484611293565b905060001981146118fb57818110156118ee5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065b565b6118fb848484840361135f565b50505050565b6001600160a01b0383166119655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161065b565b6001600160a01b0382166119c75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161065b565b6119d2838383611cf7565b6001600160a01b03831660009081526033602052604090205481811015611a4a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161065b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611aaa9086815260200190565b60405180910390a36118fb565b611ac18282610e6e565b6107c357611ace81611cff565b611ad9836020611d11565b604051602001611aea929190612350565b60408051601f198184030181529082905262461bcd60e51b825261065b91600401611fc8565b60975460ff166116205760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161065b565b61012d5481611b6760355490565b611b7191906122b8565b1115611bbf5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015260640161065b565b6107c38282611ead565b600054610100900460ff16611bf05760405162461bcd60e51b815260040161065b90612305565b60008111611c385760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b604482015260640161065b565b61012d55565b600054610100900460ff16611c655760405162461bcd60e51b815260040161065b90612305565b6036611c718382612413565b5060376107448282612413565b600054610100900460ff16611ca55760405162461bcd60e51b815260040161065b90612305565b6097805460ff19169055565b60975460ff16156116205760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161065b565b610744611cb1565b60606105e56001600160a01b03831660145b60606000611d208360026124d3565b611d2b9060026122b8565b67ffffffffffffffff811115611d4357611d436120dd565b6040519080825280601f01601f191660200182016040528015611d6d576020820181803683370190505b509050600360fc1b81600081518110611d8857611d886124f2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611db757611db76124f2565b60200101906001600160f81b031916908160001a9053506000611ddb8460026124d3565b611de69060016122b8565b90505b6001811115611e5e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e1a57611e1a6124f2565b1a60f81b828281518110611e3057611e306124f2565b60200101906001600160f81b031916908160001a90535060049490941c93611e5781612508565b9050611de9565b5083156111bb5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161065b565b6001600160a01b038216611f035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161065b565b611f0f60008383611cf7565b8060356000828254611f2191906122b8565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208284031215611f8c57600080fd5b81356001600160e01b0319811681146111bb57600080fd5b60005b83811015611fbf578181015183820152602001611fa7565b50506000910152565b6020815260008251806020840152611fe7816040850160208701611fa4565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461201257600080fd5b919050565b6000806040838503121561202a57600080fd5b61203383611ffb565b946020939093013593505050565b60008060006060848603121561205657600080fd5b61205f84611ffb565b925061206d60208501611ffb565b9150604084013590509250925092565b60006020828403121561208f57600080fd5b5035919050565b600080604083850312156120a957600080fd5b823591506120b960208401611ffb565b90509250929050565b6000602082840312156120d457600080fd5b6111bb82611ffb565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261210457600080fd5b813567ffffffffffffffff8082111561211f5761211f6120dd565b604051601f8301601f19908116603f01168101908282118183101715612147576121476120dd565b8160405283815286602085880101111561216057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561219657600080fd5b61219f85611ffb565b9350602085013567ffffffffffffffff808211156121bc57600080fd5b6121c8888389016120f3565b945060408701359150808211156121de57600080fd5b506121eb878288016120f3565b949793965093946060013593505050565b6000806040838503121561220f57600080fd5b61221883611ffb565b91506120b960208401611ffb565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105e5576105e56122a2565b600181811c908216806122df57607f821691505b6020821081036122ff57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612388816017850160208801611fa4565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123b9816028840160208801611fa4565b01602801949350505050565b601f82111561074457600081815260208120601f850160051c810160208610156123ec5750805b601f850160051c820191505b8181101561240b578281556001016123f8565b505050505050565b815167ffffffffffffffff81111561242d5761242d6120dd565b6124418161243b84546122cb565b846123c5565b602080601f831160018114612476576000841561245e5750858301515b600019600386901b1c1916600185901b17855561240b565b600085815260208120601f198616915b828110156124a557888601518255948401946001909101908401612486565b50858210156124c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008160001904831182151516156124ed576124ed6122a2565b500290565b634e487b7160e01b600052603260045260246000fd5b600081612517576125176122a2565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e2a2646970667358221220e2b5374844a7d7b18502a07dfb184522a87be7c28347761e3bc6f38808c1d4e064736f6c63430008100033",
    "sourceMap": "559:3346:29:-:0;;;;;;;;;;;;-1:-1:-1;2661:22:26;:20;:22::i;:::-;559:3346:29;;5939:280:36;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:36;;216:2:73;5998:66:36;;;198:21:73;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:73;;;338:37;392:19;;5998:66:36;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:36;6140:15;6125:30;;;;;;6174:28;;564:36:73;;;6174:28:36;;552:2:73;537:18;6174:28:36;;;;;;;6074:139;5939:280::o;422:184:73:-;559:3346:29;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061025e5760003560e01c806363ac5d9711610146578063a457c2d7116100c3578063d539139311610087578063d53913931461050b578063d547741f14610532578063dd62ed3e14610545578063e055704514610558578063e63ab1e91461056d578063f1b50c1d1461058257600080fd5b8063a457c2d71461047b578063a9059cbb1461048e578063ae1f6aaf146104a1578063b187984f146104e5578063c01e1bd6146104ed57600080fd5b806394c36f991161010a57806394c36f991461043957806395d89b411461044c5780639dc29fac14610454578063a07c7ce414610467578063a217fddf1461047357600080fd5b806363ac5d97146103e357806370a08231146103f857806379cc67901461040b5780638456cb591461041e57806391d148541461042657600080fd5b8063313ce567116101df5780633d36d971116101a35780633d36d971146103845780633f4ba83a1461039757806340c10f191461039f57806342966c68146103b25780634d12d4b6146103c55780635c975abb146103d857600080fd5b8063313ce5671461033e578063355274ea1461034d57806336568abe1461035657806339509351146103695780633b37d1d61461037c57600080fd5b806323b872dd1161022657806323b872dd146102d65780632403c08e146102e9578063248a9ca3146102f3578063282c51f3146103165780632f2ff15d1461032b57600080fd5b806301ffc9a714610263578063047a7ef11461028b57806306fdde031461029c578063095ea7b3146102b157806318160ddd146102c4575b600080fd5b610276610271366004611f7a565b61058a565b60405190151581526020015b60405180910390f35b61016054610100900460ff16610276565b6102a46105eb565b6040516102829190611fc8565b6102766102bf366004612017565b6105fa565b6035545b604051908152602001610282565b6102766102e4366004612041565b610612565b6102f1610677565b005b6102c861030136600461207d565b600090815260fb602052604090206001015490565b6102c860008051602061252083398151915281565b6102f1610339366004612096565b61071f565b60405160128152602001610282565b61012d546102c8565b6102f1610364366004612096565b610749565b610276610377366004612017565b6107c7565b6102f16107e9565b6102f16103923660046120c2565b61085d565b6102f16109dd565b6102f16103ad366004612017565b610a00565b6102f16103c036600461207d565b610a7c565b6102f16103d3366004612180565b610ac7565b60975460ff16610276565b6102c860008051602061254083398151915281565b6102c86104063660046120c2565b610de4565b6102f1610419366004612017565b610e02565b6102f1610e4e565b610276610434366004612096565b610e6e565b6102f16104473660046120c2565b610e99565b6102a4610ff3565b6102f1610462366004612017565b611085565b6101605460ff16610276565b6102c8600081565b610276610489366004612017565b6110e2565b61027661049c366004612017565b611168565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e3546001600160a01b03165b6040516001600160a01b039091168152602001610282565b6102f16111c2565b600080516020612580833981519152546001600160a01b03166104cd565b6102c87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102f1610540366004612096565b61126e565b6102c86105533660046121fc565b611293565b6102c860008051602061258083398151915281565b6102c860008051602061256083398151915281565b6102f16112be565b60006001600160e01b03198216631d1d8b6360e01b14806105bb57506001600160e01b031982166301ffc9a760e01b145b806105d657506001600160e01b0319821663ae1f6aaf60e01b145b806105e557506105e582611345565b92915050565b60606105f5611350565b905090565b60003361060881858561135f565b5060019392505050565b600061062c60008051602061254083398151915233610e6e565b8061063f575061016054610100900460ff165b6106645760405162461bcd60e51b815260040161065b90612226565b60405180910390fd5b61066f848484611483565b949350505050565b60006106828161149c565b61069a60008051602061252083398151915233610e6e565b806106a857506101605460ff165b6106c45760405162461bcd60e51b815260040161065b9061226b565b610160805460ff19169055335b6101605460405160ff909116151581526001600160a01b0391909116907f373d051cc9c39a097512f5befac8840dd3395ef720e43a8d0f62d1756e0bb924906020015b60405180910390a250565b600082815260fb602052604090206001015461073a8161149c565b61074483836114a6565b505050565b6001600160a01b03811633146107b95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161065b565b6107c3828261152c565b5050565b6000336106088185856107da8383611293565b6107e491906122b8565b61135f565b60006107f48161149c565b6101605460ff16156108485760405162461bcd60e51b815260206004820152601c60248201527f4275726e61626c653a206275726e696e6720697320656e61626c656400000000604482015260640161065b565b610160805460ff191660011790556106d13390565b60006108688161149c565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e3546001600160a01b039081169083168190036108fc5760405162461bcd60e51b815260206004820152602c60248201527f4c325374616e6461726445524332303a204c32206272696467652076616c756560448201526b206d757374206368616e676560a01b606482015260840161065b565b6001600160a01b03831661096c5760405162461bcd60e51b815260206004820152603160248201527f4c325374616e6461726445524332303a204c32206272696467652063616e6e6f60448201527074206265207a65726f206164647265737360781b606482015260840161065b565b7f28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e380546001600160a01b0319166001600160a01b0385811691821790925560405190918316907ffbeaf70015f6ad12833bc6726f03af9bb91a7ee52827c6413c6c250c77854c9590600090a3505050565b6000805160206125608339815191526109f58161149c565b6109fd611593565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a2a8161149c565b610a3483836115e5565b826001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583604051610a6f91815260200190565b60405180910390a2505050565b610a9460008051602061252083398151915233610e6e565b80610aa257506101605460ff165b610abe5760405162461bcd60e51b815260040161065b9061226b565b6109fd816115ef565b600054610100900460ff1615808015610ae75750600054600160ff909116105b80610b015750303b158015610b01575060005460ff166001145b610b645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161065b565b6000805460ff191660011790558015610b87576000805461ff0019166101001790555b6001600160a01b038516610bdd5760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20616464726573732063616e6e6f74206265207a65726f00000000604482015260640161065b565b6040805160208082015260009181018290526060016040516020818303038152906040528051906020012090508085604051602001610c1c9190611fc8565b6040516020818303038152906040528051906020012003610c8d5760405162461bcd60e51b815260206004820152602560248201527f4552433230426173653a20546f6b656e206e616d652063616e6e6f7420626520604482015264656d70747960d81b606482015260840161065b565b8084604051602001610c9f9190611fc8565b6040516020818303038152906040528051906020012003610d125760405162461bcd60e51b815260206004820152602760248201527f4552433230426173653a20546f6b656e2073796d626f6c2063616e6e6f7420626044820152666520656d70747960c81b606482015260840161065b565b610d1a6115f9565b610d226115f9565b610d2b83611622565b610d358585611652565b610d3d611683565b610d486000876114a6565b610d727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876114a6565b610d8a600080516020612560833981519152876114a6565b50610160805461ffff191690558015610ddd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b0381166000908152603360205260408120546105e5565b610e1a60008051602061252083398151915233610e6e565b80610e2857506101605460ff165b610e445760405162461bcd60e51b815260040161065b9061226b565b6107c382826116b2565b600080516020612560833981519152610e668161149c565b6109fd6116c7565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610ea48161149c565b600080516020612580833981519152546001600160a01b03908116908316819003610f255760405162461bcd60e51b815260206004820152602b60248201527f4c325374616e6461726445524332303a204c3120746f6b656e2076616c75652060448201526a6d757374206368616e676560a81b606482015260840161065b565b6001600160a01b038316610f945760405162461bcd60e51b815260206004820152603060248201527f4c325374616e6461726445524332303a204c3120746f6b656e2063616e6e6f7460448201526f206265207a65726f206164647265737360801b606482015260840161065b565b8260008051602061258083398151915280546001600160a01b0319166001600160a01b03928316179055604051848216918316907f2c718543b67feaa6cc2f7d2e8a80d03b83ac2441e0d84ee2defc766f137e234590600090a3505050565b606060378054611002906122cb565b80601f016020809104026020016040519081016040528092919081815260200182805461102e906122cb565b801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b5050505050905090565b60008051602061252083398151915261109d8161149c565b6110a78383611704565b826001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca583604051610a6f91815260200190565b600033816110f08286611293565b9050838110156111505760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161065b565b61115d828686840361135f565b506001949350505050565b600061118260008051602061254083398151915233610e6e565b80611195575061016054610100900460ff165b6111b15760405162461bcd60e51b815260040161065b90612226565b6111bb8383611844565b9392505050565b60006111cd8161149c565b6111e560008051602061254083398151915233610e6e565b806111f8575061016054610100900460ff165b6112145760405162461bcd60e51b815260040161065b90612226565b610160805461ff0019169055335b6001600160a01b03167f750bc2ec2b9643783080f064b960113af5a2a708345c7e3cf509ca7fec55e24461016060019054906101000a900460ff16604051610714911515815260200190565b600082815260fb60205260409020600101546112898161149c565b610744838361152c565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006112c98161149c565b61016054610100900460ff161561132e5760405162461bcd60e51b8152602060048201526024808201527f5472616e736665727261626c653a207472616e73666572732061726520656e61604482015263189b195960e21b606482015260840161065b565b610160805461ff0019166101001790556112223390565b60006105e582611852565b606060368054611002906122cb565b6001600160a01b0383166113c15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161065b565b6001600160a01b0382166114225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161065b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600033611491858285611887565b61115d858585611901565b6109fd8133611ab7565b6114b08282610e6e565b6107c357600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556114e83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6115368282610e6e565b156107c357600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61159b611b10565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6107c38282611b59565b6109fd3382611704565b600054610100900460ff166116205760405162461bcd60e51b815260040161065b90612305565b565b600054610100900460ff166116495760405162461bcd60e51b815260040161065b90612305565b6109fd81611bc9565b600054610100900460ff166116795760405162461bcd60e51b815260040161065b90612305565b6107c38282611c3e565b600054610100900460ff166116aa5760405162461bcd60e51b815260040161065b90612305565b611620611c7e565b6116bd823383611887565b6107c38282611704565b6116cf611cb1565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115c83390565b6001600160a01b0382166117645760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161065b565b61177082600083611cf7565b6001600160a01b038216600090815260336020526040902054818110156117e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161065b565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600033610608818585611901565b60006001600160e01b03198216637965db0b60e01b14806105e557506301ffc9a760e01b6001600160e01b03198316146105e5565b60006118938484611293565b905060001981146118fb57818110156118ee5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065b565b6118fb848484840361135f565b50505050565b6001600160a01b0383166119655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161065b565b6001600160a01b0382166119c75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161065b565b6119d2838383611cf7565b6001600160a01b03831660009081526033602052604090205481811015611a4a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161065b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611aaa9086815260200190565b60405180910390a36118fb565b611ac18282610e6e565b6107c357611ace81611cff565b611ad9836020611d11565b604051602001611aea929190612350565b60408051601f198184030181529082905262461bcd60e51b825261065b91600401611fc8565b60975460ff166116205760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161065b565b61012d5481611b6760355490565b611b7191906122b8565b1115611bbf5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015260640161065b565b6107c38282611ead565b600054610100900460ff16611bf05760405162461bcd60e51b815260040161065b90612305565b60008111611c385760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b604482015260640161065b565b61012d55565b600054610100900460ff16611c655760405162461bcd60e51b815260040161065b90612305565b6036611c718382612413565b5060376107448282612413565b600054610100900460ff16611ca55760405162461bcd60e51b815260040161065b90612305565b6097805460ff19169055565b60975460ff16156116205760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161065b565b610744611cb1565b60606105e56001600160a01b03831660145b60606000611d208360026124d3565b611d2b9060026122b8565b67ffffffffffffffff811115611d4357611d436120dd565b6040519080825280601f01601f191660200182016040528015611d6d576020820181803683370190505b509050600360fc1b81600081518110611d8857611d886124f2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611db757611db76124f2565b60200101906001600160f81b031916908160001a9053506000611ddb8460026124d3565b611de69060016122b8565b90505b6001811115611e5e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e1a57611e1a6124f2565b1a60f81b828281518110611e3057611e306124f2565b60200101906001600160f81b031916908160001a90535060049490941c93611e5781612508565b9050611de9565b5083156111bb5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161065b565b6001600160a01b038216611f035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161065b565b611f0f60008383611cf7565b8060356000828254611f2191906122b8565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208284031215611f8c57600080fd5b81356001600160e01b0319811681146111bb57600080fd5b60005b83811015611fbf578181015183820152602001611fa7565b50506000910152565b6020815260008251806020840152611fe7816040850160208701611fa4565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461201257600080fd5b919050565b6000806040838503121561202a57600080fd5b61203383611ffb565b946020939093013593505050565b60008060006060848603121561205657600080fd5b61205f84611ffb565b925061206d60208501611ffb565b9150604084013590509250925092565b60006020828403121561208f57600080fd5b5035919050565b600080604083850312156120a957600080fd5b823591506120b960208401611ffb565b90509250929050565b6000602082840312156120d457600080fd5b6111bb82611ffb565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261210457600080fd5b813567ffffffffffffffff8082111561211f5761211f6120dd565b604051601f8301601f19908116603f01168101908282118183101715612147576121476120dd565b8160405283815286602085880101111561216057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561219657600080fd5b61219f85611ffb565b9350602085013567ffffffffffffffff808211156121bc57600080fd5b6121c8888389016120f3565b945060408701359150808211156121de57600080fd5b506121eb878288016120f3565b949793965093946060013593505050565b6000806040838503121561220f57600080fd5b61221883611ffb565b91506120b960208401611ffb565b60208082526025908201527f5472616e736665727261626c653a207472616e7366657273206172652064697360408201526418589b195960da1b606082015260800190565b6020808252601d908201527f4275726e61626c653a206275726e696e672069732064697361626c6564000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105e5576105e56122a2565b600181811c908216806122df57607f821691505b6020821081036122ff57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612388816017850160208801611fa4565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123b9816028840160208801611fa4565b01602801949350505050565b601f82111561074457600081815260208120601f850160051c810160208610156123ec5750805b601f850160051c820191505b8181101561240b578281556001016123f8565b505050505050565b815167ffffffffffffffff81111561242d5761242d6120dd565b6124418161243b84546122cb565b846123c5565b602080601f831160018114612476576000841561245e5750858301515b600019600386901b1c1916600185901b17855561240b565b600085815260208120601f198616915b828110156124a557888601518255948401946001909101908401612486565b50858210156124c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008160001904831182151516156124ed576124ed6122a2565b500290565b634e487b7160e01b600052603260045260246000fd5b600081612517576125176122a2565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489c0b3a9882e11a6bfb8283b46d1e79513afb8024ee864cd3a5b3a9050c42a7d765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e2a2646970667358221220e2b5374844a7d7b18502a07dfb184522a87be7c28347761e3bc6f38808c1d4e064736f6c63430008100033",
    "sourceMap": "559:3346:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3055:337;;;;;;:::i;:::-;;:::i;:::-;;;470:14:73;;463:22;445:41;;433:2;418:18;3055:337:29;;;;;;;;5727:92:26;5796:16;;;;;;;5727:92;;4232:105;;;:::i;:::-;;;;;;;:::i;4781:197:38:-;;;;;;:::i;:::-;;:::i;3592:106::-;3679:12;;3592:106;;;1736:25:73;;;1724:2;1709:18;3592:106:38;1590:177:73;8121:225:26;;;;;;:::i;:::-;;:::i;5400:163::-;;;:::i;:::-;;4834:129:34;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;1449:62:26;;-1:-1:-1;;;;;;;;;;;1449:62:26;;5259:145:34;;;;;;:::i;:::-;;:::i;3441:91:38:-;;;3523:2;2873:36:73;;2861:2;2846:18;3441:91:38;2731:184:73;929:81:41;999:4;;929:81;;6368:214:34;;;;;;:::i;:::-;;:::i;6191:234:38:-;;;;;;:::i;:::-;;:::i;4989:164:26:-;;;:::i;2323:449:29:-;;;;;;:::i;:::-;;:::i;7148:75:26:-;;;:::i;3439:243:29:-;;;;;;:::i;:::-;;:::i;8730:94:26:-;;;;;;:::i;:::-;;:::i;3251:938::-;;;;;;:::i;:::-;;:::i;1858:84:37:-;1928:7;;;;1858:84;;1783:72:26;;-1:-1:-1;;;;;;;;;;;1783:72:26;;4380:127;;;;;;:::i;:::-;;:::i;8875:128::-;;;;;;:::i;:::-;;:::i;6931:71::-;;;:::i;3329:145:34:-;;;;;;:::i;:::-;;:::i;1743:434:29:-;;;;;;:::i;:::-;;:::i;2706:102:38:-;;;:::i;3729:174:29:-;;;;;;:::i;:::-;;:::i;4661:83:26:-;4725:12;;;;4661:83;;2450:49:34;;2495:4;2450:49;;6912:427:38;;;;;;:::i;:::-;;:::i;8526:153:26:-;;;;;;:::i;:::-;;:::i;1488:104:29:-;1555:30;;-1:-1:-1;;;;;1555:30:29;1488:104;;;-1:-1:-1;;;;;5007:32:73;;;4989:51;;4977:2;4962:18;1488:104:29;4843:203:73;6502:184:26;;;:::i;1343:102:29:-;-1:-1:-1;;;;;;;;;;;1409:29:29;-1:-1:-1;;;;;1409:29:29;1343:102;;1299:62:26;;1337:24;1299:62;;5684:147:34;;;;;;:::i;:::-;;:::i;4324:149:38:-;;;;;;:::i;:::-;;:::i;621:95:29:-;;-1:-1:-1;;;;;;;;;;;621:95:29;;1089:62:26;;-1:-1:-1;;;;;;;;;;;1089:62:26;;6067:185;;;:::i;3055:337:29:-;3160:4;-1:-1:-1;;;;;;3183:53:29;;-1:-1:-1;;;3183:53:29;;:97;;-1:-1:-1;;;;;;;3240:40:29;;-1:-1:-1;;;3240:40:29;3183:97;:162;;;-1:-1:-1;;;;;;;3296:49:29;;-1:-1:-1;;;3296:49:29;3183:162;:202;;;;3349:36;3373:11;3349:23;:36::i;:::-;3176:209;3055:337;-1:-1:-1;;3055:337:29:o;4232:105:26:-;4286:13;4318:12;:10;:12::i;:::-;4311:19;;4232:105;:::o;4781:197:38:-;4864:4;929:10:44;4918:32:38;929:10:44;4934:7:38;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:38;;4781:197;-1:-1:-1;;;4781:197:38:o;8121:225:26:-;8276:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;;;;;;;;;8303:36:::1;8322:4;8328:2;8332:6;8303:18;:36::i;:::-;8296:43:::0;8121:225;-1:-1:-1;;;;8121:225:26:o;5400:163::-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;10501:34:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-:1;:48;;;-1:-1:-1::0;4725:12:26;;;;10539:10:::1;10493:90;;;;-1:-1:-1::0;;;10493:90:26::1;;;;;;;:::i;:::-;5482:12:::2;:20:::0;;-1:-1:-1;;5482:20:26::2;::::0;;929:10:44;5529:12:26::2;5543;::::0;5517:39:::2;::::0;5543:12:::2;::::0;;::::2;470:14:73::0;463:22;445:41;;-1:-1:-1;;;;;5517:39:26;;;::::2;::::0;::::2;::::0;433:2:73;418:18;5517:39:26::2;;;;;;;;5400:163:::0;:::o;5259:145:34:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:34;;929:10:44;6463:23:34;6455:83;;;;-1:-1:-1;;;6455:83:34;;6282:2:73;6455:83:34;;;6264:21:73;6321:2;6301:18;;;6294:30;6360:34;6340:18;;;6333:62;-1:-1:-1;;;6411:18:73;;;6404:45;6466:19;;6455:83:34;6080:411:73;6455:83:34;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;6191:234:38:-;6279:4;929:10:44;6333:64:38;929:10:44;6349:7:38;6386:10;6358:25;929:10:44;6349:7:38;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;4989:164:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;4725:12:26;;;;10238:11:::1;10230:52;;;::::0;-1:-1:-1;;;10230:52:26;;6960:2:73;10230:52:26::1;::::0;::::1;6942:21:73::0;6999:2;6979:18;;;6972:30;7038;7018:18;;;7011:58;7086:18;;10230:52:26::1;6758:352:73::0;10230:52:26::1;5073:12:::2;:19:::0;;-1:-1:-1;;5073:19:26::2;5088:4;5073:19;::::0;;5119:12:::2;929:10:44::0;;850:96;2323:449:29;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;2433:30:29;;-1:-1:-1;;;;;2433:30:29;;::::1;::::0;2482:26;::::1;::::0;;;2474:83:::1;;;::::0;-1:-1:-1;;;2474:83:29;;7317:2:73;2474:83:29::1;::::0;::::1;7299:21:73::0;7356:2;7336:18;;;7329:30;7395:34;7375:18;;;7368:62;-1:-1:-1;;;7446:18:73;;;7439:42;7498:19;;2474:83:29::1;7115:408:73::0;2474:83:29::1;-1:-1:-1::0;;;;;2575:25:29;::::1;2567:87;;;::::0;-1:-1:-1;;;2567:87:29;;7730:2:73;2567:87:29::1;::::0;::::1;7712:21:73::0;7769:2;7749:18;;;7742:30;7808:34;7788:18;;;7781:62;-1:-1:-1;;;7859:18:73;;;7852:47;7916:19;;2567:87:29::1;7528:413:73::0;2567:87:29::1;2665:30:::0;:44;;-1:-1:-1;;;;;;2665:44:29::1;-1:-1:-1::0;;;;;2665:44:29;;::::1;::::0;;::::1;::::0;;;2724:41:::1;::::0;2665:44;;2724:41;::::1;::::0;::::1;::::0;-1:-1:-1;;2724:41:29::1;2401:371;2323:449:::0;;:::o;7148:75:26:-;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;7206:10:26::1;:8;:10::i;:::-;7148:75:::0;:::o;3439:243:29:-;1337:24:26;2928:16:34;2939:4;2928:10;:16::i;:::-;3611:28:29::1;3623:7;3632:6;3611:11;:28::i;:::-;3659:7;-1:-1:-1::0;;;;;3654:21:29::1;;3668:6;3654:21;;;;1736:25:73::0;;1724:2;1709:18;;1590:177;3654:21:29::1;;;;;;;;3439:243:::0;;;:::o;8730:94:26:-;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8799:18:::1;8810:6;8799:10;:18::i;3251:938::-:0;3279:19:36;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:36;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:36;1713:19:43;:23;;;3387:66:36;;-1:-1:-1;3436:12:36;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:36;;8148:2:73;3325:201:36;;;8130:21:73;8187:2;8167:18;;;8160:30;8226:34;8206:18;;;8199:62;-1:-1:-1;;;8277:18:73;;;8270:44;8331:19;;3325:201:36;7946:410:73;3325:201:36;3536:12;:16;;-1:-1:-1;;3536:16:36;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:36;;;;;3562:65;-1:-1:-1;;;;;3414:19:26;::::1;3406:60;;;::::0;-1:-1:-1;;;3406:60:26;;8563:2:73;3406:60:26::1;::::0;::::1;8545:21:73::0;8602:2;8582:18;;;8575:30;8641;8621:18;;;8614:58;8689:18;;3406:60:26::1;8361:352:73::0;3406:60:26::1;3503:14;::::0;;::::1;::::0;;::::1;8902:21:73::0;3477:13:26::1;8939:18:73::0;;;8932:29;;;8978:18;;3503:14:26::1;;;;;;;;;;;;3493:25;;;;;;3477:41;;3572:5;3557:9;3546:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;3536:32;;;;;;:41:::0;3528:91:::1;;;::::0;-1:-1:-1;;;3528:91:26;;9209:2:73;3528:91:26::1;::::0;::::1;9191:21:73::0;9248:2;9228:18;;;9221:30;9287:34;9267:18;;;9260:62;-1:-1:-1;;;9338:18:73;;;9331:35;9383:19;;3528:91:26::1;9007:401:73::0;3528:91:26::1;3675:5;3658:11;3647:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3637:34;;;;;;:43:::0;3629:95:::1;;;::::0;-1:-1:-1;;;3629:95:26;;9615:2:73;3629:95:26::1;::::0;::::1;9597:21:73::0;9654:2;9634:18;;;9627:30;9693:34;9673:18;;;9666:62;-1:-1:-1;;;9744:18:73;;;9737:37;9791:19;;3629:95:26::1;9413:403:73::0;3629:95:26::1;3735:22;:20;:22::i;:::-;3767;:20;:22::i;:::-;3799:29;3818:9;3799:18;:29::i;:::-;3838:36;3851:9;3862:11;3838:12;:36::i;:::-;3884:17;:15;:17::i;:::-;3948:37;2495:4:34;3979:5:26::0;3948:10:::1;:37::i;:::-;3995:30;1337:24;4019:5;3995:10;:30::i;:::-;4035;-1:-1:-1::0;;;;;;;;;;;4059:5:26::1;4035:10;:30::i;:::-;-1:-1:-1::0;4128:12:26::1;:20:::0;;-1:-1:-1;;4158:24:26;;;3647:99:36;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:36;;;3721:14;;-1:-1:-1;2873:36:73;;3721:14:36;;2861:2:73;2846:18;3721:14:36;;;;;;;3647:99;3269:483;3251:938:26;;;;:::o;4380:127::-;-1:-1:-1;;;;;3856:18:38;;4452:7:26;3856:18:38;;;:9;:18;;;;;;4478:22:26;3756:125:38;8875:128:26;10501:34;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;10501:34:26:-;:48;;;-1:-1:-1;4725:12:26;;;;10539:10;10493:90;;;;-1:-1:-1;;;10493:90:26;;;;;;;:::i;:::-;8965:31:::1;8980:7;8989:6;8965:14;:31::i;6931:71::-:0;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;6987:8:26::1;:6;:8::i;3329:145:34:-:0;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:34;;;;;;;;;;;;;;;3329:145::o;1743:434:29:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;;;;;;;;;;;1850:29:29;-1:-1:-1;;;;;1850:29:29;;::::1;::::0;1897:24;::::1;::::0;;;1889:80:::1;;;::::0;-1:-1:-1;;;1889:80:29;;10222:2:73;1889:80:29::1;::::0;::::1;10204:21:73::0;10261:2;10241:18;;;10234:30;10300:34;10280:18;;;10273:62;-1:-1:-1;;;10351:18:73;;;10344:41;10402:19;;1889:80:29::1;10020:407:73::0;1889:80:29::1;-1:-1:-1::0;;;;;1987:24:29;::::1;1979:85;;;::::0;-1:-1:-1;;;1979:85:29;;10634:2:73;1979:85:29::1;::::0;::::1;10616:21:73::0;10673:2;10653:18;;;10646:30;10712:34;10692:18;;;10685:62;-1:-1:-1;;;10763:18:73;;;10756:46;10819:19;;1979:85:29::1;10432:412:73::0;1979:85:29::1;2107:10:::0;-1:-1:-1;;;;;;;;;;;2075:42:29;;-1:-1:-1;;;;;;2075:42:29::1;-1:-1:-1::0;;;;;2075:42:29;;::::1;;::::0;;2132:38:::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;;2132:38:29::1;1819:358;1743:434:::0;;:::o;2706:102:38:-;2762:13;2794:7;2787:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:102;:::o;3729:174:29:-;-1:-1:-1;;;;;;;;;;;2928:16:34;2939:4;2928:10;:16::i;:::-;3832:28:29::1;3844:7;3853:6;3832:11;:28::i;:::-;3880:7;-1:-1:-1::0;;;;;3875:21:29::1;;3889:6;3875:21;;;;1736:25:73::0;;1724:2;1709:18;;1590:177;6912:427:38;7005:4;929:10:44;7005:4:38;7086:25;929:10:44;7103:7:38;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:38;;11436:2:73;7121:85:38;;;11418:21:73;11475:2;11455:18;;;11448:30;11514:34;11494:18;;;11487:62;-1:-1:-1;;;11565:18:73;;;11558:35;11610:19;;7121:85:38;11234:401:73;7121:85:38;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:38;;6912:427;-1:-1:-1;;;;6912:427:38:o;8526:153:26:-;8623:4;11049:39;-1:-1:-1;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-;:58;;;-1:-1:-1;5796:16:26;;;;;;;11092:15;11041:108;;;;-1:-1:-1;;;11041:108:26;;;;;;;:::i;:::-;8646:26:::1;8661:2;8665:6;8646:14;:26::i;:::-;8639:33:::0;8526:153;-1:-1:-1;;;8526:153:26:o;6502:184::-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;11049:39:26::1;-1:-1:-1::0;;;;;;;;;;;929:10:44;3329:145:34;:::i;11049:39:26:-:1;:58;;;-1:-1:-1::0;5796:16:26;;;;;;;11092:15:::1;11041:108;;;;-1:-1:-1::0;;;11041:108:26::1;;;;;;;:::i;:::-;6593:16:::2;:24:::0;;-1:-1:-1;;6593:24:26::2;::::0;;929:10:44;6648:12:26::2;-1:-1:-1::0;;;;;6632:47:26::2;;6662:16;;;;;;;;;;;6632:47;;;;470:14:73::0;463:22;445:41;;433:2;418:18;;305:187;5684:147:34;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;4324:149:38:-:0;-1:-1:-1;;;;;4439:18:38;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;6067:185:26:-;2495:4:34;2928:16;2495:4;2928:10;:16::i;:::-;5796::26;;;;;;;10760::::1;10752:65;;;::::0;-1:-1:-1;;;10752:65:26;;11842:2:73;10752:65:26::1;::::0;::::1;11824:21:73::0;11881:2;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;-1:-1:-1;;;11971:18:73;;;11964:34;12015:19;;10752:65:26::1;11640:400:73::0;10752:65:26::1;6160:16:::2;:23:::0;;-1:-1:-1;;6160:23:26::2;;;::::0;;6214:12:::2;929:10:44::0;;850:96;9270:151:26;9355:4;9378:36;9402:11;9378:23;:36::i;2495:98:38:-;2549:13;2581:5;2574:12;;;;;:::i;10794:340::-;-1:-1:-1;;;;;10895:19:38;;10887:68;;;;-1:-1:-1;;;10887:68:38;;12247:2:73;10887:68:38;;;12229:21:73;12286:2;12266:18;;;12259:30;12325:34;12305:18;;;12298:62;-1:-1:-1;;;12376:18:73;;;12369:34;12420:19;;10887:68:38;12045:400:73;10887:68:38;-1:-1:-1;;;;;10973:21:38;;10965:68;;;;-1:-1:-1;;;10965:68:38;;12652:2:73;10965:68:38;;;12634:21:73;12691:2;12671:18;;;12664:30;12730:34;12710:18;;;12703:62;-1:-1:-1;;;12781:18:73;;;12774:32;12823:19;;10965:68:38;12450:398:73;10965:68:38;-1:-1:-1;;;;;11044:18:38;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;1736:25:73;;;11095:32:38;;1709:18:73;11095:32:38;;;;;;;10794:340;;;:::o;5540:256::-;5637:4;929:10:44;5693:38:38;5709:4;929:10:44;5724:6:38;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;3768:103:34:-;3834:30;3845:4;929:10:44;3834::34;:30::i;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:34;;;;;;;;;:36;;-1:-1:-1;;8038:36:34;8070:4;8038:36;;;8120:12;929:10:44;;850:96;8120:12:34;-1:-1:-1;;;;;8093:40:34;8111:7;-1:-1:-1;;;;;8093:40:34;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:34;;;;;;;;;;:37;;-1:-1:-1;;8442:37:34;;;8498:40;929:10:44;;8442:12:34;;8498:40;;8474:5;8498:40;8321:234;;:::o;2676:117:37:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:37::1;::::0;;2764:22:::1;929:10:44::0;2773:12:37::1;2764:22;::::0;-1:-1:-1;;;;;5007:32:73;;;4989:51;;4977:2;4962:18;2764:22:37::1;;;;;;;2676:117::o:0;9900:151:26:-;10021:23;10033:2;10037:6;10021:11;:23::i;848:89:40:-;903:27;929:10:44;923:6:40;903:5;:27::i;2151:65:34:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2151:65:34:o;567:119:41:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;645:34:41::1;674:4;645:28;:34::i;2118:147:38:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2220:38:38::1;2243:5;2250:7;2220:22;:38::i;1063:97:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1126:27:37::1;:25;:27::i;1243:161:40:-:0;1319:46;1335:7;929:10:44;1358:6:40;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2429:115:37:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:37::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:44::0;;850:96;9712:659:38;-1:-1:-1;;;;;9795:21:38;;9787:67;;;;-1:-1:-1;;;9787:67:38;;13467:2:73;9787:67:38;;;13449:21:73;13506:2;13486:18;;;13479:30;13545:34;13525:18;;;13518:62;-1:-1:-1;;;13596:18:73;;;13589:31;13637:19;;9787:67:38;13265:397:73;9787:67:38;9865:49;9886:7;9903:1;9907:6;9865:20;:49::i;:::-;-1:-1:-1;;;;;9950:18:38;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:38;;13869:2:73;9978:71:38;;;13851:21:73;13908:2;13888:18;;;13881:30;13947:34;13927:18;;;13920:62;-1:-1:-1;;;13998:18:73;;;13991:32;14040:19;;9978:71:38;13667:398:73;9978:71:38;-1:-1:-1;;;;;10083:18:38;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;1736:25:73;;;10083:18:38;;;10268:37;;1709:18:73;10268:37:38;;;;;;;5259:145:34;;;:::o;4077:189:38:-;4156:4;929:10:44;4210:28:38;929:10:44;4227:2:38;4231:6;4210:9;:28::i;3029:213:34:-;3114:4;-1:-1:-1;;;;;;3137:58:34;;-1:-1:-1;;;3137:58:34;;:98;;-1:-1:-1;;;;;;;;;;1168:51:46;;;3199:36:34;1060:166:46;11415:411:38;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:38;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:38;;14272:2:73;11634:68:38;;;14254:21:73;14311:2;14291:18;;;14284:30;14350:31;14330:18;;;14323:59;14399:18;;11634:68:38;14070:353:73;11634:68:38;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:38;;7881:68;;;;-1:-1:-1;;;7881:68:38;;14630:2:73;7881:68:38;;;14612:21:73;14669:2;14649:18;;;14642:30;14708:34;14688:18;;;14681:62;-1:-1:-1;;;14759:18:73;;;14752:35;14804:19;;7881:68:38;14428:401:73;7881:68:38;-1:-1:-1;;;;;7967:16:38;;7959:64;;;;-1:-1:-1;;;7959:64:38;;15036:2:73;7959:64:38;;;15018:21:73;15075:2;15055:18;;;15048:30;15114:34;15094:18;;;15087:62;-1:-1:-1;;;15165:18:73;;;15158:33;15208:19;;7959:64:38;14834:399:73;7959:64:38;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;-1:-1:-1;;;;;8105:15:38;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:38;;15440:2:73;8130:72:38;;;15422:21:73;15479:2;15459:18;;;15452:30;15518:34;15498:18;;;15491:62;-1:-1:-1;;;15569:18:73;;;15562:36;15615:19;;8130:72:38;15238:402:73;8130:72:38;-1:-1:-1;;;;;8236:15:38;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;1736:25:73;;1724:2;1709:18;;1590:177;8500:26:38;;;;;;;;8537:37;5259:145:34;4152:501;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:34;;;;;;;;;;-1:-1:-1;;;4278:358:34;;;;;;;:::i;2188:106:37:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:37;;16664:2:73;2246:41:37;;;16646:21:73;16703:2;16683:18;;;16676:30;-1:-1:-1;;;16722:18:73;;;16715:50;16782:18;;2246:41:37;16462:344:73;1063:215:41;999:4;;1188:6;1155:30;3679:12:38;;;3592:106;1155:30:41;:39;;;;:::i;:::-;:48;;1147:86;;;;-1:-1:-1;;;1147:86:41;;17013:2:73;1147:86:41;;;16995:21:73;17052:2;17032:18;;;17025:30;17091:27;17071:18;;;17064:55;17136:18;;1147:86:41;16811:349:73;1147:86:41;1243:28;1255:7;1264:6;1243:11;:28::i;692:158::-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;795:1:41::1;788:4;:8;780:42;;;::::0;-1:-1:-1;;;780:42:41;;17367:2:73;780:42:41::1;::::0;::::1;17349:21:73::0;17406:2;17386:18;;;17379:30;-1:-1:-1;;;17425:18:73;;;17418:51;17486:18;;780:42:41::1;17165:345:73::0;780:42:41::1;832:4;:11:::0;692:158::o;2271:159:38:-;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;2383:5:38::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:38::1;:17;2416:7:::0;2406;:17:::1;:::i;1166:95:37:-:0;5374:13:36;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:36;;;;;;;:::i;:::-;1239:7:37::1;:15:::0;;-1:-1:-1;;1239:15:37::1;::::0;;1166:95::o;2010:106::-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:37;;19921:2:73;2071:38:37;;;19903:21:73;19960:2;19940:18;;;19933:30;-1:-1:-1;;;19979:18:73;;;19972:46;20035:18;;2071:38:37;19719:340:73;9636:227:26;1482:19:37;:17;:19::i;2473:149:45:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:45;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:45;;1984:47;;-1:-1:-1;;;2041:6:45;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:45;;;;;;;;;-1:-1:-1;;;2066:6:45;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:45;;;;;;;;-1:-1:-1;2096:9:45;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:45;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:45;;;;;;;;-1:-1:-1;2207:1:45;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:45;;2228:55;;;;-1:-1:-1;;;2228:55:45;;20712:2:73;2228:55:45;;;20694:21:73;;;20731:18;;;20724:30;20790:34;20770:18;;;20763:62;20842:18;;2228:55:45;20510:356:73;8857:535:38;-1:-1:-1;;;;;8940:21:38;;8932:65;;;;-1:-1:-1;;;8932:65:38;;21073:2:73;8932:65:38;;;21055:21:73;21112:2;21092:18;;;21085:30;21151:33;21131:18;;;21124:61;21202:18;;8932:65:38;20871:355:73;8932:65:38;9008:49;9037:1;9041:7;9050:6;9008:20;:49::i;:::-;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:38;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;1736:25:73;;;9289:37:38;;1709:18:73;9289:37:38;;;;;;;6368:214:34;;:::o;14:286:73:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:73;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:73;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:73;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:73:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:73;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:73:o;1772:328::-;1849:6;1857;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;1772:328;;;;;:::o;2105:180::-;2164:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;-1:-1:-1;2256:23:73;;2105:180;-1:-1:-1;2105:180:73:o;2472:254::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2682:38;2716:2;2705:9;2701:18;2682:38;:::i;:::-;2672:48;;2472:254;;;;;:::o;2920:186::-;2979:6;3032:2;3020:9;3011:7;3007:23;3003:32;3000:52;;;3048:1;3045;3038:12;3000:52;3071:29;3090:9;3071:29;:::i;3296:127::-;3357:10;3352:3;3348:20;3345:1;3338:31;3388:4;3385:1;3378:15;3412:4;3409:1;3402:15;3428:719;3471:5;3524:3;3517:4;3509:6;3505:17;3501:27;3491:55;;3542:1;3539;3532:12;3491:55;3578:6;3565:20;3604:18;3641:2;3637;3634:10;3631:36;;;3647:18;;:::i;:::-;3722:2;3716:9;3690:2;3776:13;;-1:-1:-1;;3772:22:73;;;3796:2;3768:31;3764:40;3752:53;;;3820:18;;;3840:22;;;3817:46;3814:72;;;3866:18;;:::i;:::-;3906:10;3902:2;3895:22;3941:2;3933:6;3926:18;3987:3;3980:4;3975:2;3967:6;3963:15;3959:26;3956:35;3953:55;;;4004:1;4001;3994:12;3953:55;4068:2;4061:4;4053:6;4049:17;4042:4;4034:6;4030:17;4017:54;4115:1;4108:4;4103:2;4095:6;4091:15;4087:26;4080:37;4135:6;4126:15;;;;;;3428:719;;;;:::o;4152:686::-;4258:6;4266;4274;4282;4335:3;4323:9;4314:7;4310:23;4306:33;4303:53;;;4352:1;4349;4342:12;4303:53;4375:29;4394:9;4375:29;:::i;:::-;4365:39;;4455:2;4444:9;4440:18;4427:32;4478:18;4519:2;4511:6;4508:14;4505:34;;;4535:1;4532;4525:12;4505:34;4558:50;4600:7;4591:6;4580:9;4576:22;4558:50;:::i;:::-;4548:60;;4661:2;4650:9;4646:18;4633:32;4617:48;;4690:2;4680:8;4677:16;4674:36;;;4706:1;4703;4696:12;4674:36;;4729:52;4773:7;4762:8;4751:9;4747:24;4729:52;:::i;:::-;4152:686;;;;-1:-1:-1;4719:62:73;;4828:2;4813:18;4800:32;;-1:-1:-1;;;4152:686:73:o;5051:260::-;5119:6;5127;5180:2;5168:9;5159:7;5155:23;5151:32;5148:52;;;5196:1;5193;5186:12;5148:52;5219:29;5238:9;5219:29;:::i;:::-;5209:39;;5267:38;5301:2;5290:9;5286:18;5267:38;:::i;5316:401::-;5518:2;5500:21;;;5557:2;5537:18;;;5530:30;5596:34;5591:2;5576:18;;5569:62;-1:-1:-1;;;5662:2:73;5647:18;;5640:35;5707:3;5692:19;;5316:401::o;5722:353::-;5924:2;5906:21;;;5963:2;5943:18;;;5936:30;6002:31;5997:2;5982:18;;5975:59;6066:2;6051:18;;5722:353::o;6496:127::-;6557:10;6552:3;6548:20;6545:1;6538:31;6588:4;6585:1;6578:15;6612:4;6609:1;6602:15;6628:125;6693:9;;;6714:10;;;6711:36;;;6727:18;;:::i;10849:380::-;10928:1;10924:12;;;;10971;;;10992:61;;11046:4;11038:6;11034:17;11024:27;;10992:61;11099:2;11091:6;11088:14;11068:18;11065:38;11062:161;;11145:10;11140:3;11136:20;11133:1;11126:31;11180:4;11177:1;11170:15;11208:4;11205:1;11198:15;11062:161;;10849:380;;;:::o;12853:407::-;13055:2;13037:21;;;13094:2;13074:18;;;13067:30;13133:34;13128:2;13113:18;;13106:62;-1:-1:-1;;;13199:2:73;13184:18;;13177:41;13250:3;13235:19;;12853:407::o;15645:812::-;16056:25;16051:3;16044:38;16026:3;16111:6;16105:13;16127:75;16195:6;16190:2;16185:3;16181:12;16174:4;16166:6;16162:17;16127:75;:::i;:::-;-1:-1:-1;;;16261:2:73;16221:16;;;16253:11;;;16246:40;16311:13;;16333:76;16311:13;16395:2;16387:11;;16380:4;16368:17;;16333:76;:::i;:::-;16429:17;16448:2;16425:26;;15645:812;-1:-1:-1;;;;15645:812:73:o;17641:545::-;17743:2;17738:3;17735:11;17732:448;;;17779:1;17804:5;17800:2;17793:17;17849:4;17845:2;17835:19;17919:2;17907:10;17903:19;17900:1;17896:27;17890:4;17886:38;17955:4;17943:10;17940:20;17937:47;;;-1:-1:-1;17978:4:73;17937:47;18033:2;18028:3;18024:12;18021:1;18017:20;18011:4;18007:31;17997:41;;18088:82;18106:2;18099:5;18096:13;18088:82;;;18151:17;;;18132:1;18121:13;18088:82;;;18092:3;;;17641:545;;;:::o;18362:1352::-;18488:3;18482:10;18515:18;18507:6;18504:30;18501:56;;;18537:18;;:::i;:::-;18566:97;18656:6;18616:38;18648:4;18642:11;18616:38;:::i;:::-;18610:4;18566:97;:::i;:::-;18718:4;;18782:2;18771:14;;18799:1;18794:663;;;;19501:1;19518:6;19515:89;;;-1:-1:-1;19570:19:73;;;19564:26;19515:89;-1:-1:-1;;18319:1:73;18315:11;;;18311:24;18307:29;18297:40;18343:1;18339:11;;;18294:57;19617:81;;18764:944;;18794:663;17588:1;17581:14;;;17625:4;17612:18;;-1:-1:-1;;18830:20:73;;;18948:236;18962:7;18959:1;18956:14;18948:236;;;19051:19;;;19045:26;19030:42;;19143:27;;;;19111:1;19099:14;;;;18978:19;;18948:236;;;18952:3;19212:6;19203:7;19200:19;19197:201;;;19273:19;;;19267:26;-1:-1:-1;;19356:1:73;19352:14;;;19368:3;19348:24;19344:37;19340:42;19325:58;19310:74;;19197:201;-1:-1:-1;;;;;19444:1:73;19428:14;;;19424:22;19411:36;;-1:-1:-1;18362:1352:73:o;20064:168::-;20104:7;20170:1;20166;20162:6;20158:14;20155:1;20152:21;20147:1;20140:9;20133:17;20129:45;20126:71;;;20177:18;;:::i;:::-;-1:-1:-1;20217:9:73;;20064:168::o;20237:127::-;20298:10;20293:3;20289:20;20286:1;20279:31;20329:4;20326:1;20319:15;20353:4;20350:1;20343:15;20369:136;20408:3;20436:5;20426:39;;20445:18;;:::i;:::-;-1:-1:-1;;;20481:18:73;;20369:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "L2BRIDGE_INFO_STORAGE_POSITION()": "e0557045",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "TRANSFERRER_ROLE()": "63ac5d97",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "burnable()": "a07c7ce4",
    "cap()": "355274ea",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "disableBurn()": "2403c08e",
    "disableTransfer()": "b187984f",
    "enableBurn()": "3b37d1d6",
    "enableTransfer()": "f1b50c1d",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,uint256)": "4d12d4b6",
    "l1Token()": "c01e1bd6",
    "l2Bridge()": "ae1f6aaf",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setL1Token(address)": "94c36f99",
    "setL2Bridge(address)": "3d36d971",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferrable()": "047a7ef1",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"BurnEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldL1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newL1Token\",\"type\":\"address\"}],\"name\":\"L1TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldL2Bridge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newL2Bridge\",\"type\":\"address\"}],\"name\":\"L2BridgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L2BRIDGE_INFO_STORAGE_POSITION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFERRER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newL1Token\",\"type\":\"address\"}],\"name\":\"setL1Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newL2Bridge\",\"type\":\"address\"}],\"name\":\"setL2Bridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferrable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origami\",\"custom:security-contact\":\"contract-security@joinorigami.com\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"overriden so we can emit Burn, which is part of the IL2StandardERC20 interface\",\"params\":{\"account\":\"address to burn tokens from\",\"amount\":\"amount of tokens to burn\"}},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"burnable()\":{\"returns\":{\"_0\":\"true if tokens are burnable, false otherwise.\"}},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"disableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to disabled and by whom.\"},\"disableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to disabled and by whom.\"},\"enableBurn()\":{\"details\":\"this emits an event indicating that the burnable state has been set to enabled and by whom.\"},\"enableTransfer()\":{\"details\":\"this emits an event indicating that the transferrable state has been set to enabled and by whom.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,uint256)\":{\"params\":{\"admin\":\"the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.\",\"supplyCap\":\"cap on the total supply mintable by this contract.\",\"tokenName\":\"the name of the token. Typically this is the name of the DAO.\",\"tokenSymbol\":\"the symbol of the token. Typically this is a short abbreviation of the DAO's name.\"}},\"l1Token()\":{\"details\":\"this is part of the ILegacyMintableERC20 interface\"},\"l2Bridge()\":{\"details\":\"this is _not_ part of the ILegacyMintableERC20 interface, but is still required for compatibility\"},\"mint(address,uint256)\":{\"details\":\"overriden so we can emit Mint, which is part of the IL2StandardERC20 interface\",\"params\":{\"account\":\"address to mint tokens to\",\"amount\":\"amount of tokens to mint\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setL1Token(address)\":{\"params\":{\"newL1Token\":\"address of the paired ERC20 token on L1\"}},\"setL2Bridge(address)\":{\"params\":{\"newL2Bridge\":\"address of the bridge contract on L2\"}},\"supportsInterface(bytes4)\":{\"details\":\"the IERC165 and ILegacyMintableERC20interfaces interfaces are critical for compatiblity with the OP bridge\",\"params\":{\"interfaceId\":\"bytes4 of the interface\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferFrom(address,address,uint256)\":{\"details\":\"this is overridden so we can apply the `whenTransferrable` modifier\"},\"transferrable()\":{\"returns\":{\"_0\":\"true if tokens are transferrable, false otherwise.\"}},\"unpause()\":{\"details\":\"this is only callable by an address that has the PAUSER_ROLE\"}},\"title\":\"L2StandardERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BURNER_ROLE()\":{\"notice\":\"the role hash for granting the ability to burn governance tokens.\"},\"MINTER_ROLE()\":{\"notice\":\"the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin.\"},\"PAUSER_ROLE()\":{\"notice\":\"the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin.\"},\"TRANSFERRER_ROLE()\":{\"notice\":\"the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens.\"},\"burn(address,uint256)\":{\"notice\":\"burns tokens on L2\"},\"burnable()\":{\"notice\":\"indicates whether or not governance tokens are burnable\"},\"disableBurn()\":{\"notice\":\"this function disables the burning of governance tokens. Only the contract admin can call this function.\"},\"disableTransfer()\":{\"notice\":\"this function disables transfers of governance tokens. Only the contract admin can call this function.\"},\"enableBurn()\":{\"notice\":\"this function enables the burning of governance tokens. Only the contract admin can call this function.\"},\"enableTransfer()\":{\"notice\":\"this function enables transfers of governance tokens. Only the contract admin can call this function.\"},\"initialize(address,string,string,uint256)\":{\"notice\":\"Initialize the ERC20Base contract. It is called during contract deployment.\"},\"l1Token()\":{\"notice\":\"returns the address of the paired ERC20 token on L1\"},\"l2Bridge()\":{\"notice\":\"returns the address of the bridge contract on L2\"},\"mint(address,uint256)\":{\"notice\":\"mints tokens on L2\"},\"pause()\":{\"notice\":\"this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations.\"},\"setL1Token(address)\":{\"notice\":\"sets the address of the paired ERC20 token on L1\"},\"setL2Bridge(address)\":{\"notice\":\"sets the address of the bridge contract on L2\"},\"supportsInterface(bytes4)\":{\"notice\":\"returns true if the contract implements the interface defined by interfaceId\"},\"transfer(address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"this allows transfers when the transferrable state is enabled.\"},\"transferrable()\":{\"notice\":\"indicates whether or not governance tokens are transferrable\"},\"unpause()\":{\"notice\":\"this function unpauses the contract\"}},\"notice\":\"an ERC20 extension that is compatible with the Optimism bridge\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/L2StandardERC20.sol\":\"L2StandardERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@diamond/=lib/diamond-2-hardhat/contracts/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"contracts/interfaces/utils/IL2StandardERC20.sol\":{\"keccak256\":\"0xe544f480fb2700781f453b51cbe93b23da081e7716377746a3be2dc555be4fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d5886a596cb58d43c61c26458c5c51b7e9e38aeb94f901cd05542a852d8ed4\",\"dweb:/ipfs/QmerAGFSKe9k5FWN9pJLnhjaZxrn4Ejx1SjiWkznpvHLBg\"]},\"contracts/token/governance/ERC20Base.sol\":{\"keccak256\":\"0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35\",\"dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa\"]},\"contracts/utils/L2StandardERC20.sol\":{\"keccak256\":\"0x2b1d16629c6490dfa40d3dda074b991fde82ff82b082dcc96b10cd16cd97ac81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36b6c29525a6e2c844596c30ce230818723325bf394b8761f518f269364bc24\",\"dweb:/ipfs/QmWUkh42igQaKdJu3sifk2CX2C61FFAtv6AUUrMWhnpAHQ\"]},\"lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BurnEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldL1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newL1Token",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "L1TokenUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldL2Bridge",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newL2Bridge",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "L2BridgeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "L2BRIDGE_INFO_STORAGE_POSITION",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFERRER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1Token",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Bridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newL1Token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setL1Token"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newL2Bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setL2Bridge"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferrable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(address,uint256)": {
            "details": "overriden so we can emit Burn, which is part of the IL2StandardERC20 interface",
            "params": {
              "account": "address to burn tokens from",
              "amount": "amount of tokens to burn"
            }
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "burnable()": {
            "returns": {
              "_0": "true if tokens are burnable, false otherwise."
            }
          },
          "cap()": {
            "details": "Returns the cap on the token's total supply."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "disableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to disabled and by whom."
          },
          "disableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to disabled and by whom."
          },
          "enableBurn()": {
            "details": "this emits an event indicating that the burnable state has been set to enabled and by whom."
          },
          "enableTransfer()": {
            "details": "this emits an event indicating that the transferrable state has been set to enabled and by whom."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,uint256)": {
            "params": {
              "admin": "the address of the contract admin. This address receives all roles by default and should be used to delegate them to DAO committees and/or permanent members.",
              "supplyCap": "cap on the total supply mintable by this contract.",
              "tokenName": "the name of the token. Typically this is the name of the DAO.",
              "tokenSymbol": "the symbol of the token. Typically this is a short abbreviation of the DAO's name."
            }
          },
          "l1Token()": {
            "details": "this is part of the ILegacyMintableERC20 interface"
          },
          "l2Bridge()": {
            "details": "this is _not_ part of the ILegacyMintableERC20 interface, but is still required for compatibility"
          },
          "mint(address,uint256)": {
            "details": "overriden so we can emit Mint, which is part of the IL2StandardERC20 interface",
            "params": {
              "account": "address to mint tokens to",
              "amount": "amount of tokens to mint"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "pause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setL1Token(address)": {
            "params": {
              "newL1Token": "address of the paired ERC20 token on L1"
            }
          },
          "setL2Bridge(address)": {
            "params": {
              "newL2Bridge": "address of the bridge contract on L2"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "the IERC165 and ILegacyMintableERC20interfaces interfaces are critical for compatiblity with the OP bridge",
            "params": {
              "interfaceId": "bytes4 of the interface"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferFrom(address,address,uint256)": {
            "details": "this is overridden so we can apply the `whenTransferrable` modifier"
          },
          "transferrable()": {
            "returns": {
              "_0": "true if tokens are transferrable, false otherwise."
            }
          },
          "unpause()": {
            "details": "this is only callable by an address that has the PAUSER_ROLE"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BURNER_ROLE()": {
            "notice": "the role hash for granting the ability to burn governance tokens."
          },
          "MINTER_ROLE()": {
            "notice": "the role hash for granting the ability to mint new governance tokens. By default, this role is granted to the contract admin."
          },
          "PAUSER_ROLE()": {
            "notice": "the role hash for granting the ability to pause the contract. By default, this role is granted to the contract admin."
          },
          "TRANSFERRER_ROLE()": {
            "notice": "the role has for granting the ability to transfer governance tokens. By default, this role is granted to the contract admin. This is also typically granted to the DAO's treaury multisig for distributing compensation in the form of governance tokens."
          },
          "burn(address,uint256)": {
            "notice": "burns tokens on L2"
          },
          "burnable()": {
            "notice": "indicates whether or not governance tokens are burnable"
          },
          "disableBurn()": {
            "notice": "this function disables the burning of governance tokens. Only the contract admin can call this function."
          },
          "disableTransfer()": {
            "notice": "this function disables transfers of governance tokens. Only the contract admin can call this function."
          },
          "enableBurn()": {
            "notice": "this function enables the burning of governance tokens. Only the contract admin can call this function."
          },
          "enableTransfer()": {
            "notice": "this function enables transfers of governance tokens. Only the contract admin can call this function."
          },
          "initialize(address,string,string,uint256)": {
            "notice": "Initialize the ERC20Base contract. It is called during contract deployment."
          },
          "l1Token()": {
            "notice": "returns the address of the paired ERC20 token on L1"
          },
          "l2Bridge()": {
            "notice": "returns the address of the bridge contract on L2"
          },
          "mint(address,uint256)": {
            "notice": "mints tokens on L2"
          },
          "pause()": {
            "notice": "this function pauses the contract, restricting mints, transfers and burns regardless of the independent state of other configurations."
          },
          "setL1Token(address)": {
            "notice": "sets the address of the paired ERC20 token on L1"
          },
          "setL2Bridge(address)": {
            "notice": "sets the address of the bridge contract on L2"
          },
          "supportsInterface(bytes4)": {
            "notice": "returns true if the contract implements the interface defined by interfaceId"
          },
          "transfer(address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "this allows transfers when the transferrable state is enabled."
          },
          "transferrable()": {
            "notice": "indicates whether or not governance tokens are transferrable"
          },
          "unpause()": {
            "notice": "this function unpauses the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@diamond/=lib/diamond-2-hardhat/contracts/",
        ":@ds-test/=lib/ds-test/src/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@oz/=lib/openzeppelin-contracts/contracts/",
        ":diamond-2-hardhat/=lib/diamond-2-hardhat/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/utils/L2StandardERC20.sol": "L2StandardERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/utils/IL2StandardERC20.sol": {
        "keccak256": "0xe544f480fb2700781f453b51cbe93b23da081e7716377746a3be2dc555be4fb2",
        "urls": [
          "bzz-raw://40d5886a596cb58d43c61c26458c5c51b7e9e38aeb94f901cd05542a852d8ed4",
          "dweb:/ipfs/QmerAGFSKe9k5FWN9pJLnhjaZxrn4Ejx1SjiWkznpvHLBg"
        ],
        "license": "MIT"
      },
      "contracts/token/governance/ERC20Base.sol": {
        "keccak256": "0x86fbfabb8037d72910889e842f0ddfdacda3fcfcd284405433fe8420bab08428",
        "urls": [
          "bzz-raw://f2598dc5035f1ffb8382e81fdb6ce27b3bce9762eeaa0e176239be0ed18dfc35",
          "dweb:/ipfs/QmXRpZsoM8LJQTsyJDmagNEfnxckMaCAoKRqdgmFB1MCZa"
        ],
        "license": "MIT"
      },
      "contracts/utils/L2StandardERC20.sol": {
        "keccak256": "0x2b1d16629c6490dfa40d3dda074b991fde82ff82b082dcc96b10cd16cd97ac81",
        "urls": [
          "bzz-raw://f36b6c29525a6e2c844596c30ce230818723325bf394b8761f518f269364bc24",
          "dweb:/ipfs/QmWUkh42igQaKdJu3sifk2CX2C61FFAtv6AUUrMWhnpAHQ"
        ],
        "license": "MIT"
      },
      "lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
        "keccak256": "0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92",
        "urls": [
          "bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6",
          "dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/utils/L2StandardERC20.sol",
    "id": 5506,
    "exportedSymbols": {
      "ERC20Base": [
        4266
      ],
      "ERC20Upgradeable": [
        8036
      ],
      "IERC165": [
        6719
      ],
      "IL2StandardERC20": [
        3730
      ],
      "ILegacyMintableERC20": [
        3693
      ],
      "L2StandardERC20": [
        5505
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3874:29",
    "nodes": [
      {
        "id": 5267,
        "nodeType": "PragmaDirective",
        "src": "32:23:29",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 5270,
        "nodeType": "ImportDirective",
        "src": "57:103:29",
        "nodes": [],
        "absolutePath": "contracts/interfaces/utils/IL2StandardERC20.sol",
        "file": "contracts/interfaces/utils/IL2StandardERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5506,
        "sourceUnit": 3731,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5268,
              "name": "IL2StandardERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3730,
              "src": "65:16:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5269,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3693,
              "src": "83:20:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5272,
        "nodeType": "ImportDirective",
        "src": "161:67:29",
        "nodes": [],
        "absolutePath": "contracts/token/governance/ERC20Base.sol",
        "file": "contracts/token/governance/ERC20Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5506,
        "sourceUnit": 4267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5271,
              "name": "ERC20Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4266,
              "src": "169:9:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5274,
        "nodeType": "ImportDirective",
        "src": "229:56:29",
        "nodes": [],
        "absolutePath": "lib/diamond-2-hardhat/contracts/interfaces/IERC165.sol",
        "file": "@diamond/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5506,
        "sourceUnit": 6720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5273,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6719,
              "src": "237:7:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5276,
        "nodeType": "ImportDirective",
        "src": "286:82:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5506,
        "sourceUnit": 8037,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5275,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8036,
              "src": "294:16:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5505,
        "nodeType": "ContractDefinition",
        "src": "559:3346:29",
        "nodes": [
          {
            "id": 5286,
            "nodeType": "VariableDeclaration",
            "src": "621:95:29",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0557045",
            "mutability": "constant",
            "name": "L2BRIDGE_INFO_STORAGE_POSITION",
            "nameLocation": "645:30:29",
            "scope": 5505,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5282,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "636f6d2e6f726967616d692e6c326272696467652e696e666f",
                  "id": 5284,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "688:27:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e2",
                    "typeString": "literal_string \"com.origami.l2bridge.info\""
                  },
                  "value": "com.origami.l2bridge.info"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_28cb24054e210488ccd16d253d841d8a5ddb99cc6014fbe4ad307e7eaff5b6e2",
                    "typeString": "literal_string \"com.origami.l2bridge.info\""
                  }
                ],
                "id": 5283,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "678:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5285,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "678:38:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5291,
            "nodeType": "StructDefinition",
            "src": "796:78:29",
            "nodes": [],
            "canonicalName": "L2StandardERC20.L2BridgeInfo",
            "members": [
              {
                "constant": false,
                "id": 5288,
                "mutability": "mutable",
                "name": "l1Token",
                "nameLocation": "834:7:29",
                "nodeType": "VariableDeclaration",
                "scope": 5291,
                "src": "826:15:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5287,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "826:7:29",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5290,
                "mutability": "mutable",
                "name": "l2Bridge",
                "nameLocation": "859:8:29",
                "nodeType": "VariableDeclaration",
                "scope": 5291,
                "src": "851:16:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5289,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "851:7:29",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "L2BridgeInfo",
            "nameLocation": "803:12:29",
            "scope": 5505,
            "visibility": "public"
          },
          {
            "id": 5304,
            "nodeType": "FunctionDefinition",
            "src": "949:347:29",
            "nodes": [],
            "body": {
              "id": 5303,
              "nodeType": "Block",
              "src": "1030:266:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5299,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "1048:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 5303,
                      "src": "1040:16:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5298,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1040:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5301,
                  "initialValue": {
                    "id": 5300,
                    "name": "L2BRIDGE_INFO_STORAGE_POSITION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5286,
                    "src": "1059:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1040:49:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1200:45:29",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1214:21:29",
                        "value": {
                          "name": "position",
                          "nodeType": "YulIdentifier",
                          "src": "1227:8:29"
                        },
                        "variableNames": [
                          {
                            "name": "l2bi.slot",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 5296,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1214:9:29",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1227:8:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 5302,
                  "nodeType": "InlineAssembly",
                  "src": "1191:54:29"
                }
              ]
            },
            "documentation": {
              "id": 5292,
              "nodeType": "StructuredDocumentation",
              "src": "880:64:29",
              "text": "@dev returns the storage pointer for the L2BridgeInfo struct"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l2BridgeInfoStorage",
            "nameLocation": "958:19:29",
            "parameters": {
              "id": 5293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:29"
            },
            "returnParameters": {
              "id": 5297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5296,
                  "mutability": "mutable",
                  "name": "l2bi",
                  "nameLocation": "1024:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5304,
                  "src": "1003:25:29",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                    "typeString": "struct L2StandardERC20.L2BridgeInfo"
                  },
                  "typeName": {
                    "id": 5295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5294,
                      "name": "L2BridgeInfo",
                      "nameLocations": [
                        "1003:12:29"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5291,
                      "src": "1003:12:29"
                    },
                    "referencedDeclaration": 5291,
                    "src": "1003:12:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                      "typeString": "struct L2StandardERC20.L2BridgeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:27:29"
            },
            "scope": 5505,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5315,
            "nodeType": "FunctionDefinition",
            "src": "1343:102:29",
            "nodes": [],
            "body": {
              "id": 5314,
              "nodeType": "Block",
              "src": "1392:53:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5310,
                        "name": "l2BridgeInfoStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5304,
                        "src": "1409:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                          "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                        }
                      },
                      "id": 5311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1409:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                        "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                      }
                    },
                    "id": 5312,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1431:7:29",
                    "memberName": "l1Token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5288,
                    "src": "1409:29:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5309,
                  "id": 5313,
                  "nodeType": "Return",
                  "src": "1402:36:29"
                }
              ]
            },
            "baseFunctions": [
              3676
            ],
            "documentation": {
              "id": 5305,
              "nodeType": "StructuredDocumentation",
              "src": "1302:36:29",
              "text": "@inheritdoc ILegacyMintableERC20"
            },
            "functionSelector": "c01e1bd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l1Token",
            "nameLocation": "1352:7:29",
            "parameters": {
              "id": 5306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:2:29"
            },
            "returnParameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5315,
                  "src": "1383:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:9:29"
            },
            "scope": 5505,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5326,
            "nodeType": "FunctionDefinition",
            "src": "1488:104:29",
            "nodes": [],
            "body": {
              "id": 5325,
              "nodeType": "Block",
              "src": "1538:54:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5321,
                        "name": "l2BridgeInfoStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5304,
                        "src": "1555:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                          "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                        }
                      },
                      "id": 5322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1555:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                        "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                      }
                    },
                    "id": 5323,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1577:8:29",
                    "memberName": "l2Bridge",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5290,
                    "src": "1555:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5320,
                  "id": 5324,
                  "nodeType": "Return",
                  "src": "1548:37:29"
                }
              ]
            },
            "baseFunctions": [
              3729
            ],
            "documentation": {
              "id": 5316,
              "nodeType": "StructuredDocumentation",
              "src": "1451:32:29",
              "text": "@inheritdoc IL2StandardERC20"
            },
            "functionSelector": "ae1f6aaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l2Bridge",
            "nameLocation": "1497:8:29",
            "parameters": {
              "id": 5317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:2:29"
            },
            "returnParameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "1529:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:9:29"
            },
            "scope": 5505,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5370,
            "nodeType": "FunctionDefinition",
            "src": "1743:434:29",
            "nodes": [],
            "body": {
              "id": 5369,
              "nodeType": "Block",
              "src": "1819:358:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5336,
                      "mutability": "mutable",
                      "name": "oldL1Token",
                      "nameLocation": "1837:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 5369,
                      "src": "1829:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5335,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1829:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5340,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5337,
                        "name": "l2BridgeInfoStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5304,
                        "src": "1850:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                          "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                        }
                      },
                      "id": 5338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1850:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                        "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                      }
                    },
                    "id": 5339,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1872:7:29",
                    "memberName": "l1Token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5288,
                    "src": "1850:29:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1829:50:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5342,
                          "name": "newL1Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5329,
                          "src": "1897:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5343,
                          "name": "oldL1Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5336,
                          "src": "1911:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1897:24:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c325374616e6461726445524332303a204c3120746f6b656e2076616c7565206d757374206368616e6765",
                        "id": 5345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1923:45:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb077e0e5afd2f7568d14f967f0f4a63f251d63f2584f9546c833ca55404e294",
                          "typeString": "literal_string \"L2StandardERC20: L1 token value must change\""
                        },
                        "value": "L2StandardERC20: L1 token value must change"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb077e0e5afd2f7568d14f967f0f4a63f251d63f2584f9546c833ca55404e294",
                          "typeString": "literal_string \"L2StandardERC20: L1 token value must change\""
                        }
                      ],
                      "id": 5341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1889:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:80:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5347,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:80:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5349,
                          "name": "newL1Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5329,
                          "src": "1987:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2009:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2001:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5350,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2001:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2001:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1987:24:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c325374616e6461726445524332303a204c3120746f6b656e2063616e6e6f74206265207a65726f2061646472657373",
                        "id": 5355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2013:50:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f754fd13874fc06a7d2d6285f20d4a4bbc877613837e22441af59206d8cc1dbc",
                          "typeString": "literal_string \"L2StandardERC20: L1 token cannot be zero address\""
                        },
                        "value": "L2StandardERC20: L1 token cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f754fd13874fc06a7d2d6285f20d4a4bbc877613837e22441af59206d8cc1dbc",
                          "typeString": "literal_string \"L2StandardERC20: L1 token cannot be zero address\""
                        }
                      ],
                      "id": 5348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1979:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:85:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5357,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:85:29"
                },
                {
                  "expression": {
                    "id": 5362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5358,
                          "name": "l2BridgeInfoStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5304,
                          "src": "2075:19:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                            "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                          }
                        },
                        "id": 5359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2075:21:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                          "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                        }
                      },
                      "id": 5360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2097:7:29",
                      "memberName": "l1Token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5288,
                      "src": "2075:29:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5361,
                      "name": "newL1Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5329,
                      "src": "2107:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2075:42:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5363,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:42:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5365,
                        "name": "oldL1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5336,
                        "src": "2147:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5366,
                        "name": "newL1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5329,
                        "src": "2159:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5364,
                      "name": "L1TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3702,
                      "src": "2132:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 5367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:38:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5368,
                  "nodeType": "EmitStatement",
                  "src": "2127:43:29"
                }
              ]
            },
            "documentation": {
              "id": 5327,
              "nodeType": "StructuredDocumentation",
              "src": "1598:140:29",
              "text": " @notice sets the address of the paired ERC20 token on L1\n @param newL1Token address of the paired ERC20 token on L1"
            },
            "functionSelector": "94c36f99",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5332,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "1799:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5331,
                  "name": "onlyRole",
                  "nameLocations": [
                    "1790:8:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "1790:8:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:28:29"
              }
            ],
            "name": "setL1Token",
            "nameLocation": "1752:10:29",
            "parameters": {
              "id": 5330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5329,
                  "mutability": "mutable",
                  "name": "newL1Token",
                  "nameLocation": "1771:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5370,
                  "src": "1763:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:20:29"
            },
            "returnParameters": {
              "id": 5334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:0:29"
            },
            "scope": 5505,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5414,
            "nodeType": "FunctionDefinition",
            "src": "2323:449:29",
            "nodes": [],
            "body": {
              "id": 5413,
              "nodeType": "Block",
              "src": "2401:371:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5380,
                      "mutability": "mutable",
                      "name": "oldL2Bridge",
                      "nameLocation": "2419:11:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 5413,
                      "src": "2411:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5379,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2411:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5384,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5381,
                        "name": "l2BridgeInfoStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5304,
                        "src": "2433:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                          "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                        }
                      },
                      "id": 5382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2433:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                        "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                      }
                    },
                    "id": 5383,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2455:8:29",
                    "memberName": "l2Bridge",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5290,
                    "src": "2433:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2411:52:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5386,
                          "name": "newL2Bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5373,
                          "src": "2482:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5387,
                          "name": "oldL2Bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5380,
                          "src": "2497:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2482:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c325374616e6461726445524332303a204c32206272696467652076616c7565206d757374206368616e6765",
                        "id": 5389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2510:46:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31f62d570524fe448b4c998843488c20f521fd019dd814fc2df6ffac0c3835a4",
                          "typeString": "literal_string \"L2StandardERC20: L2 bridge value must change\""
                        },
                        "value": "L2StandardERC20: L2 bridge value must change"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31f62d570524fe448b4c998843488c20f521fd019dd814fc2df6ffac0c3835a4",
                          "typeString": "literal_string \"L2StandardERC20: L2 bridge value must change\""
                        }
                      ],
                      "id": 5385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2474:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:83:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5391,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:83:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5393,
                          "name": "newL2Bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5373,
                          "src": "2575:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2598:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2590:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2590:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2590:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2575:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c325374616e6461726445524332303a204c32206272696467652063616e6e6f74206265207a65726f2061646472657373",
                        "id": 5399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2602:51:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cd888b0592016aec373e78c0e63c149cd59867596d75182a9c579a38ade7b52",
                          "typeString": "literal_string \"L2StandardERC20: L2 bridge cannot be zero address\""
                        },
                        "value": "L2StandardERC20: L2 bridge cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cd888b0592016aec373e78c0e63c149cd59867596d75182a9c579a38ade7b52",
                          "typeString": "literal_string \"L2StandardERC20: L2 bridge cannot be zero address\""
                        }
                      ],
                      "id": 5392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2567:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:87:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5401,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:87:29"
                },
                {
                  "expression": {
                    "id": 5406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5402,
                          "name": "l2BridgeInfoStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5304,
                          "src": "2665:19:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_L2BridgeInfo_$5291_storage_ptr_$",
                            "typeString": "function () pure returns (struct L2StandardERC20.L2BridgeInfo storage pointer)"
                          }
                        },
                        "id": 5403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2665:21:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_L2BridgeInfo_$5291_storage_ptr",
                          "typeString": "struct L2StandardERC20.L2BridgeInfo storage pointer"
                        }
                      },
                      "id": 5404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2687:8:29",
                      "memberName": "l2Bridge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5290,
                      "src": "2665:30:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5405,
                      "name": "newL2Bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5373,
                      "src": "2698:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2665:44:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5407,
                  "nodeType": "ExpressionStatement",
                  "src": "2665:44:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5409,
                        "name": "oldL2Bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5380,
                        "src": "2740:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5410,
                        "name": "newL2Bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5373,
                        "src": "2753:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5408,
                      "name": "L2BridgeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3709,
                      "src": "2724:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 5411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:41:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5412,
                  "nodeType": "EmitStatement",
                  "src": "2719:46:29"
                }
              ]
            },
            "documentation": {
              "id": 5371,
              "nodeType": "StructuredDocumentation",
              "src": "2183:135:29",
              "text": " @notice sets the address of the bridge contract on L2\n @param newL2Bridge address of the bridge contract on L2"
            },
            "functionSelector": "3d36d971",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5376,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6762,
                    "src": "2381:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5377,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5375,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2372:8:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "2372:8:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2372:28:29"
              }
            ],
            "name": "setL2Bridge",
            "nameLocation": "2332:11:29",
            "parameters": {
              "id": 5374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5373,
                  "mutability": "mutable",
                  "name": "newL2Bridge",
                  "nameLocation": "2352:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5414,
                  "src": "2344:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:21:29"
            },
            "returnParameters": {
              "id": 5378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:0:29"
            },
            "scope": 5505,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5452,
            "nodeType": "FunctionDefinition",
            "src": "3055:337:29",
            "nodes": [],
            "body": {
              "id": 5451,
              "nodeType": "Block",
              "src": "3166:226:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 5444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 5430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5425,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5417,
                            "src": "3183:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5427,
                                  "name": "ILegacyMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3693,
                                  "src": "3203:20:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$3693_$",
                                    "typeString": "type(contract ILegacyMintableERC20)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$3693_$",
                                    "typeString": "type(contract ILegacyMintableERC20)"
                                  }
                                ],
                                "id": 5426,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3198:4:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 5428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3198:26:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$3693",
                                "typeString": "type(contract ILegacyMintableERC20)"
                              }
                            },
                            "id": 5429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3225:11:29",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "3198:38:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3183:53:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 5436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5431,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5417,
                            "src": "3240:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5433,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6719,
                                  "src": "3260:7:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$6719_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$6719_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 5432,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3255:4:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 5434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3255:13:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$6719",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 5435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3269:11:29",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "3255:25:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3240:40:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3183:97:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5438,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5417,
                          "src": "3296:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5440,
                                "name": "IL2StandardERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3730,
                                "src": "3316:16:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IL2StandardERC20_$3730_$",
                                  "typeString": "type(contract IL2StandardERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IL2StandardERC20_$3730_$",
                                  "typeString": "type(contract IL2StandardERC20)"
                                }
                              ],
                              "id": 5439,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "3311:4:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3311:22:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IL2StandardERC20_$3730",
                              "typeString": "type(contract IL2StandardERC20)"
                            }
                          },
                          "id": 5442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3334:11:29",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "3311:34:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3296:49:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3183:162:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5447,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5417,
                          "src": "3373:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5445,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3349:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_L2StandardERC20_$5505_$",
                            "typeString": "type(contract super L2StandardERC20)"
                          }
                        },
                        "id": 5446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3355:17:29",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4165,
                        "src": "3349:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3349:36:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3183:202:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5424,
                  "id": 5450,
                  "nodeType": "Return",
                  "src": "3176:209:29"
                }
              ]
            },
            "baseFunctions": [
              4165,
              6718
            ],
            "documentation": {
              "id": 5415,
              "nodeType": "StructuredDocumentation",
              "src": "2778:272:29",
              "text": " @notice returns true if the contract implements the interface defined by interfaceId\n @param interfaceId bytes4 of the interface\n @dev the IERC165 and ILegacyMintableERC20interfaces interfaces are critical for compatiblity with the OP bridge"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3064:17:29",
            "overrides": {
              "id": 5421,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5419,
                  "name": "ERC20Base",
                  "nameLocations": [
                    "3131:9:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4266,
                  "src": "3131:9:29"
                },
                {
                  "id": 5420,
                  "name": "IERC165",
                  "nameLocations": [
                    "3142:7:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6719,
                  "src": "3142:7:29"
                }
              ],
              "src": "3122:28:29"
            },
            "parameters": {
              "id": 5418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5417,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3089:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "3082:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5416,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:20:29"
            },
            "returnParameters": {
              "id": 5424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "3160:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3160:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3159:6:29"
            },
            "scope": 5505,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5479,
            "nodeType": "FunctionDefinition",
            "src": "3439:243:29",
            "nodes": [],
            "body": {
              "id": 5478,
              "nodeType": "Block",
              "src": "3601:81:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5469,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5455,
                        "src": "3623:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5470,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5457,
                        "src": "3632:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5466,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3611:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardERC20_$5505_$",
                          "typeString": "type(contract super L2StandardERC20)"
                        }
                      },
                      "id": 5468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3617:5:29",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4207,
                      "src": "3611:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:28:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5472,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:28:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5474,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5455,
                        "src": "3659:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5475,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5457,
                        "src": "3668:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5473,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3716,
                      "src": "3654:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5477,
                  "nodeType": "EmitStatement",
                  "src": "3649:26:29"
                }
              ]
            },
            "baseFunctions": [
              3684,
              4072
            ],
            "documentation": {
              "id": 5453,
              "nodeType": "StructuredDocumentation",
              "src": "3398:36:29",
              "text": "@inheritdoc ILegacyMintableERC20"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5463,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3769,
                    "src": "3584:11:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5464,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5462,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3575:8:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "3575:8:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "3575:21:29"
              }
            ],
            "name": "mint",
            "nameLocation": "3448:4:29",
            "overrides": {
              "id": 5461,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5459,
                  "name": "ERC20Base",
                  "nameLocations": [
                    "3534:9:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4266,
                  "src": "3534:9:29"
                },
                {
                  "id": 5460,
                  "name": "ILegacyMintableERC20",
                  "nameLocations": [
                    "3545:20:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3693,
                  "src": "3545:20:29"
                }
              ],
              "src": "3525:41:29"
            },
            "parameters": {
              "id": 5458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5455,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3461:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5479,
                  "src": "3453:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5457,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3478:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5479,
                  "src": "3470:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3452:33:29"
            },
            "returnParameters": {
              "id": 5465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3601:0:29"
            },
            "scope": 5505,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5504,
            "nodeType": "FunctionDefinition",
            "src": "3729:174:29",
            "nodes": [],
            "body": {
              "id": 5503,
              "nodeType": "Block",
              "src": "3822:81:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5494,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5482,
                        "src": "3844:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5495,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5484,
                        "src": "3853:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5491,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3832:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardERC20_$5505_$",
                          "typeString": "type(contract super L2StandardERC20)"
                        }
                      },
                      "id": 5493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3838:5:29",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7920,
                      "src": "3832:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3832:28:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5497,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:28:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5499,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5482,
                        "src": "3880:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5500,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5484,
                        "src": "3889:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5498,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "3875:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3875:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5502,
                  "nodeType": "EmitStatement",
                  "src": "3870:26:29"
                }
              ]
            },
            "baseFunctions": [
              3692
            ],
            "documentation": {
              "id": 5480,
              "nodeType": "StructuredDocumentation",
              "src": "3688:36:29",
              "text": "@inheritdoc ILegacyMintableERC20"
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5488,
                    "name": "BURNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3775,
                    "src": "3809:11:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5489,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5487,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3800:8:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6773,
                  "src": "3800:8:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "3800:21:29"
              }
            ],
            "name": "burn",
            "nameLocation": "3738:4:29",
            "overrides": {
              "id": 5486,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3791:8:29"
            },
            "parameters": {
              "id": 5485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5482,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3751:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5504,
                  "src": "3743:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5484,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3768:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5504,
                  "src": "3760:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3742:33:29"
            },
            "returnParameters": {
              "id": 5490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3822:0:29"
            },
            "scope": 5505,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5278,
              "name": "ERC20Base",
              "nameLocations": [
                "587:9:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4266,
              "src": "587:9:29"
            },
            "id": 5279,
            "nodeType": "InheritanceSpecifier",
            "src": "587:9:29"
          },
          {
            "baseName": {
              "id": 5280,
              "name": "IL2StandardERC20",
              "nameLocations": [
                "598:16:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3730,
              "src": "598:16:29"
            },
            "id": 5281,
            "nodeType": "InheritanceSpecifier",
            "src": "598:16:29"
          }
        ],
        "canonicalName": "L2StandardERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5277,
          "nodeType": "StructuredDocumentation",
          "src": "370:188:29",
          "text": " @title L2StandardERC20\n @author Origami\n @notice an ERC20 extension that is compatible with the Optimism bridge\n @custom:security-contact contract-security@joinorigami.com"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5505,
          3730,
          3693,
          6719,
          4266,
          8265,
          7055,
          8935,
          8947,
          7128,
          7424,
          8178,
          8036,
          8290,
          8114,
          8662,
          7297
        ],
        "name": "L2StandardERC20",
        "nameLocation": "568:15:29",
        "scope": 5506,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 29
}